{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\full-stack\\\\full-stack-projects\\\\library-app\\\\frontend\\\\react-library\\\\src\\\\layouts\\\\ManageLibraryPage\\\\components\\\\ChangeQuantityOfBooks.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { SpinnerLoading } from '../../Utils/SpinnerLoading';\nimport { Pagination } from '../../Utils/Pagination';\nimport { ChangeQuantityOfBook } from \"./ChangeQuantityOfBook\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ChangeQuantityOfBooks = () => {\n  _s();\n  const [books, setBooks] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [booksPerPage] = useState(5);\n  const [totalAmountOfBooks, setTotalAmountOfBooks] = useState(0);\n  const [totalPages, setTotalPages] = useState(0);\n  const [bookDelete, setBookDelete] = useState(false);\n  useEffect(() => {\n    const fetchBooks = async () => {\n      const baseUrl = `http://localhost:8080/api/books?page=${currentPage - 1}&size=${booksPerPage}`;\n      const response = await fetch(baseUrl);\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n      const responseJson = await response.json();\n      const responseData = responseJson._embedded.books;\n      setTotalAmountOfBooks(responseJson.page.totalElements);\n      setTotalPages(responseJson.page.totalPages);\n      const loadedBooks = [];\n      for (const key in responseData) {\n        loadedBooks.push({\n          id: responseData[key].id,\n          title: responseData[key].title,\n          author: responseData[key].author,\n          description: responseData[key].description,\n          copies: responseData[key].copies,\n          copiesAvailable: responseData[key].copiesAvailable,\n          category: responseData[key].category,\n          img: responseData[key].img\n        });\n      }\n      setBooks(loadedBooks);\n      setIsLoading(false);\n    };\n    fetchBooks().catch(error => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    });\n  }, [currentPage, bookDelete]);\n  const indexOfLastBook = currentPage * booksPerPage;\n  const indexOfFirstBook = indexOfLastBook - booksPerPage;\n  let lastItem = booksPerPage * currentPage <= totalAmountOfBooks ? booksPerPage * currentPage : totalAmountOfBooks;\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  const deleteBook = () => setBookDelete(!bookDelete);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(SpinnerLoading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this);\n  }\n  if (httpError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container m-5\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: httpError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [totalAmountOfBooks > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Number of results: (\", totalAmountOfBooks, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [indexOfFirstBook + 1, \" to \", lastItem, \" of \", totalAmountOfBooks, \" items:\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this), books.map(book => /*#__PURE__*/_jsxDEV(ChangeQuantityOfBook, {\n        book: book,\n        deleteBook: deleteBook\n      }, book.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 24\n      }, this))]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Add a book before changing quantity\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: currentPage,\n      totalPages: totalPages,\n      paginate: paginate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n_s(ChangeQuantityOfBooks, \"McLVz5Y8QR+eLejlL8LK1acmwvk=\");\n_c = ChangeQuantityOfBooks;\nvar _c;\n$RefreshReg$(_c, \"ChangeQuantityOfBooks\");","map":{"version":3,"names":["React","useEffect","useState","SpinnerLoading","Pagination","ChangeQuantityOfBook","jsxDEV","_jsxDEV","Fragment","_Fragment","ChangeQuantityOfBooks","_s","books","setBooks","isLoading","setIsLoading","httpError","setHttpError","currentPage","setCurrentPage","booksPerPage","totalAmountOfBooks","setTotalAmountOfBooks","totalPages","setTotalPages","bookDelete","setBookDelete","fetchBooks","baseUrl","response","fetch","ok","Error","responseJson","json","responseData","_embedded","page","totalElements","loadedBooks","key","push","id","title","author","description","copies","copiesAvailable","category","img","catch","error","message","indexOfLastBook","indexOfFirstBook","lastItem","paginate","pageNumber","deleteBook","fileName","_jsxFileName","lineNumber","columnNumber","className","children","map","book","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/full-stack/full-stack-projects/library-app/frontend/react-library/src/layouts/ManageLibraryPage/components/ChangeQuantityOfBooks.tsx"],"sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport BookModel from '../../../models/BookModel';\nimport { SpinnerLoading } from '../../Utils/SpinnerLoading';\nimport { Pagination } from '../../Utils/Pagination';\nimport { ChangeQuantityOfBook } from \"./ChangeQuantityOfBook\";\n\nexport const ChangeQuantityOfBooks = () => {\n\n    const [books, setBooks] = useState<BookModel[]>([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [httpError, setHttpError] = useState(null);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [booksPerPage] = useState(5);\n    const [totalAmountOfBooks, setTotalAmountOfBooks] = useState(0);\n    const [totalPages, setTotalPages] = useState(0);\n\n    const [bookDelete, setBookDelete] = useState(false);\n\n    useEffect(() => {\n        const fetchBooks = async () => {\n            const baseUrl: string = `http://localhost:8080/api/books?page=${currentPage - 1}&size=${booksPerPage}`;\n\n            const response = await fetch(baseUrl);\n\n            if (!response.ok) {\n                throw new Error('Something went wrong!');\n            }\n\n            const responseJson = await response.json();\n\n            const responseData = responseJson._embedded.books;\n\n            setTotalAmountOfBooks(responseJson.page.totalElements);\n            setTotalPages(responseJson.page.totalPages);\n\n            const loadedBooks: BookModel[] = [];\n\n            for (const key in responseData) {\n                loadedBooks.push({\n                    id: responseData[key].id,\n                    title: responseData[key].title,\n                    author: responseData[key].author,\n                    description: responseData[key].description,\n                    copies: responseData[key].copies,\n                    copiesAvailable: responseData[key].copiesAvailable,\n                    category: responseData[key].category,\n                    img: responseData[key].img,\n                });\n            }\n\n            setBooks(loadedBooks);\n            setIsLoading(false);\n        };\n        fetchBooks().catch((error: any) => {\n            setIsLoading(false);\n            setHttpError(error.message);\n        })\n    }, [currentPage, bookDelete]);\n\n    const indexOfLastBook: number = currentPage * booksPerPage;\n    const indexOfFirstBook: number = indexOfLastBook - booksPerPage;\n    let lastItem = booksPerPage * currentPage <= totalAmountOfBooks ?\n        booksPerPage * currentPage : totalAmountOfBooks;\n\n    const paginate = (pageNumber: number) => setCurrentPage(pageNumber);\n\n    const deleteBook = () => setBookDelete(!bookDelete);\n\n    if (isLoading) {\n        return (\n            <SpinnerLoading/>\n        );\n    }\n\n    if (httpError) {\n        return (\n            <div className='container m-5'>\n                <p>{httpError}</p>\n            </div>\n        );\n    }\n\n    return (\n        <div className='container mt-5'>\n            {totalAmountOfBooks > 0 ?\n                <>\n                    <div className='mt-3'>\n                        <h3>Number of results: ({totalAmountOfBooks})</h3>\n                    </div>\n                    <p>\n                        {indexOfFirstBook + 1} to {lastItem} of {totalAmountOfBooks} items: \n                    </p>\n                    {books.map(book => (\n                       <ChangeQuantityOfBook book={book} key={book.id} deleteBook={deleteBook}/>\n                    ))}\n                </>\n                :\n                <h5>Add a book before changing quantity</h5>\n            }\n            {totalPages > 1 && <Pagination currentPage={currentPage} totalPages={totalPages} paginate={paginate}/>}\n        </div>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}