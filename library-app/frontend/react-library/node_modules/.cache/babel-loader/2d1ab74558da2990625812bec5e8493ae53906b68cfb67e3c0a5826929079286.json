{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\full-stack\\\\full-stack-projects\\\\library-app\\\\frontend\\\\react-library\\\\src\\\\Auth\\\\LoginWidget.jsx\",\n  _s = $RefreshSig$();\nimport { Redirect } from \"react-router-dom\";\nimport { useOktaAuth } from \"@okta/okta-react\";\nimport { SpinnerLoading } from \"../layouts/Utils/SpinnerLoading\";\nimport OktaSignInWidget from \"./OktSignInWidget\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginWidget = ({\n  config\n}) => {\n  _s();\n  const {\n    oktaAuth,\n    authState\n  } = useOktaAuth();\n  const onSuccess = tokens => {\n    oktaAuth.handleLoginRedirect(tokens);\n  };\n  const onError = err => {\n    console.log(\"Sign in error: \", err);\n  };\n  if (!authState) {\n    return /*#__PURE__*/_jsxDEV(SpinnerLoading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this);\n  }\n  return authState.isAuthenticated ? /*#__PURE__*/_jsxDEV(Redirect, {\n    to: {\n      pathname: \"/\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(OktaSignInWidget, {\n    config: config,\n    onSuccess: onSuccess,\n    onError: onError\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginWidget, \"qdsT9jBK4DlAu1NWM1+aNu+omO0=\", false, function () {\n  return [useOktaAuth];\n});\n_c = LoginWidget;\nexport default LoginWidget;\nvar _c;\n$RefreshReg$(_c, \"LoginWidget\");","map":{"version":3,"names":["Redirect","useOktaAuth","SpinnerLoading","OktaSignInWidget","jsxDEV","_jsxDEV","LoginWidget","config","_s","oktaAuth","authState","onSuccess","tokens","handleLoginRedirect","onError","err","console","log","fileName","_jsxFileName","lineNumber","columnNumber","isAuthenticated","to","pathname","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/full-stack/full-stack-projects/library-app/frontend/react-library/src/Auth/LoginWidget.jsx"],"sourcesContent":["import { Redirect } from \"react-router-dom\";\r\nimport { useOktaAuth } from \"@okta/okta-react\";\r\nimport { SpinnerLoading } from \"../layouts/Utils/SpinnerLoading\";\r\nimport OktaSignInWidget from \"./OktSignInWidget\";\r\n\r\nconst LoginWidget = ({config}) => {\r\n    const {oktaAuth, authState} = useOktaAuth();\r\n    const onSuccess = (tokens) => {\r\n        oktaAuth.handleLoginRedirect(tokens);\r\n    };\r\n\r\n    const onError = (err) => {\r\n        console.log(\"Sign in error: \", err);\r\n    }\r\n\r\n    if(!authState) {\r\n        return(\r\n            <SpinnerLoading/>\r\n        );\r\n    }\r\n\r\n    return authState.isAuthenticated ?\r\n    <Redirect to={{pathname: \"/\"}}/>\r\n    :\r\n    <OktaSignInWidget config={config} onSuccess={onSuccess} onError={onError}/>\r\n};\r\n\r\nexport default LoginWidget;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,cAAc,QAAQ,iCAAiC;AAChE,OAAOC,gBAAgB,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,WAAW,GAAGA,CAAC;EAACC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC9B,MAAM;IAACC,QAAQ;IAAEC;EAAS,CAAC,GAAGT,WAAW,CAAC,CAAC;EAC3C,MAAMU,SAAS,GAAIC,MAAM,IAAK;IAC1BH,QAAQ,CAACI,mBAAmB,CAACD,MAAM,CAAC;EACxC,CAAC;EAED,MAAME,OAAO,GAAIC,GAAG,IAAK;IACrBC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,GAAG,CAAC;EACvC,CAAC;EAED,IAAG,CAACL,SAAS,EAAE;IACX,oBACIL,OAAA,CAACH,cAAc;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAEzB;EAEA,OAAOX,SAAS,CAACY,eAAe,gBAChCjB,OAAA,CAACL,QAAQ;IAACuB,EAAE,EAAE;MAACC,QAAQ,EAAE;IAAG;EAAE;IAAAN,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC,gBAEhChB,OAAA,CAACF,gBAAgB;IAACI,MAAM,EAAEA,MAAO;IAACI,SAAS,EAAEA,SAAU;IAACG,OAAO,EAAEA;EAAQ;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAC/E,CAAC;AAACb,EAAA,CApBIF,WAAW;EAAA,QACiBL,WAAW;AAAA;AAAAwB,EAAA,GADvCnB,WAAW;AAsBjB,eAAeA,WAAW;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}