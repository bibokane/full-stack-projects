{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport _reduceInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/reduce';\nimport _Reflect$construct from '@babel/runtime-corejs3/core-js-stable/reflect/construct';\nimport _classCallCheck from '@babel/runtime-corejs3/helpers/classCallCheck';\nimport _inherits from '@babel/runtime-corejs3/helpers/inherits';\nimport _possibleConstructorReturn from '@babel/runtime-corejs3/helpers/possibleConstructorReturn';\nimport _getPrototypeOf from '@babel/runtime-corejs3/helpers/getPrototypeOf';\nimport _assertThisInitialized from '@babel/runtime-corejs3/helpers/assertThisInitialized';\nimport _wrapNativeSuper from '@babel/runtime-corejs3/helpers/wrapNativeSuper';\nimport _Object$setPrototypeOf from '@babel/runtime-corejs3/core-js-stable/object/set-prototype-of';\nimport _sliceInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/slice';\nimport _Promise from '@babel/runtime-corejs3/core-js-stable/promise';\nimport _concatInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/concat';\nimport _JSON$stringify from '@babel/runtime-corejs3/core-js-stable/json/stringify';\nimport _indexOfInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/index-of';\nimport _asyncToGenerator from '@babel/runtime-corejs3/helpers/asyncToGenerator';\nimport _createClass from '@babel/runtime-corejs3/helpers/createClass';\nimport _regeneratorRuntime from '@babel/runtime-corejs3/regenerator';\nimport _Object$assign from '@babel/runtime-corejs3/core-js-stable/object/assign';\nimport _Object$keys from '@babel/runtime-corejs3/core-js-stable/object/keys';\nimport _typeof from '@babel/runtime-corejs3/helpers/typeof';\nimport _Array$from from '@babel/runtime-corejs3/core-js-stable/array/from';\nimport _slicedToArray from '@babel/runtime-corejs3/helpers/slicedToArray';\nimport _mapInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/map';\nimport _Object$entries from '@babel/runtime-corejs3/core-js-stable/object/entries';\nimport _keysInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/keys';\nimport _Object$values from '@babel/runtime-corejs3/core-js-stable/object/values';\nimport _findInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/find';\nimport Cookies from 'js-cookie';\nimport _filterInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/filter';\nimport _parseInt from '@babel/runtime-corejs3/core-js-stable/parse-int';\nimport _toConsumableArray from '@babel/runtime-corejs3/helpers/toConsumableArray';\nimport _Map from '@babel/runtime-corejs3/core-js-stable/map';\nimport _valuesInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/values';\nimport _Symbol from '@babel/runtime-corejs3/core-js-stable/symbol';\nimport _getIteratorMethod from '@babel/runtime-corejs3/core-js/get-iterator-method';\nimport { BroadcastChannel, createLeaderElection } from 'broadcast-channel';\nimport PCancelable from 'p-cancelable';\nimport _entriesInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/entries';\nimport crossFetch from 'cross-fetch';\nimport _Object$fromEntries from '@babel/runtime-corejs3/core-js-stable/object/from-entries';\nimport { JSONPath } from 'jsonpath-plus';\nimport _includesInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/includes';\nimport _defineProperty from '@babel/runtime-corejs3/helpers/defineProperty';\nimport _get from '@babel/runtime-corejs3/helpers/get';\nimport _Number$isInteger from '@babel/runtime-corejs3/core-js-stable/number/is-integer';\nimport _URL2 from '@babel/runtime-corejs3/core-js-stable/url';\nimport Emitter from 'tiny-emitter';\nfunction _createSuper$x(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$x();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct$x() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar CustomError = function (_Error) {\n  _inherits(CustomError, _Error);\n  var _super = _createSuper$x(CustomError);\n  function CustomError(message) {\n    var _this;\n    _classCallCheck(this, CustomError);\n    _this = _super.call(this, message);\n    _Object$setPrototypeOf(_assertThisInitialized(_this), (this instanceof CustomError ? this.constructor : void 0).prototype);\n    return _this;\n  }\n  return CustomError;\n}(_wrapNativeSuper(Error));\nfunction _createSuper$w(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$w();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct$w() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar AuthApiError = function (_CustomError) {\n  _inherits(AuthApiError, _CustomError);\n  var _super = _createSuper$w(AuthApiError);\n  function AuthApiError(err, xhr) {\n    var _this;\n    _classCallCheck(this, AuthApiError);\n    var message = err.errorSummary;\n    _this = _super.call(this, message);\n    _this.name = 'AuthApiError';\n    _this.errorSummary = err.errorSummary;\n    _this.errorCode = err.errorCode;\n    _this.errorLink = err.errorLink;\n    _this.errorId = err.errorId;\n    _this.errorCauses = err.errorCauses;\n    if (xhr) {\n      _this.xhr = xhr;\n    }\n    return _this;\n  }\n  return AuthApiError;\n}(CustomError);\nfunction _createSuper$v(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$v();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct$v() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar AuthPollStopError = function (_CustomError) {\n  _inherits(AuthPollStopError, _CustomError);\n  var _super = _createSuper$v(AuthPollStopError);\n  function AuthPollStopError() {\n    _classCallCheck(this, AuthPollStopError);\n    var message = 'The poll was stopped by the sdk';\n    return _super.call(this, message);\n  }\n  return AuthPollStopError;\n}(CustomError);\nfunction _createSuper$u(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$u();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct$u() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar AuthSdkError = function (_CustomError) {\n  _inherits(AuthSdkError, _CustomError);\n  var _super = _createSuper$u(AuthSdkError);\n  function AuthSdkError(msg, xhr) {\n    var _this;\n    _classCallCheck(this, AuthSdkError);\n    _this = _super.call(this, msg);\n    _this.name = 'AuthSdkError';\n    _this.errorCode = 'INTERNAL';\n    _this.errorSummary = msg;\n    _this.errorLink = 'INTERNAL';\n    _this.errorId = 'INTERNAL';\n    _this.errorCauses = [];\n    if (xhr) {\n      _this.xhr = xhr;\n    }\n    return _this;\n  }\n  return AuthSdkError;\n}(CustomError);\nfunction _createSuper$t(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$t();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct$t() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar OAuthError = function (_CustomError) {\n  _inherits(OAuthError, _CustomError);\n  var _super = _createSuper$t(OAuthError);\n  function OAuthError(errorCode, summary) {\n    var _this;\n    _classCallCheck(this, OAuthError);\n    _this = _super.call(this, summary);\n    _this.name = 'OAuthError';\n    _this.errorCode = errorCode;\n    _this.errorSummary = summary;\n    _this.error = errorCode;\n    _this.error_description = summary;\n    return _this;\n  }\n  return OAuthError;\n}(CustomError);\nfunction isAuthApiError(obj) {\n  return obj instanceof AuthApiError;\n}\nvar a = function a(str) {\n  return atob(str);\n};\nvar b = function b(str) {\n  return btoa(str);\n};\nvar c = typeof crypto === 'undefined' ? null : crypto;\nfunction stringToBase64Url(str) {\n  var b64 = b(str);\n  return base64ToBase64Url(b64);\n}\nfunction base64ToBase64Url(b64) {\n  return b64.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n}\nfunction base64UrlToBase64(b64u) {\n  return b64u.replace(/-/g, '+').replace(/_/g, '/');\n}\nfunction base64UrlToString(b64u) {\n  var b64 = base64UrlToBase64(b64u);\n  switch (b64.length % 4) {\n    case 0:\n      break;\n    case 2:\n      b64 += '==';\n      break;\n    case 3:\n      b64 += '=';\n      break;\n    default:\n      throw new AuthSdkError('Not a valid Base64Url');\n  }\n  var utf8 = a(b64);\n  try {\n    return decodeURIComponent(escape(utf8));\n  } catch (e) {\n    return utf8;\n  }\n}\nfunction stringToBuffer(str) {\n  var buffer = new Uint8Array(str.length);\n  for (var i = 0; i < str.length; i++) {\n    buffer[i] = str.charCodeAt(i);\n  }\n  return buffer;\n}\nfunction base64UrlDecode(str) {\n  return a(base64UrlToBase64(str));\n}\nfunction base64UrlToBuffer(b64u) {\n  return Uint8Array.from(base64UrlDecode(b64u), function (c) {\n    return c.charCodeAt(0);\n  });\n}\nfunction bufferToBase64Url(bin) {\n  var _context;\n  return b(_reduceInstanceProperty(_context = new Uint8Array(bin)).call(_context, function (s, byte) {\n    return s + String.fromCharCode(byte);\n  }, ''));\n}\nfunction getOidcHash(str) {\n  var buffer = new TextEncoder().encode(str);\n  return c.subtle.digest('SHA-256', buffer).then(function (arrayBuffer) {\n    var intBuffer = new Uint8Array(arrayBuffer);\n    var firstHalf = _sliceInstanceProperty(intBuffer).call(intBuffer, 0, 16);\n    var hash = String.fromCharCode.apply(null, firstHalf);\n    var b64u = stringToBase64Url(hash);\n    return b64u;\n  });\n}\nfunction getNativeConsole() {\n  if (typeof window !== 'undefined') {\n    return window.console;\n  } else if (typeof console !== 'undefined') {\n    return console;\n  } else {\n    return undefined;\n  }\n}\nfunction getConsole() {\n  var nativeConsole = getNativeConsole();\n  if (nativeConsole && nativeConsole.log) {\n    return nativeConsole;\n  }\n  return {\n    log: function log() {},\n    warn: function warn() {},\n    group: function group() {},\n    groupEnd: function groupEnd() {}\n  };\n}\nfunction warn(text) {\n  getConsole().warn('[okta-auth-sdk] WARN: ' + text);\n}\nfunction deprecate(text) {\n  getConsole().warn('[okta-auth-sdk] DEPRECATION: ' + text);\n}\nfunction deprecateWrap(text, fn) {\n  return function () {\n    deprecate(text);\n    return fn.apply(null, arguments);\n  };\n}\nfunction isoToUTCString(str) {\n  var parts = str.match(/\\d+/g),\n    isoTime = Date.UTC(parts[0], parts[1] - 1, parts[2], parts[3], parts[4], parts[5]),\n    isoDate = new Date(isoTime);\n  return isoDate.toUTCString();\n}\nfunction genRandomString(length) {\n  var randomCharset = 'abcdefghijklnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  var random = '';\n  for (var c = 0, cl = randomCharset.length; c < length; ++c) {\n    random += randomCharset[Math.floor(Math.random() * cl)];\n  }\n  return random;\n}\nfunction delay(ms) {\n  return new _Promise(function (resolve) {\n    setTimeout(resolve, ms);\n  });\n}\nfunction bind(fn, ctx) {\n  var additionalArgs = _sliceInstanceProperty(Array.prototype).call(arguments, 2);\n  return function () {\n    var args = _sliceInstanceProperty(Array.prototype).call(arguments);\n    args = _concatInstanceProperty(additionalArgs).call(additionalArgs, args);\n    return fn.apply(ctx, args);\n  };\n}\nfunction extend() {\n  var obj1 = arguments[0];\n  var objArray = _sliceInstanceProperty([]).call(arguments, 1);\n  objArray.forEach(function (obj) {\n    for (var prop in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, prop) && obj[prop] !== undefined) {\n        obj1[prop] = obj[prop];\n      }\n    }\n  });\n  return obj1;\n}\nfunction removeNils(obj) {\n  var cleaned = {};\n  for (var prop in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n      var value = obj[prop];\n      if (value !== null && value !== undefined) {\n        cleaned[prop] = value;\n      }\n    }\n  }\n  return cleaned;\n}\nfunction clone(obj) {\n  if (obj) {\n    var str = _JSON$stringify(obj);\n    if (str) {\n      return JSON.parse(str);\n    }\n  }\n  return obj;\n}\nfunction omit(obj) {\n  var newobj = {};\n  for (var _len = arguments.length, props = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    props[_key - 1] = arguments[_key];\n  }\n  for (var p in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, p) && _indexOfInstanceProperty(props).call(props, p) == -1) {\n      newobj[p] = obj[p];\n    }\n  }\n  return clone(newobj);\n}\nfunction find(collection, searchParams) {\n  var c = collection.length;\n  while (c--) {\n    var item = collection[c];\n    var found = true;\n    for (var prop in searchParams) {\n      if (!Object.prototype.hasOwnProperty.call(searchParams, prop)) {\n        continue;\n      }\n      if (item[prop] !== searchParams[prop]) {\n        found = false;\n        break;\n      }\n    }\n    if (found) {\n      return item;\n    }\n  }\n}\nfunction getLink(obj, linkName, altName) {\n  if (!obj || !obj._links) {\n    return;\n  }\n  var link = clone(obj._links[linkName]);\n  if (link && link.name && altName) {\n    if (link.name === altName) {\n      return link;\n    }\n  } else {\n    return link;\n  }\n}\nfunction isString(obj) {\n  return Object.prototype.toString.call(obj) === '[object String]';\n}\nfunction isObject(obj) {\n  return Object.prototype.toString.call(obj) === '[object Object]';\n}\nfunction isNumber(obj) {\n  return Object.prototype.toString.call(obj) === '[object Number]';\n}\nfunction isFunction(fn) {\n  return !!fn && {}.toString.call(fn) === '[object Function]';\n}\nfunction isPromise(obj) {\n  return obj && obj.finally && typeof obj.finally === 'function';\n}\nfunction isAbsoluteUrl(url) {\n  return /^(?:[a-z]+:)?\\/\\//i.test(url);\n}\nfunction toAbsoluteUrl() {\n  var _context, _context2;\n  var url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var baseUrl = arguments.length > 1 ? arguments[1] : undefined;\n  if (isAbsoluteUrl(url)) {\n    return url;\n  }\n  baseUrl = removeTrailingSlash(baseUrl);\n  return url[0] === '/' ? _concatInstanceProperty(_context = \"\".concat(baseUrl)).call(_context, url) : _concatInstanceProperty(_context2 = \"\".concat(baseUrl, \"/\")).call(_context2, url);\n}\nfunction toRelativeUrl() {\n  var url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var baseUrl = arguments.length > 1 ? arguments[1] : undefined;\n  if (isAbsoluteUrl(url)) {\n    url = url.substring(baseUrl.length);\n  }\n  return url[0] === '/' ? url : \"/\".concat(url);\n}\nfunction toQueryString(obj) {\n  var str = [];\n  if (obj !== null) {\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key) && obj[key] !== undefined && obj[key] !== null) {\n        str.push(key + '=' + encodeURIComponent(obj[key]));\n      }\n    }\n  }\n  if (str.length) {\n    return '?' + str.join('&');\n  } else {\n    return '';\n  }\n}\nfunction removeTrailingSlash(path) {\n  if (!path) {\n    return;\n  }\n  var trimmed = path.replace(/^\\s+|\\s+$/gm, '');\n  trimmed = trimmed.replace(/\\/+$/, '');\n  return trimmed;\n}\nfunction verifyToken$1(idToken, key) {\n  key = clone(key);\n  var format = 'jwk';\n  var algo = {\n    name: 'RSASSA-PKCS1-v1_5',\n    hash: {\n      name: 'SHA-256'\n    }\n  };\n  var extractable = true;\n  var usages = ['verify'];\n  delete key.use;\n  return c.subtle.importKey(format, key, algo, extractable, usages).then(function (cryptoKey) {\n    var jwt = idToken.split('.');\n    var payload = stringToBuffer(jwt[0] + '.' + jwt[1]);\n    var b64Signature = base64UrlDecode(jwt[2]);\n    var signature = stringToBuffer(b64Signature);\n    return c.subtle.verify(algo, cryptoKey, signature, payload);\n  });\n}\nvar crypto$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  stringToBase64Url: stringToBase64Url,\n  base64ToBase64Url: base64ToBase64Url,\n  base64UrlToBase64: base64UrlToBase64,\n  base64UrlToString: base64UrlToString,\n  stringToBuffer: stringToBuffer,\n  base64UrlDecode: base64UrlDecode,\n  base64UrlToBuffer: base64UrlToBuffer,\n  bufferToBase64Url: bufferToBase64Url,\n  getOidcHash: getOidcHash,\n  verifyToken: verifyToken$1,\n  atob: a,\n  btoa: b,\n  webcrypto: c\n});\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n\nfunction __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\nvar STATE_TOKEN_KEY_NAME = 'oktaStateToken';\nvar DEFAULT_POLLING_DELAY = 500;\nvar DEFAULT_MAX_CLOCK_SKEW = 300;\nvar DEFAULT_CACHE_DURATION = 86400;\nvar REDIRECT_OAUTH_PARAMS_NAME = 'okta-oauth-redirect-params';\nvar REDIRECT_STATE_COOKIE_NAME = 'okta-oauth-state';\nvar REDIRECT_NONCE_COOKIE_NAME = 'okta-oauth-nonce';\nvar TOKEN_STORAGE_NAME = 'okta-token-storage';\nvar CACHE_STORAGE_NAME = 'okta-cache-storage';\nvar PKCE_STORAGE_NAME = 'okta-pkce-storage';\nvar TRANSACTION_STORAGE_NAME = 'okta-transaction-storage';\nvar SHARED_TRANSACTION_STORAGE_NAME = 'okta-shared-transaction-storage';\nvar ORIGINAL_URI_STORAGE_NAME = 'okta-original-uri-storage';\nvar IDX_RESPONSE_STORAGE_NAME = 'okta-idx-response-storage';\nvar ACCESS_TOKEN_STORAGE_KEY = 'accessToken';\nvar ID_TOKEN_STORAGE_KEY = 'idToken';\nvar REFRESH_TOKEN_STORAGE_KEY = 'refreshToken';\nvar REFERRER_PATH_STORAGE_KEY = 'referrerPath';\nvar MIN_VERIFIER_LENGTH = 43;\nvar MAX_VERIFIER_LENGTH = 128;\nvar DEFAULT_CODE_CHALLENGE_METHOD = 'S256';\nvar IDX_API_VERSION = '1.0.0';\nvar constants = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  STATE_TOKEN_KEY_NAME: STATE_TOKEN_KEY_NAME,\n  DEFAULT_POLLING_DELAY: DEFAULT_POLLING_DELAY,\n  DEFAULT_MAX_CLOCK_SKEW: DEFAULT_MAX_CLOCK_SKEW,\n  DEFAULT_CACHE_DURATION: DEFAULT_CACHE_DURATION,\n  REDIRECT_OAUTH_PARAMS_NAME: REDIRECT_OAUTH_PARAMS_NAME,\n  REDIRECT_STATE_COOKIE_NAME: REDIRECT_STATE_COOKIE_NAME,\n  REDIRECT_NONCE_COOKIE_NAME: REDIRECT_NONCE_COOKIE_NAME,\n  TOKEN_STORAGE_NAME: TOKEN_STORAGE_NAME,\n  CACHE_STORAGE_NAME: CACHE_STORAGE_NAME,\n  PKCE_STORAGE_NAME: PKCE_STORAGE_NAME,\n  TRANSACTION_STORAGE_NAME: TRANSACTION_STORAGE_NAME,\n  SHARED_TRANSACTION_STORAGE_NAME: SHARED_TRANSACTION_STORAGE_NAME,\n  ORIGINAL_URI_STORAGE_NAME: ORIGINAL_URI_STORAGE_NAME,\n  IDX_RESPONSE_STORAGE_NAME: IDX_RESPONSE_STORAGE_NAME,\n  ACCESS_TOKEN_STORAGE_KEY: ACCESS_TOKEN_STORAGE_KEY,\n  ID_TOKEN_STORAGE_KEY: ID_TOKEN_STORAGE_KEY,\n  REFRESH_TOKEN_STORAGE_KEY: REFRESH_TOKEN_STORAGE_KEY,\n  REFERRER_PATH_STORAGE_KEY: REFERRER_PATH_STORAGE_KEY,\n  MIN_VERIFIER_LENGTH: MIN_VERIFIER_LENGTH,\n  MAX_VERIFIER_LENGTH: MAX_VERIFIER_LENGTH,\n  DEFAULT_CODE_CHALLENGE_METHOD: DEFAULT_CODE_CHALLENGE_METHOD,\n  IDX_API_VERSION: IDX_API_VERSION\n});\nfunction setRequestHeader(authClient, headerName, headerValue) {\n  authClient.options.headers = authClient.options.headers || {};\n  authClient.options.headers[headerName] = headerValue;\n}\nfunction httpRequest(sdk, options) {\n  options = options || {};\n  var url = options.url,\n    method = options.method,\n    args = options.args,\n    saveAuthnState = options.saveAuthnState,\n    accessToken = options.accessToken,\n    withCredentials = options.withCredentials === true,\n    storageUtil = sdk.options.storageUtil,\n    storage = storageUtil.storage,\n    httpCache = sdk.storageManager.getHttpCache(sdk.options.cookies);\n  if (options.cacheResponse) {\n    var cacheContents = httpCache.getStorage();\n    var cachedResponse = cacheContents[url];\n    if (cachedResponse && Date.now() / 1000 < cachedResponse.expiresAt) {\n      return _Promise.resolve(cachedResponse.response);\n    }\n  }\n  var oktaUserAgentHeader = sdk._oktaUserAgent.getHttpHeader();\n  var headers = _Object$assign({\n    'Accept': 'application/json',\n    'Content-Type': 'application/json'\n  }, oktaUserAgentHeader);\n  _Object$assign(headers, sdk.options.headers, options.headers);\n  headers = removeNils(headers);\n  if (accessToken && isString(accessToken)) {\n    headers['Authorization'] = 'Bearer ' + accessToken;\n  }\n  var ajaxOptions = {\n    headers: headers,\n    data: args || undefined,\n    withCredentials: withCredentials\n  };\n  var err, res;\n  return sdk.options.httpRequestClient(method, url, ajaxOptions).then(function (resp) {\n    res = resp.responseText;\n    if (res && isString(res)) {\n      res = JSON.parse(res);\n      if (res && _typeof(res) === 'object' && !res.headers) {\n        res.headers = resp.headers;\n      }\n    }\n    if (saveAuthnState) {\n      if (!res.stateToken) {\n        storage.delete(STATE_TOKEN_KEY_NAME);\n      }\n    }\n    if (res && res.stateToken && res.expiresAt) {\n      storage.set(STATE_TOKEN_KEY_NAME, res.stateToken, res.expiresAt, sdk.options.cookies);\n    }\n    if (res && options.cacheResponse) {\n      httpCache.updateStorage(url, {\n        expiresAt: Math.floor(Date.now() / 1000) + DEFAULT_CACHE_DURATION,\n        response: res\n      });\n    }\n    return res;\n  }).catch(function (resp) {\n    var serverErr = resp.responseText || {};\n    if (isString(serverErr)) {\n      try {\n        serverErr = JSON.parse(serverErr);\n      } catch (e) {\n        serverErr = {\n          errorSummary: 'Unknown error'\n        };\n      }\n    }\n    if (resp.status >= 500) {\n      serverErr.errorSummary = 'Unknown error';\n    }\n    if (sdk.options.transformErrorXHR) {\n      resp = sdk.options.transformErrorXHR(clone(resp));\n    }\n    if (serverErr.error && serverErr.error_description) {\n      err = new OAuthError(serverErr.error, serverErr.error_description);\n    } else {\n      err = new AuthApiError(serverErr, resp);\n    }\n    if (err.errorCode === 'E0000011') {\n      storage.delete(STATE_TOKEN_KEY_NAME);\n    }\n    throw err;\n  });\n}\nfunction get(sdk, url, options) {\n  url = isAbsoluteUrl(url) ? url : sdk.getIssuerOrigin() + url;\n  var getOptions = {\n    url: url,\n    method: 'GET'\n  };\n  _Object$assign(getOptions, options);\n  return httpRequest(sdk, getOptions);\n}\nfunction post(sdk, url, args, options) {\n  url = isAbsoluteUrl(url) ? url : sdk.getIssuerOrigin() + url;\n  var postOptions = {\n    url: url,\n    method: 'POST',\n    args: args,\n    saveAuthnState: true\n  };\n  _Object$assign(postOptions, options);\n  return httpRequest(sdk, postOptions);\n}\nfunction addStateToken(res, options) {\n  var builtArgs = {};\n  _Object$assign(builtArgs, options);\n  if (!builtArgs.stateToken && res.stateToken) {\n    builtArgs.stateToken = res.stateToken;\n  }\n  return builtArgs;\n}\nfunction getStateToken(res) {\n  return addStateToken(res);\n}\nfunction getPollFn(sdk, res, ref) {\n  return function (options) {\n    var delay$1;\n    var rememberDevice;\n    var autoPush;\n    var transactionCallBack;\n    if (isNumber(options)) {\n      delay$1 = options;\n    } else if (isObject(options)) {\n      options = options;\n      delay$1 = options.delay;\n      rememberDevice = options.rememberDevice;\n      autoPush = options.autoPush;\n      transactionCallBack = options.transactionCallBack;\n    }\n    if (!delay$1 && delay$1 !== 0) {\n      delay$1 = DEFAULT_POLLING_DELAY;\n    }\n    var pollLink = getLink(res, 'next', 'poll');\n    function pollFn() {\n      var opts = {};\n      if (typeof autoPush === 'function') {\n        try {\n          opts.autoPush = !!autoPush();\n        } catch (e) {\n          return _Promise.reject(new AuthSdkError('AutoPush resulted in an error.'));\n        }\n      } else if (autoPush !== undefined && autoPush !== null) {\n        opts.autoPush = !!autoPush;\n      }\n      if (typeof rememberDevice === 'function') {\n        try {\n          opts.rememberDevice = !!rememberDevice();\n        } catch (e) {\n          return _Promise.reject(new AuthSdkError('RememberDevice resulted in an error.'));\n        }\n      } else if (rememberDevice !== undefined && rememberDevice !== null) {\n        opts.rememberDevice = !!rememberDevice;\n      }\n      var href = pollLink.href + toQueryString(opts);\n      return post(sdk, href, getStateToken(res), {\n        saveAuthnState: false,\n        withCredentials: true\n      });\n    }\n    ref.isPolling = true;\n    var retryCount = 0;\n    var recursivePoll = function recursivePoll() {\n      if (!ref.isPolling) {\n        return _Promise.reject(new AuthPollStopError());\n      }\n      return pollFn().then(function (pollRes) {\n        retryCount = 0;\n        if (pollRes.factorResult && pollRes.factorResult === 'WAITING') {\n          if (!ref.isPolling) {\n            throw new AuthPollStopError();\n          }\n          if (typeof transactionCallBack === 'function') {\n            transactionCallBack(pollRes);\n          }\n          return delay(delay$1).then(recursivePoll);\n        } else {\n          ref.isPolling = false;\n          return new AuthTransaction(sdk, pollRes);\n        }\n      }).catch(function (err) {\n        if (err.xhr && (err.xhr.status === 0 || err.xhr.status === 429) && retryCount <= 4) {\n          var delayLength = Math.pow(2, retryCount) * 1000;\n          retryCount++;\n          return delay(delayLength).then(recursivePoll);\n        }\n        throw err;\n      });\n    };\n    return recursivePoll().catch(function (err) {\n      ref.isPolling = false;\n      throw err;\n    });\n  };\n}\nvar AuthTransaction = function AuthTransaction(sdk) {\n  var res = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  _classCallCheck(this, AuthTransaction);\n  this.data = undefined;\n  this.status = undefined;\n  if (res) {\n    this.data = res;\n    if (this.data.interactionHandle) {\n      this.status = res.status;\n      return;\n    }\n    _Object$assign(this, flattenEmbedded(sdk, res, res, {}));\n    delete this.stateToken;\n    if (res.status === 'RECOVERY_CHALLENGE' && !res._links) {\n      this.cancel = function () {\n        return _Promise.resolve(new AuthTransaction(sdk));\n      };\n    }\n  }\n};\nfunction link2fn(sdk, res, obj, link, ref) {\n  if (Array.isArray(link)) {\n    return function (name, opts) {\n      if (!name) {\n        throw new AuthSdkError('Must provide a link name');\n      }\n      var lk = find(link, {\n        name: name\n      });\n      if (!lk) {\n        throw new AuthSdkError('No link found for that name');\n      }\n      return link2fn(sdk, res, obj, lk, ref)(opts);\n    };\n  } else if (link.hints && link.hints.allow && link.hints.allow.length === 1) {\n    var method = link.hints.allow[0];\n    switch (method) {\n      case 'GET':\n        return function () {\n          return get(sdk, link.href, {\n            withCredentials: true\n          });\n        };\n      case 'POST':\n        return function (opts) {\n          if (ref && ref.isPolling) {\n            ref.isPolling = false;\n          }\n          var data = addStateToken(res, opts);\n          if (res.status === 'MFA_ENROLL' || res.status === 'FACTOR_ENROLL') {\n            _Object$assign(data, {\n              factorType: obj.factorType,\n              provider: obj.provider\n            });\n          }\n          var params = {};\n          var autoPush = data.autoPush;\n          if (autoPush !== undefined) {\n            if (typeof autoPush === 'function') {\n              try {\n                params.autoPush = !!autoPush();\n              } catch (e) {\n                return _Promise.reject(new AuthSdkError('AutoPush resulted in an error.'));\n              }\n            } else if (autoPush !== null) {\n              params.autoPush = !!autoPush;\n            }\n            data = omit(data, 'autoPush');\n          }\n          var rememberDevice = data.rememberDevice;\n          if (rememberDevice !== undefined) {\n            if (typeof rememberDevice === 'function') {\n              try {\n                params.rememberDevice = !!rememberDevice();\n              } catch (e) {\n                return _Promise.reject(new AuthSdkError('RememberDevice resulted in an error.'));\n              }\n            } else if (rememberDevice !== null) {\n              params.rememberDevice = !!rememberDevice;\n            }\n            data = omit(data, 'rememberDevice');\n          } else if (data.profile && data.profile.updatePhone !== undefined) {\n            if (data.profile.updatePhone) {\n              params.updatePhone = true;\n            }\n            data.profile = omit(data.profile, 'updatePhone');\n          }\n          var href = link.href + toQueryString(params);\n          return postToTransaction(sdk, href, data);\n        };\n    }\n  }\n}\nfunction links2fns(sdk, res, obj, ref) {\n  var fns = {};\n  for (var linkName in obj._links) {\n    if (!Object.prototype.hasOwnProperty.call(obj._links, linkName)) {\n      continue;\n    }\n    var link = obj._links[linkName];\n    if (linkName === 'next') {\n      linkName = link.name;\n    }\n    if (link.type) {\n      fns[linkName] = link;\n      continue;\n    }\n    switch (linkName) {\n      case 'poll':\n        fns.poll = getPollFn(sdk, res, ref);\n        break;\n      default:\n        var fn = link2fn(sdk, res, obj, link, ref);\n        if (fn) {\n          fns[linkName] = fn;\n        }\n    }\n  }\n  return fns;\n}\nfunction flattenEmbedded(sdk, res, obj, ref) {\n  obj = obj || res;\n  obj = clone(obj);\n  if (Array.isArray(obj)) {\n    var objArr = [];\n    for (var o = 0, ol = obj.length; o < ol; o++) {\n      objArr.push(flattenEmbedded(sdk, res, obj[o], ref));\n    }\n    return objArr;\n  }\n  var embedded = obj._embedded || {};\n  for (var key in embedded) {\n    if (!Object.prototype.hasOwnProperty.call(embedded, key)) {\n      continue;\n    }\n    if (isObject(embedded[key]) || Array.isArray(embedded[key])) {\n      embedded[key] = flattenEmbedded(sdk, res, embedded[key], ref);\n    }\n  }\n  var fns = links2fns(sdk, res, obj, ref);\n  _Object$assign(embedded, fns);\n  obj = omit(obj, '_embedded', '_links');\n  _Object$assign(obj, embedded);\n  return obj;\n}\nfunction transactionStatus(sdk, args) {\n  args = addStateToken(sdk, args);\n  return post(sdk, sdk.getIssuerOrigin() + '/api/v1/authn', args, {\n    withCredentials: true\n  });\n}\nfunction resumeTransaction(sdk, args) {\n  if (!args || !args.stateToken) {\n    var stateToken = sdk.tx.exists._get(STATE_TOKEN_KEY_NAME);\n    if (stateToken) {\n      args = {\n        stateToken: stateToken\n      };\n    } else {\n      return _Promise.reject(new AuthSdkError('No transaction to resume'));\n    }\n  }\n  return sdk.tx.status(args).then(function (res) {\n    return new AuthTransaction(sdk, res);\n  });\n}\nfunction introspectAuthn(sdk, args) {\n  if (!args || !args.stateToken) {\n    var stateToken = sdk.tx.exists._get(STATE_TOKEN_KEY_NAME);\n    if (stateToken) {\n      args = {\n        stateToken: stateToken\n      };\n    } else {\n      return _Promise.reject(new AuthSdkError('No transaction to evaluate'));\n    }\n  }\n  return transactionStep(sdk, args).then(function (res) {\n    return new AuthTransaction(sdk, res);\n  });\n}\nfunction transactionStep(sdk, args) {\n  args = addStateToken(sdk, args);\n  return post(sdk, sdk.getIssuerOrigin() + '/api/v1/authn/introspect', args, {\n    withCredentials: true\n  });\n}\nfunction transactionExists(sdk) {\n  return !!sdk.tx.exists._get(STATE_TOKEN_KEY_NAME);\n}\nfunction postToTransaction(sdk, url, args, options) {\n  options = _Object$assign({\n    withCredentials: true\n  }, options);\n  return post(sdk, url, args, options).then(function (res) {\n    return new AuthTransaction(sdk, res);\n  });\n}\nfunction dec2hex(dec) {\n  return ('0' + dec.toString(16)).substr(-2);\n}\nfunction getRandomString(length) {\n  var a = new Uint8Array(Math.ceil(length / 2));\n  c.getRandomValues(a);\n  var str = _Array$from(a, dec2hex).join('');\n  return _sliceInstanceProperty(str).call(str, 0, length);\n}\nfunction generateVerifier(prefix) {\n  var _context;\n  var verifier = prefix || '';\n  if (verifier.length < MIN_VERIFIER_LENGTH) {\n    verifier = verifier + getRandomString(MIN_VERIFIER_LENGTH - verifier.length);\n  }\n  return _sliceInstanceProperty(_context = encodeURIComponent(verifier)).call(_context, 0, MAX_VERIFIER_LENGTH);\n}\nfunction computeChallenge(str) {\n  var buffer = new TextEncoder().encode(str);\n  return c.subtle.digest('SHA-256', buffer).then(function (arrayBuffer) {\n    var hash = String.fromCharCode.apply(null, new Uint8Array(arrayBuffer));\n    var b64u = stringToBase64Url(hash);\n    return b64u;\n  });\n}\nvar PKCE = {\n  DEFAULT_CODE_CHALLENGE_METHOD: DEFAULT_CODE_CHALLENGE_METHOD,\n  generateVerifier: generateVerifier,\n  computeChallenge: computeChallenge\n};\nfunction sessionExists(sdk) {\n  return sdk.session.get().then(function (res) {\n    if (res.status === 'ACTIVE') {\n      return true;\n    }\n    return false;\n  }).catch(function () {\n    return false;\n  });\n}\nfunction getSession(sdk) {\n  return get(sdk, '/api/v1/sessions/me', {\n    withCredentials: true\n  }).then(function (session) {\n    var res = omit(session, '_links');\n    res.refresh = function () {\n      return post(sdk, getLink(session, 'refresh').href, {}, {\n        withCredentials: true\n      });\n    };\n    res.user = function () {\n      return get(sdk, getLink(session, 'user').href, {\n        withCredentials: true\n      });\n    };\n    return res;\n  }).catch(function () {\n    return {\n      status: 'INACTIVE'\n    };\n  });\n}\nfunction closeSession(sdk) {\n  return httpRequest(sdk, {\n    url: sdk.getIssuerOrigin() + '/api/v1/sessions/me',\n    method: 'DELETE',\n    withCredentials: true\n  });\n}\nfunction refreshSession(sdk) {\n  return post(sdk, '/api/v1/sessions/me/lifecycle/refresh', {}, {\n    withCredentials: true\n  });\n}\nfunction setCookieAndRedirect(sdk, sessionToken, redirectUrl) {\n  redirectUrl = redirectUrl || window.location.href;\n  window.location.assign(sdk.getIssuerOrigin() + '/login/sessionCookieRedirect' + toQueryString({\n    checkAccountSetupComplete: true,\n    token: sessionToken,\n    redirectUrl: redirectUrl\n  }));\n}\nfunction convertTokenParamsToOAuthParams(tokenParams) {\n  var _context, _context2, _context3;\n  if (!tokenParams.clientId) {\n    throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to get a token');\n  }\n  if (isString(tokenParams.responseType) && _indexOfInstanceProperty(_context = tokenParams.responseType).call(_context, ' ') !== -1) {\n    throw new AuthSdkError('Multiple OAuth responseTypes must be defined as an array');\n  }\n  var oauthParams = {\n    'client_id': tokenParams.clientId,\n    'code_challenge': tokenParams.codeChallenge,\n    'code_challenge_method': tokenParams.codeChallengeMethod,\n    'display': tokenParams.display,\n    'idp': tokenParams.idp,\n    'idp_scope': tokenParams.idpScope,\n    'login_hint': tokenParams.loginHint,\n    'max_age': tokenParams.maxAge,\n    'nonce': tokenParams.nonce,\n    'prompt': tokenParams.prompt,\n    'redirect_uri': tokenParams.redirectUri,\n    'response_mode': tokenParams.responseMode,\n    'response_type': tokenParams.responseType,\n    'sessionToken': tokenParams.sessionToken,\n    'state': tokenParams.state\n  };\n  oauthParams = removeNils(oauthParams);\n  ['idp_scope', 'response_type'].forEach(function (mayBeArray) {\n    if (Array.isArray(oauthParams[mayBeArray])) {\n      oauthParams[mayBeArray] = oauthParams[mayBeArray].join(' ');\n    }\n  });\n  if (_indexOfInstanceProperty(_context2 = tokenParams.responseType).call(_context2, 'id_token') !== -1 && _indexOfInstanceProperty(_context3 = tokenParams.scopes).call(_context3, 'openid') === -1) {\n    throw new AuthSdkError('openid scope must be specified in the scopes argument when requesting an id_token');\n  } else {\n    oauthParams.scope = tokenParams.scopes.join(' ');\n  }\n  return oauthParams;\n}\nfunction buildAuthorizeParams(tokenParams) {\n  var oauthQueryParams = convertTokenParamsToOAuthParams(tokenParams);\n  return toQueryString(_Object$assign(_Object$assign({}, oauthQueryParams), tokenParams.extraParams && _Object$assign({}, tokenParams.extraParams)));\n}\nfunction validateOptions(options) {\n  if (!options.clientId) {\n    throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to get a token');\n  }\n  if (!options.redirectUri) {\n    throw new AuthSdkError('The redirectUri passed to /authorize must also be passed to /token');\n  }\n  if (!options.authorizationCode && !options.interactionCode) {\n    throw new AuthSdkError('An authorization code (returned from /authorize) must be passed to /token');\n  }\n  if (!options.codeVerifier) {\n    throw new AuthSdkError('The \"codeVerifier\" (generated and saved by your app) must be passed to /token');\n  }\n}\nfunction getPostData(sdk, options) {\n  var _context;\n  var params = removeNils({\n    'client_id': options.clientId,\n    'redirect_uri': options.redirectUri,\n    'grant_type': options.interactionCode ? 'interaction_code' : 'authorization_code',\n    'code_verifier': options.codeVerifier\n  });\n  if (options.interactionCode) {\n    params['interaction_code'] = options.interactionCode;\n  } else if (options.authorizationCode) {\n    params.code = options.authorizationCode;\n  }\n  var clientSecret = sdk.options.clientSecret;\n  if (clientSecret) {\n    params['client_secret'] = clientSecret;\n  }\n  return _sliceInstanceProperty(_context = toQueryString(params)).call(_context, 1);\n}\nfunction postToTokenEndpoint(sdk, options, urls) {\n  validateOptions(options);\n  var data = getPostData(sdk, options);\n  var headers = {\n    'Content-Type': 'application/x-www-form-urlencoded'\n  };\n  return httpRequest(sdk, {\n    url: urls.tokenUrl,\n    method: 'POST',\n    args: data,\n    headers: headers\n  });\n}\nfunction postRefreshToken(sdk, options, refreshToken) {\n  var _context2;\n  return httpRequest(sdk, {\n    url: refreshToken.tokenUrl,\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    },\n    args: _mapInstanceProperty(_context2 = _Object$entries({\n      client_id: options.clientId,\n      grant_type: 'refresh_token',\n      scope: refreshToken.scopes.join(' '),\n      refresh_token: refreshToken.refreshToken\n    })).call(_context2, function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n        name = _ref2[0],\n        value = _ref2[1];\n      return name + '=' + encodeURIComponent(value);\n    }).join('&')\n  });\n}\nfunction getWellKnown(sdk, issuer) {\n  var authServerUri = issuer || sdk.options.issuer;\n  return get(sdk, authServerUri + '/.well-known/openid-configuration', {\n    cacheResponse: true\n  });\n}\nfunction getKey(sdk, issuer, kid) {\n  var httpCache = sdk.storageManager.getHttpCache(sdk.options.cookies);\n  return getWellKnown(sdk, issuer).then(function (wellKnown) {\n    var jwksUri = wellKnown['jwks_uri'];\n    var cacheContents = httpCache.getStorage();\n    var cachedResponse = cacheContents[jwksUri];\n    if (cachedResponse && Date.now() / 1000 < cachedResponse.expiresAt) {\n      var cachedKey = find(_keysInstanceProperty(cachedResponse.response), {\n        kid: kid\n      });\n      if (cachedKey) {\n        return cachedKey;\n      }\n    }\n    httpCache.clearStorage(jwksUri);\n    return get(sdk, jwksUri, {\n      cacheResponse: true\n    }).then(function (res) {\n      var key = find(_keysInstanceProperty(res), {\n        kid: kid\n      });\n      if (key) {\n        return key;\n      }\n      throw new AuthSdkError('The key id, ' + kid + ', was not found in the server\\'s keys');\n    });\n  });\n}\nfunction addListener(eventTarget, name, fn) {\n  if (eventTarget.addEventListener) {\n    eventTarget.addEventListener(name, fn);\n  } else {\n    eventTarget.attachEvent('on' + name, fn);\n  }\n}\nfunction removeListener(eventTarget, name, fn) {\n  if (eventTarget.removeEventListener) {\n    eventTarget.removeEventListener(name, fn);\n  } else {\n    eventTarget.detachEvent('on' + name, fn);\n  }\n}\nfunction loadFrame(src) {\n  var iframe = document.createElement('iframe');\n  iframe.style.display = 'none';\n  iframe.src = src;\n  return document.body.appendChild(iframe);\n}\nfunction loadPopup(src, options) {\n  var title = options.popupTitle || 'External Identity Provider User Authentication';\n  var appearance = 'toolbar=no, scrollbars=yes, resizable=yes, ' + 'top=100, left=500, width=600, height=600';\n  return window.open(src, title, appearance);\n}\nfunction addPostMessageListener(sdk, timeout, state) {\n  var responseHandler;\n  var timeoutId;\n  var msgReceivedOrTimeout = new _Promise(function (resolve, reject) {\n    responseHandler = function responseHandler(e) {\n      if (!e.data || e.data.state !== state) {\n        return;\n      }\n      if (e.origin !== sdk.getIssuerOrigin()) {\n        return reject(new AuthSdkError('The request does not match client configuration'));\n      }\n      resolve(e.data);\n    };\n    addListener(window, 'message', responseHandler);\n    timeoutId = setTimeout(function () {\n      reject(new AuthSdkError('OAuth flow timed out'));\n    }, timeout || 120000);\n  });\n  return msgReceivedOrTimeout.finally(function () {\n    clearTimeout(timeoutId);\n    removeListener(window, 'message', responseHandler);\n  });\n}\nfunction generateState() {\n  return genRandomString(64);\n}\nfunction generateNonce() {\n  return genRandomString(64);\n}\nfunction getIssuer(sdk) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var issuer = removeTrailingSlash(options.issuer) || sdk.options.issuer;\n  return issuer;\n}\nfunction getOAuthBaseUrl(sdk) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var issuer = getIssuer(sdk, options);\n  var baseUrl = _indexOfInstanceProperty(issuer).call(issuer, '/oauth2') > 0 ? issuer : issuer + '/oauth2';\n  return baseUrl;\n}\nfunction getOAuthDomain(sdk) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var issuer = getIssuer(sdk, options);\n  var domain = issuer.split('/oauth2')[0];\n  return domain;\n}\nfunction getOAuthUrls(sdk, options) {\n  if (arguments.length > 2) {\n    throw new AuthSdkError('As of version 3.0, \"getOAuthUrls\" takes only a single set of options');\n  }\n  options = options || {};\n  var authorizeUrl = removeTrailingSlash(options.authorizeUrl) || sdk.options.authorizeUrl;\n  var issuer = getIssuer(sdk, options);\n  var userinfoUrl = removeTrailingSlash(options.userinfoUrl) || sdk.options.userinfoUrl;\n  var tokenUrl = removeTrailingSlash(options.tokenUrl) || sdk.options.tokenUrl;\n  var logoutUrl = removeTrailingSlash(options.logoutUrl) || sdk.options.logoutUrl;\n  var revokeUrl = removeTrailingSlash(options.revokeUrl) || sdk.options.revokeUrl;\n  var baseUrl = getOAuthBaseUrl(sdk, options);\n  authorizeUrl = authorizeUrl || baseUrl + '/v1/authorize';\n  userinfoUrl = userinfoUrl || baseUrl + '/v1/userinfo';\n  tokenUrl = tokenUrl || baseUrl + '/v1/token';\n  revokeUrl = revokeUrl || baseUrl + '/v1/revoke';\n  logoutUrl = logoutUrl || baseUrl + '/v1/logout';\n  return {\n    issuer: issuer,\n    authorizeUrl: authorizeUrl,\n    userinfoUrl: userinfoUrl,\n    tokenUrl: tokenUrl,\n    revokeUrl: revokeUrl,\n    logoutUrl: logoutUrl\n  };\n}\nvar isWindowsPhone = /windows phone|iemobile|wpdesktop/i;\nfunction isBrowser() {\n  return typeof document !== 'undefined' && typeof window !== 'undefined';\n}\nfunction isIE11OrLess() {\n  if (!isBrowser()) {\n    return false;\n  }\n  var documentMode = document.documentMode;\n  return !!documentMode && documentMode <= 11;\n}\nfunction getUserAgent() {\n  return navigator.userAgent;\n}\nfunction isFingerprintSupported() {\n  var agent = getUserAgent();\n  return agent && !isWindowsPhone.test(agent);\n}\nfunction isPopupPostMessageSupported() {\n  if (!isBrowser()) {\n    return false;\n  }\n  var documentMode = document.documentMode;\n  var isIE8or9 = documentMode && documentMode < 10;\n  if (typeof window.postMessage !== 'undefined' && !isIE8or9) {\n    return true;\n  }\n  return false;\n}\nfunction isTokenVerifySupported() {\n  return typeof c !== 'undefined' && c !== null && typeof c.subtle !== 'undefined' && typeof Uint8Array !== 'undefined';\n}\nfunction hasTextEncoder() {\n  return typeof TextEncoder !== 'undefined';\n}\nfunction isPKCESupported() {\n  return isTokenVerifySupported() && hasTextEncoder();\n}\nfunction isHTTPS() {\n  if (!isBrowser()) {\n    return false;\n  }\n  return window.location.protocol === 'https:';\n}\nfunction isLocalhost() {\n  return isBrowser() && window.location.hostname === 'localhost';\n}\nvar features = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  isBrowser: isBrowser,\n  isIE11OrLess: isIE11OrLess,\n  getUserAgent: getUserAgent,\n  isFingerprintSupported: isFingerprintSupported,\n  isPopupPostMessageSupported: isPopupPostMessageSupported,\n  isTokenVerifySupported: isTokenVerifySupported,\n  hasTextEncoder: hasTextEncoder,\n  isPKCESupported: isPKCESupported,\n  isHTTPS: isHTTPS,\n  isLocalhost: isLocalhost\n});\nfunction getDefaultTokenParams(sdk) {\n  var _sdk$options = sdk.options,\n    pkce = _sdk$options.pkce,\n    clientId = _sdk$options.clientId,\n    redirectUri = _sdk$options.redirectUri,\n    responseType = _sdk$options.responseType,\n    responseMode = _sdk$options.responseMode,\n    scopes = _sdk$options.scopes,\n    state = _sdk$options.state,\n    ignoreSignature = _sdk$options.ignoreSignature;\n  var defaultRedirectUri = isBrowser() ? window.location.href : undefined;\n  return removeNils({\n    pkce: pkce,\n    clientId: clientId,\n    redirectUri: redirectUri || defaultRedirectUri,\n    responseType: responseType || ['token', 'id_token'],\n    responseMode: responseMode,\n    state: state || generateState(),\n    nonce: generateNonce(),\n    scopes: scopes || ['openid', 'email'],\n    ignoreSignature: ignoreSignature\n  });\n}\nfunction isInteractionRequiredError(error) {\n  if (error.name !== 'OAuthError') {\n    return false;\n  }\n  var oauthError = error;\n  return oauthError.errorCode === 'interaction_required';\n}\nfunction isAuthorizationCodeError(sdk, error) {\n  if (error.name !== 'AuthApiError') {\n    return false;\n  }\n  var authApiError = error;\n  var errorResponse = authApiError.xhr;\n  var responseJSON = errorResponse === null || errorResponse === void 0 ? void 0 : errorResponse.responseJSON;\n  return sdk.options.pkce && (responseJSON === null || responseJSON === void 0 ? void 0 : responseJSON.error) === 'invalid_grant';\n}\nfunction hasTokensInHash(hash) {\n  return /((id|access)_token=)/i.test(hash);\n}\nfunction hasAuthorizationCode(hashOrSearch) {\n  return /(code=)/i.test(hashOrSearch);\n}\nfunction hasInteractionCode(hashOrSearch) {\n  return /(interaction_code=)/i.test(hashOrSearch);\n}\nfunction hasErrorInUrl(hashOrSearch) {\n  return /(error=)/i.test(hashOrSearch) || /(error_description)/i.test(hashOrSearch);\n}\nfunction isRedirectUri(uri, sdk) {\n  var authParams = sdk.options;\n  if (!uri || !authParams.redirectUri) {\n    return false;\n  }\n  return _indexOfInstanceProperty(uri).call(uri, authParams.redirectUri) === 0;\n}\nfunction isCodeFlow(options) {\n  return options.pkce || options.responseType === 'code' || options.responseMode === 'query';\n}\nfunction getHashOrSearch(options) {\n  var codeFlow = isCodeFlow(options);\n  var useQuery = codeFlow && options.responseMode !== 'fragment';\n  return useQuery ? window.location.search : window.location.hash;\n}\nfunction isLoginRedirect(sdk) {\n  if (!isRedirectUri(window.location.href, sdk)) {\n    return false;\n  }\n  var codeFlow = isCodeFlow(sdk.options);\n  var hashOrSearch = getHashOrSearch(sdk.options);\n  if (hasErrorInUrl(hashOrSearch)) {\n    return true;\n  }\n  if (codeFlow) {\n    var hasCode = hasAuthorizationCode(hashOrSearch) || hasInteractionCode(hashOrSearch);\n    return hasCode;\n  }\n  return hasTokensInHash(window.location.hash);\n}\nfunction isInteractionRequired(sdk, hashOrSearch) {\n  if (!hashOrSearch) {\n    if (!isLoginRedirect(sdk)) {\n      return false;\n    }\n    hashOrSearch = getHashOrSearch(sdk.options);\n  }\n  return /(error=interaction_required)/i.test(hashOrSearch);\n}\nfunction createOAuthMeta(sdk, tokenParams) {\n  var issuer = sdk.options.issuer;\n  var urls = getOAuthUrls(sdk, tokenParams);\n  var oauthMeta = {\n    issuer: issuer,\n    urls: urls,\n    clientId: tokenParams.clientId,\n    redirectUri: tokenParams.redirectUri,\n    responseType: tokenParams.responseType,\n    responseMode: tokenParams.responseMode,\n    scopes: tokenParams.scopes,\n    state: tokenParams.state,\n    nonce: tokenParams.nonce,\n    ignoreSignature: tokenParams.ignoreSignature\n  };\n  if (tokenParams.pkce === false) {\n    return oauthMeta;\n  }\n  var pkceMeta = _Object$assign(_Object$assign({}, oauthMeta), {\n    codeVerifier: tokenParams.codeVerifier,\n    codeChallengeMethod: tokenParams.codeChallengeMethod,\n    codeChallenge: tokenParams.codeChallenge\n  });\n  return pkceMeta;\n}\nfunction assertPKCESupport(sdk) {\n  if (!sdk.features.isPKCESupported()) {\n    var errorMessage = 'PKCE requires a modern browser with encryption support running in a secure context.';\n    if (!sdk.features.isHTTPS()) {\n      errorMessage += '\\nThe current page is not being served with HTTPS protocol. PKCE requires secure HTTPS protocol.';\n    }\n    if (!sdk.features.hasTextEncoder()) {\n      errorMessage += '\\n\"TextEncoder\" is not defined. To use PKCE, you may need to include a polyfill/shim for this browser.';\n    }\n    throw new AuthSdkError(errorMessage);\n  }\n}\nfunction validateCodeChallengeMethod(_x, _x2) {\n  return _validateCodeChallengeMethod.apply(this, arguments);\n}\nfunction _validateCodeChallengeMethod() {\n  _validateCodeChallengeMethod = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(sdk, codeChallengeMethod) {\n    var wellKnownResponse, methods;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            codeChallengeMethod = codeChallengeMethod || sdk.options.codeChallengeMethod || DEFAULT_CODE_CHALLENGE_METHOD;\n            _context.next = 3;\n            return getWellKnown(sdk);\n          case 3:\n            wellKnownResponse = _context.sent;\n            methods = wellKnownResponse['code_challenge_methods_supported'] || [];\n            if (!(_indexOfInstanceProperty(methods).call(methods, codeChallengeMethod) === -1)) {\n              _context.next = 7;\n              break;\n            }\n            throw new AuthSdkError('Invalid code_challenge_method');\n          case 7:\n            return _context.abrupt(\"return\", codeChallengeMethod);\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _validateCodeChallengeMethod.apply(this, arguments);\n}\nfunction preparePKCE(_x3, _x4) {\n  return _preparePKCE.apply(this, arguments);\n}\nfunction _preparePKCE() {\n  _preparePKCE = _asyncToGenerator(_regeneratorRuntime.mark(function _callee2(sdk, tokenParams) {\n    var _tokenParams, codeVerifier, codeChallenge, codeChallengeMethod;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _tokenParams = tokenParams, codeVerifier = _tokenParams.codeVerifier, codeChallenge = _tokenParams.codeChallenge, codeChallengeMethod = _tokenParams.codeChallengeMethod;\n            codeChallenge = codeChallenge || sdk.options.codeChallenge;\n            if (codeChallenge) {\n              _context2.next = 8;\n              break;\n            }\n            assertPKCESupport(sdk);\n            codeVerifier = codeVerifier || PKCE.generateVerifier();\n            _context2.next = 7;\n            return PKCE.computeChallenge(codeVerifier);\n          case 7:\n            codeChallenge = _context2.sent;\n          case 8:\n            _context2.next = 10;\n            return validateCodeChallengeMethod(sdk, codeChallengeMethod);\n          case 10:\n            codeChallengeMethod = _context2.sent;\n            tokenParams = _Object$assign(_Object$assign({}, tokenParams), {\n              responseType: 'code',\n              codeVerifier: codeVerifier,\n              codeChallenge: codeChallenge,\n              codeChallengeMethod: codeChallengeMethod\n            });\n            return _context2.abrupt(\"return\", tokenParams);\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _preparePKCE.apply(this, arguments);\n}\nfunction prepareTokenParams(_x5) {\n  return _prepareTokenParams.apply(this, arguments);\n}\nfunction _prepareTokenParams() {\n  _prepareTokenParams = _asyncToGenerator(_regeneratorRuntime.mark(function _callee3(sdk) {\n    var tokenParams,\n      defaults,\n      _args3 = arguments;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            tokenParams = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : {};\n            defaults = getDefaultTokenParams(sdk);\n            tokenParams = _Object$assign(_Object$assign({}, defaults), tokenParams);\n            if (!(tokenParams.pkce === false)) {\n              _context3.next = 5;\n              break;\n            }\n            return _context3.abrupt(\"return\", tokenParams);\n          case 5:\n            return _context3.abrupt(\"return\", preparePKCE(sdk, tokenParams));\n          case 6:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _prepareTokenParams.apply(this, arguments);\n}\nfunction isSameRefreshToken(a, b) {\n  return a.refreshToken === b.refreshToken;\n}\nfunction isRefreshTokenError(err) {\n  if (!isAuthApiError(err)) {\n    return false;\n  }\n  if (!err.xhr || !err.xhr.responseJSON) {\n    return false;\n  }\n  var responseJSON = err.xhr.responseJSON;\n  if (responseJSON.error === 'invalid_grant') {\n    return true;\n  }\n  return false;\n}\nfunction urlParamsToObject(hashOrSearch) {\n  var plus2space = /\\+/g;\n  var paramSplit = /([^&=]+)=?([^&]*)/g;\n  var fragment = hashOrSearch || '';\n  if (fragment.charAt(0) === '#' && fragment.charAt(1) === '/') {\n    fragment = fragment.substring(2);\n  }\n  if (fragment.charAt(0) === '#' || fragment.charAt(0) === '?') {\n    fragment = fragment.substring(1);\n  }\n  var obj = {};\n  var param;\n  while (true) {\n    param = paramSplit.exec(fragment);\n    if (!param) {\n      break;\n    }\n    var key = param[1];\n    var value = param[2];\n    if (key === 'id_token' || key === 'access_token' || key === 'code') {\n      obj[key] = value;\n    } else {\n      obj[key] = decodeURIComponent(value.replace(plus2space, ' '));\n    }\n  }\n  return obj;\n}\nfunction validateClaims(sdk, claims, validationParams) {\n  var aud = validationParams.clientId;\n  var iss = validationParams.issuer;\n  var nonce = validationParams.nonce;\n  if (!claims || !iss || !aud) {\n    throw new AuthSdkError('The jwt, iss, and aud arguments are all required');\n  }\n  if (nonce && claims.nonce !== nonce) {\n    throw new AuthSdkError('OAuth flow response nonce doesn\\'t match request nonce');\n  }\n  var now = Math.floor(Date.now() / 1000);\n  if (claims.iss !== iss) {\n    throw new AuthSdkError('The issuer [' + claims.iss + '] ' + 'does not match [' + iss + ']');\n  }\n  if (claims.aud !== aud) {\n    throw new AuthSdkError('The audience [' + claims.aud + '] ' + 'does not match [' + aud + ']');\n  }\n  if (claims.iat > claims.exp) {\n    throw new AuthSdkError('The JWT expired before it was issued');\n  }\n  if (!sdk.options.ignoreLifetime) {\n    if (now - sdk.options.maxClockSkew > claims.exp) {\n      throw new AuthSdkError('The JWT expired and is no longer valid');\n    }\n    if (claims.iat > now + sdk.options.maxClockSkew) {\n      throw new AuthSdkError('The JWT was issued in the future');\n    }\n  }\n}\nfunction isObjectWithProperties(obj) {\n  if (!obj || _typeof(obj) !== 'object' || _Object$values(obj).length === 0) {\n    return false;\n  }\n  return true;\n}\nfunction isOAuthTransactionMeta(obj) {\n  if (!isObjectWithProperties(obj)) {\n    return false;\n  }\n  return !!obj.redirectUri || !!obj.responseType;\n}\nfunction isPKCETransactionMeta(obj) {\n  if (!isOAuthTransactionMeta(obj)) {\n    return false;\n  }\n  return !!obj.codeVerifier;\n}\nfunction isIdxTransactionMeta(obj) {\n  if (!isPKCETransactionMeta(obj)) {\n    return false;\n  }\n  return !!obj.interactionHandle;\n}\nfunction isCustomAuthTransactionMeta(obj) {\n  var _context;\n  if (!isObjectWithProperties(obj)) {\n    return false;\n  }\n  var isAllStringValues = _findInstanceProperty(_context = _Object$values(obj)).call(_context, function (value) {\n    return typeof value !== 'string';\n  }) === undefined;\n  return isAllStringValues;\n}\nfunction isTransactionMeta(obj) {\n  if (isOAuthTransactionMeta(obj) || isCustomAuthTransactionMeta(obj)) {\n    return true;\n  }\n  return false;\n}\nvar IdxStatus;\n(function (IdxStatus) {\n  IdxStatus[\"SUCCESS\"] = \"SUCCESS\";\n  IdxStatus[\"PENDING\"] = \"PENDING\";\n  IdxStatus[\"FAILURE\"] = \"FAILURE\";\n  IdxStatus[\"TERMINAL\"] = \"TERMINAL\";\n  IdxStatus[\"CANCELED\"] = \"CANCELED\";\n})(IdxStatus || (IdxStatus = {}));\nvar AuthenticatorKey;\n(function (AuthenticatorKey) {\n  AuthenticatorKey[\"OKTA_PASSWORD\"] = \"okta_password\";\n  AuthenticatorKey[\"OKTA_EMAIL\"] = \"okta_email\";\n  AuthenticatorKey[\"PHONE_NUMBER\"] = \"phone_number\";\n  AuthenticatorKey[\"GOOGLE_AUTHENTICATOR\"] = \"google_otp\";\n  AuthenticatorKey[\"SECURITY_QUESTION\"] = \"security_question\";\n  AuthenticatorKey[\"OKTA_VERIFY\"] = \"okta_verify\";\n  AuthenticatorKey[\"WEBAUTHN\"] = \"webauthn\";\n})(AuthenticatorKey || (AuthenticatorKey = {}));\nvar IdxFeature;\n(function (IdxFeature) {\n  IdxFeature[\"PASSWORD_RECOVERY\"] = \"recover-password\";\n  IdxFeature[\"REGISTRATION\"] = \"enroll-profile\";\n  IdxFeature[\"SOCIAL_IDP\"] = \"redirect-idp\";\n  IdxFeature[\"ACCOUNT_UNLOCK\"] = \"unlock-account\";\n})(IdxFeature || (IdxFeature = {}));\nfunction isAuthenticator(obj) {\n  return obj && (obj.key || obj.id);\n}\nfunction isToken(obj) {\n  if (obj && (obj.accessToken || obj.idToken || obj.refreshToken) && Array.isArray(obj.scopes)) {\n    return true;\n  }\n  return false;\n}\nfunction isAccessToken(obj) {\n  return obj && obj.accessToken;\n}\nfunction isIDToken(obj) {\n  return obj && obj.idToken;\n}\nfunction isRefreshToken(obj) {\n  return obj && obj.refreshToken;\n}\nfunction validateToken(token, type) {\n  if (!isIDToken(token) && !isAccessToken(token) && !isRefreshToken(token)) {\n    throw new AuthSdkError('Token must be an Object with scopes, expiresAt, and one of: an idToken, accessToken, or refreshToken property');\n  }\n  if (type === 'accessToken' && !isAccessToken(token)) {\n    throw new AuthSdkError('invalid accessToken');\n  }\n  if (type === 'idToken' && !isIDToken(token)) {\n    throw new AuthSdkError('invalid idToken');\n  }\n  if (type === 'refreshToken' && !isRefreshToken(token)) {\n    throw new AuthSdkError('invalid refreshToken');\n  }\n}\nfunction decodeToken(token) {\n  var jwt = token.split('.');\n  var decodedToken;\n  try {\n    decodedToken = {\n      header: JSON.parse(base64UrlToString(jwt[0])),\n      payload: JSON.parse(base64UrlToString(jwt[1])),\n      signature: jwt[2]\n    };\n  } catch (e) {\n    throw new AuthSdkError('Malformed token');\n  }\n  return decodedToken;\n}\nfunction revokeToken(_x, _x2) {\n  return _revokeToken.apply(this, arguments);\n}\nfunction _revokeToken() {\n  _revokeToken = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(sdk, token) {\n    var _context, _context2;\n    var accessToken, refreshToken, clientId, clientSecret, revokeUrl, args, creds;\n    return _regeneratorRuntime.wrap(function _callee$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            accessToken = '';\n            refreshToken = '';\n            if (token) {\n              accessToken = token.accessToken;\n              refreshToken = token.refreshToken;\n            }\n            if (!(!accessToken && !refreshToken)) {\n              _context3.next = 5;\n              break;\n            }\n            throw new AuthSdkError('A valid access or refresh token object is required');\n          case 5:\n            clientId = sdk.options.clientId;\n            clientSecret = sdk.options.clientSecret;\n            if (clientId) {\n              _context3.next = 9;\n              break;\n            }\n            throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to revoke a token');\n          case 9:\n            revokeUrl = getOAuthUrls(sdk).revokeUrl;\n            args = _sliceInstanceProperty(_context = toQueryString({\n              token_type_hint: refreshToken ? 'refresh_token' : 'access_token',\n              token: refreshToken || accessToken\n            })).call(_context, 1);\n            creds = clientSecret ? b(_concatInstanceProperty(_context2 = \"\".concat(clientId, \":\")).call(_context2, clientSecret)) : b(clientId);\n            return _context3.abrupt(\"return\", post(sdk, revokeUrl, args, {\n              headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n                'Authorization': 'Basic ' + creds\n              }\n            }));\n          case 13:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _revokeToken.apply(this, arguments);\n}\nfunction exchangeCodeForTokens(sdk, tokenParams, urls) {\n  urls = urls || getOAuthUrls(sdk, tokenParams);\n  tokenParams = _Object$assign({}, getDefaultTokenParams(sdk), clone(tokenParams));\n  var _tokenParams = tokenParams,\n    authorizationCode = _tokenParams.authorizationCode,\n    interactionCode = _tokenParams.interactionCode,\n    codeVerifier = _tokenParams.codeVerifier,\n    clientId = _tokenParams.clientId,\n    redirectUri = _tokenParams.redirectUri,\n    scopes = _tokenParams.scopes,\n    ignoreSignature = _tokenParams.ignoreSignature,\n    state = _tokenParams.state;\n  var getTokenOptions = {\n    clientId: clientId,\n    redirectUri: redirectUri,\n    authorizationCode: authorizationCode,\n    interactionCode: interactionCode,\n    codeVerifier: codeVerifier\n  };\n  return postToTokenEndpoint(sdk, getTokenOptions, urls).then(function (response) {\n    var responseType = ['token'];\n    if (_indexOfInstanceProperty(scopes).call(scopes, 'openid') !== -1) {\n      responseType.push('id_token');\n    }\n    var handleResponseOptions = {\n      clientId: clientId,\n      redirectUri: redirectUri,\n      scopes: scopes,\n      responseType: responseType,\n      ignoreSignature: ignoreSignature\n    };\n    return handleOAuthResponse(sdk, handleResponseOptions, response, urls).then(function (response) {\n      response.code = authorizationCode;\n      response.state = state;\n      return response;\n    });\n  }).finally(function () {\n    sdk.transactionManager.clear();\n  });\n}\nfunction verifyToken(_x, _x2, _x3) {\n  return _verifyToken.apply(this, arguments);\n}\nfunction _verifyToken() {\n  _verifyToken = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(sdk, token, validationParams) {\n    var jwt, configuredIssuer, _yield$getWellKnown, issuer, validationOptions, key, valid, hash;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(!token || !token.idToken)) {\n              _context.next = 2;\n              break;\n            }\n            throw new AuthSdkError('Only idTokens may be verified');\n          case 2:\n            jwt = decodeToken(token.idToken);\n            configuredIssuer = (validationParams === null || validationParams === void 0 ? void 0 : validationParams.issuer) || sdk.options.issuer;\n            _context.next = 6;\n            return getWellKnown(sdk, configuredIssuer);\n          case 6:\n            _yield$getWellKnown = _context.sent;\n            issuer = _yield$getWellKnown.issuer;\n            validationOptions = _Object$assign({\n              clientId: sdk.options.clientId,\n              ignoreSignature: sdk.options.ignoreSignature\n            }, validationParams, {\n              issuer: issuer\n            });\n            validateClaims(sdk, jwt.payload, validationOptions);\n            if (!(validationOptions.ignoreSignature == true || !sdk.features.isTokenVerifySupported())) {\n              _context.next = 12;\n              break;\n            }\n            return _context.abrupt(\"return\", token);\n          case 12:\n            _context.next = 14;\n            return getKey(sdk, token.issuer, jwt.header.kid);\n          case 14:\n            key = _context.sent;\n            _context.next = 17;\n            return verifyToken$1(token.idToken, key);\n          case 17:\n            valid = _context.sent;\n            if (valid) {\n              _context.next = 20;\n              break;\n            }\n            throw new AuthSdkError('The token signature is not valid');\n          case 20:\n            if (!(validationParams && validationParams.accessToken && token.claims.at_hash)) {\n              _context.next = 26;\n              break;\n            }\n            _context.next = 23;\n            return getOidcHash(validationParams.accessToken);\n          case 23:\n            hash = _context.sent;\n            if (!(hash !== token.claims.at_hash)) {\n              _context.next = 26;\n              break;\n            }\n            throw new AuthSdkError('Token hash verification failed');\n          case 26:\n            return _context.abrupt(\"return\", token);\n          case 27:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _verifyToken.apply(this, arguments);\n}\nfunction validateResponse(res, oauthParams) {\n  if (res['error'] && res['error_description']) {\n    throw new OAuthError(res['error'], res['error_description']);\n  }\n  if (res.state !== oauthParams.state) {\n    throw new AuthSdkError('OAuth flow response state doesn\\'t match request state');\n  }\n}\nfunction handleOAuthResponse(_x, _x2, _x3, _x4) {\n  return _handleOAuthResponse.apply(this, arguments);\n}\nfunction _handleOAuthResponse() {\n  _handleOAuthResponse = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(sdk, tokenParams, res, urls) {\n    var pkce, responseType, scopes, clientId, tokenDict, expiresIn, tokenType, accessToken, idToken, refreshToken, now, accessJwt, idJwt, idTokenObj, validationParams;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            pkce = sdk.options.pkce !== false;\n            if (!(pkce && (res.code || res.interaction_code))) {\n              _context.next = 3;\n              break;\n            }\n            return _context.abrupt(\"return\", exchangeCodeForTokens(sdk, _Object$assign({}, tokenParams, {\n              authorizationCode: res.code,\n              interactionCode: res.interaction_code\n            }), urls));\n          case 3:\n            tokenParams = tokenParams || getDefaultTokenParams(sdk);\n            urls = urls || getOAuthUrls(sdk, tokenParams);\n            responseType = tokenParams.responseType || [];\n            if (!Array.isArray(responseType)) {\n              responseType = [responseType];\n            }\n            if (res.scope) {\n              scopes = res.scope.split(' ');\n            } else {\n              scopes = clone(tokenParams.scopes);\n            }\n            clientId = tokenParams.clientId || sdk.options.clientId;\n            validateResponse(res, tokenParams);\n            tokenDict = {};\n            expiresIn = res.expires_in;\n            tokenType = res.token_type;\n            accessToken = res.access_token;\n            idToken = res.id_token;\n            refreshToken = res.refresh_token;\n            now = Math.floor(Date.now() / 1000);\n            if (accessToken) {\n              accessJwt = sdk.token.decode(accessToken);\n              tokenDict.accessToken = {\n                accessToken: accessToken,\n                claims: accessJwt.payload,\n                expiresAt: Number(expiresIn) + now,\n                tokenType: tokenType,\n                scopes: scopes,\n                authorizeUrl: urls.authorizeUrl,\n                userinfoUrl: urls.userinfoUrl\n              };\n            }\n            if (refreshToken) {\n              tokenDict.refreshToken = {\n                refreshToken: refreshToken,\n                expiresAt: Number(expiresIn) + now,\n                scopes: scopes,\n                tokenUrl: urls.tokenUrl,\n                authorizeUrl: urls.authorizeUrl,\n                issuer: urls.issuer\n              };\n            }\n            if (!idToken) {\n              _context.next = 27;\n              break;\n            }\n            idJwt = sdk.token.decode(idToken);\n            idTokenObj = {\n              idToken: idToken,\n              claims: idJwt.payload,\n              expiresAt: idJwt.payload.exp - idJwt.payload.iat + now,\n              scopes: scopes,\n              authorizeUrl: urls.authorizeUrl,\n              issuer: urls.issuer,\n              clientId: clientId\n            };\n            validationParams = {\n              clientId: clientId,\n              issuer: urls.issuer,\n              nonce: tokenParams.nonce,\n              accessToken: accessToken\n            };\n            if (tokenParams.ignoreSignature !== undefined) {\n              validationParams.ignoreSignature = tokenParams.ignoreSignature;\n            }\n            _context.next = 26;\n            return verifyToken(sdk, idTokenObj, validationParams);\n          case 26:\n            tokenDict.idToken = idTokenObj;\n          case 27:\n            if (!(_indexOfInstanceProperty(responseType).call(responseType, 'token') !== -1 && !tokenDict.accessToken)) {\n              _context.next = 29;\n              break;\n            }\n            throw new AuthSdkError('Unable to parse OAuth flow response: response type \"token\" was requested but \"access_token\" was not returned.');\n          case 29:\n            if (!(_indexOfInstanceProperty(responseType).call(responseType, 'id_token') !== -1 && !tokenDict.idToken)) {\n              _context.next = 31;\n              break;\n            }\n            throw new AuthSdkError('Unable to parse OAuth flow response: response type \"id_token\" was requested but \"id_token\" was not returned.');\n          case 31:\n            return _context.abrupt(\"return\", {\n              tokens: tokenDict,\n              state: res.state,\n              code: res.code\n            });\n          case 32:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _handleOAuthResponse.apply(this, arguments);\n}\nfunction getToken(sdk, options) {\n  if (arguments.length > 2) {\n    return _Promise.reject(new AuthSdkError('As of version 3.0, \"getToken\" takes only a single set of options'));\n  }\n  options = options || {};\n  var popupWindow = options.popupWindow;\n  options.popupWindow = undefined;\n  return prepareTokenParams(sdk, options).then(function (tokenParams) {\n    var sessionTokenOverrides = {\n      prompt: 'none',\n      responseMode: 'okta_post_message',\n      display: null\n    };\n    var idpOverrides = {\n      display: 'popup'\n    };\n    if (options.sessionToken) {\n      _Object$assign(tokenParams, sessionTokenOverrides);\n    } else if (options.idp) {\n      _Object$assign(tokenParams, idpOverrides);\n    }\n    var requestUrl, endpoint, urls;\n    urls = getOAuthUrls(sdk, tokenParams);\n    endpoint = options.codeVerifier ? urls.tokenUrl : urls.authorizeUrl;\n    requestUrl = endpoint + buildAuthorizeParams(tokenParams);\n    var flowType;\n    if (tokenParams.sessionToken || tokenParams.display === null) {\n      flowType = 'IFRAME';\n    } else if (tokenParams.display === 'popup') {\n      flowType = 'POPUP';\n    } else {\n      flowType = 'IMPLICIT';\n    }\n    switch (flowType) {\n      case 'IFRAME':\n        var iframePromise = addPostMessageListener(sdk, options.timeout, tokenParams.state);\n        var iframeEl = loadFrame(requestUrl);\n        return iframePromise.then(function (res) {\n          return handleOAuthResponse(sdk, tokenParams, res, urls);\n        }).finally(function () {\n          var _a;\n          if (document.body.contains(iframeEl)) {\n            (_a = iframeEl.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(iframeEl);\n          }\n        });\n      case 'POPUP':\n        var oauthPromise;\n        if (tokenParams.responseMode === 'okta_post_message') {\n          if (!sdk.features.isPopupPostMessageSupported()) {\n            throw new AuthSdkError('This browser doesn\\'t have full postMessage support');\n          }\n          oauthPromise = addPostMessageListener(sdk, options.timeout, tokenParams.state);\n        }\n        if (popupWindow) {\n          popupWindow.location.assign(requestUrl);\n        }\n        var popupPromise = new _Promise(function (resolve, reject) {\n          var closePoller = setInterval(function () {\n            if (!popupWindow || popupWindow.closed) {\n              clearInterval(closePoller);\n              reject(new AuthSdkError('Unable to parse OAuth flow response'));\n            }\n          }, 100);\n          oauthPromise.then(function (res) {\n            clearInterval(closePoller);\n            resolve(res);\n          }).catch(function (err) {\n            clearInterval(closePoller);\n            reject(err);\n          });\n        });\n        return popupPromise.then(function (res) {\n          return handleOAuthResponse(sdk, tokenParams, res, urls);\n        }).finally(function () {\n          if (popupWindow && !popupWindow.closed) {\n            popupWindow.close();\n          }\n        });\n      default:\n        throw new AuthSdkError('The full page redirect flow is not supported');\n    }\n  });\n}\nfunction getWithoutPrompt(sdk, options) {\n  if (arguments.length > 2) {\n    return _Promise.reject(new AuthSdkError('As of version 3.0, \"getWithoutPrompt\" takes only a single set of options'));\n  }\n  options = clone(options) || {};\n  _Object$assign(options, {\n    prompt: 'none',\n    responseMode: 'okta_post_message',\n    display: null\n  });\n  return getToken(sdk, options);\n}\nfunction renewTokensWithRefresh(_x, _x2, _x3) {\n  return _renewTokensWithRefresh.apply(this, arguments);\n}\nfunction _renewTokensWithRefresh() {\n  _renewTokensWithRefresh = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(sdk, tokenParams, refreshTokenObject) {\n    var clientId, renewTokenParams, tokenResponse, urls, _yield$handleOAuthRes, tokens, refreshToken;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            clientId = sdk.options.clientId;\n            if (clientId) {\n              _context.next = 3;\n              break;\n            }\n            throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to renew tokens');\n          case 3:\n            renewTokenParams = _Object$assign({}, tokenParams, {\n              clientId: clientId\n            });\n            _context.next = 6;\n            return postRefreshToken(sdk, renewTokenParams, refreshTokenObject);\n          case 6:\n            tokenResponse = _context.sent;\n            urls = getOAuthUrls(sdk, tokenParams);\n            _context.next = 10;\n            return handleOAuthResponse(sdk, renewTokenParams, tokenResponse, urls);\n          case 10:\n            _yield$handleOAuthRes = _context.sent;\n            tokens = _yield$handleOAuthRes.tokens;\n            refreshToken = tokens.refreshToken;\n            if (refreshToken && !isSameRefreshToken(refreshToken, refreshTokenObject)) {\n              sdk.tokenManager.updateRefreshToken(refreshToken);\n            }\n            return _context.abrupt(\"return\", tokens);\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _renewTokensWithRefresh.apply(this, arguments);\n}\nfunction throwInvalidTokenError() {\n  throw new AuthSdkError('Renew must be passed a token with an array of scopes and an accessToken or idToken');\n}\nfunction getSingleToken(originalToken, tokens) {\n  if (isIDToken(originalToken)) {\n    return tokens.idToken;\n  }\n  if (isAccessToken(originalToken)) {\n    return tokens.accessToken;\n  }\n  throwInvalidTokenError();\n}\nfunction renewToken(_x, _x2) {\n  return _renewToken.apply(this, arguments);\n}\nfunction _renewToken() {\n  _renewToken = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(sdk, token) {\n    var tokens, responseType, scopes, authorizeUrl, userinfoUrl, issuer;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!isIDToken(token) && !isAccessToken(token)) {\n              throwInvalidTokenError();\n            }\n            tokens = sdk.tokenManager.getTokensSync();\n            if (!tokens.refreshToken) {\n              _context.next = 7;\n              break;\n            }\n            _context.next = 5;\n            return renewTokensWithRefresh(sdk, {\n              scopes: token.scopes\n            }, tokens.refreshToken);\n          case 5:\n            tokens = _context.sent;\n            return _context.abrupt(\"return\", getSingleToken(token, tokens));\n          case 7:\n            if (sdk.options.pkce) {\n              responseType = 'code';\n            } else if (isAccessToken(token)) {\n              responseType = 'token';\n            } else {\n              responseType = 'id_token';\n            }\n            scopes = token.scopes, authorizeUrl = token.authorizeUrl, userinfoUrl = token.userinfoUrl, issuer = token.issuer;\n            return _context.abrupt(\"return\", getWithoutPrompt(sdk, {\n              responseType: responseType,\n              scopes: scopes,\n              authorizeUrl: authorizeUrl,\n              userinfoUrl: userinfoUrl,\n              issuer: issuer\n            }).then(function (res) {\n              return getSingleToken(token, res.tokens);\n            }));\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _renewToken.apply(this, arguments);\n}\nfunction renewTokens(_x, _x2) {\n  return _renewTokens.apply(this, arguments);\n}\nfunction _renewTokens() {\n  _renewTokens = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(sdk, options) {\n    var tokens, accessToken, idToken, scopes, authorizeUrl, userinfoUrl, issuer, _getDefaultTokenParam, responseType;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            tokens = sdk.tokenManager.getTokensSync();\n            if (!tokens.refreshToken) {\n              _context.next = 3;\n              break;\n            }\n            return _context.abrupt(\"return\", renewTokensWithRefresh(sdk, options || {}, tokens.refreshToken));\n          case 3:\n            if (!(!tokens.accessToken && !tokens.idToken)) {\n              _context.next = 5;\n              break;\n            }\n            throw new AuthSdkError('renewTokens() was called but there is no existing token');\n          case 5:\n            accessToken = tokens.accessToken || {};\n            idToken = tokens.idToken || {};\n            scopes = accessToken.scopes || idToken.scopes;\n            if (scopes) {\n              _context.next = 10;\n              break;\n            }\n            throw new AuthSdkError('renewTokens: invalid tokens: could not read scopes');\n          case 10:\n            authorizeUrl = accessToken.authorizeUrl || idToken.authorizeUrl;\n            if (authorizeUrl) {\n              _context.next = 13;\n              break;\n            }\n            throw new AuthSdkError('renewTokens: invalid tokens: could not read authorizeUrl');\n          case 13:\n            userinfoUrl = accessToken.userinfoUrl || sdk.options.userinfoUrl;\n            issuer = idToken.issuer || sdk.options.issuer;\n            options = _Object$assign({\n              scopes: scopes,\n              authorizeUrl: authorizeUrl,\n              userinfoUrl: userinfoUrl,\n              issuer: issuer\n            }, options);\n            if (sdk.options.pkce) {\n              options.responseType = 'code';\n            } else {\n              _getDefaultTokenParam = getDefaultTokenParams(sdk), responseType = _getDefaultTokenParam.responseType;\n              options.responseType = responseType;\n            }\n            return _context.abrupt(\"return\", getWithoutPrompt(sdk, options).then(function (res) {\n              return res.tokens;\n            }));\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _renewTokens.apply(this, arguments);\n}\nfunction getUserInfo(_x, _x2, _x3) {\n  return _getUserInfo.apply(this, arguments);\n}\nfunction _getUserInfo() {\n  _getUserInfo = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(sdk, accessTokenObject, idTokenObject) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (accessTokenObject) {\n              _context.next = 4;\n              break;\n            }\n            _context.next = 3;\n            return sdk.tokenManager.getTokens();\n          case 3:\n            accessTokenObject = _context.sent.accessToken;\n          case 4:\n            if (idTokenObject) {\n              _context.next = 8;\n              break;\n            }\n            _context.next = 7;\n            return sdk.tokenManager.getTokens();\n          case 7:\n            idTokenObject = _context.sent.idToken;\n          case 8:\n            if (!(!accessTokenObject || !isAccessToken(accessTokenObject))) {\n              _context.next = 10;\n              break;\n            }\n            return _context.abrupt(\"return\", _Promise.reject(new AuthSdkError('getUserInfo requires an access token object')));\n          case 10:\n            if (!(!idTokenObject || !isIDToken(idTokenObject))) {\n              _context.next = 12;\n              break;\n            }\n            return _context.abrupt(\"return\", _Promise.reject(new AuthSdkError('getUserInfo requires an ID token object')));\n          case 12:\n            return _context.abrupt(\"return\", httpRequest(sdk, {\n              url: accessTokenObject.userinfoUrl,\n              method: 'GET',\n              accessToken: accessTokenObject.accessToken\n            }).then(function (userInfo) {\n              if (userInfo.sub === idTokenObject.claims.sub) {\n                return userInfo;\n              }\n              return _Promise.reject(new AuthSdkError('getUserInfo request was rejected due to token mismatch'));\n            }).catch(function (err) {\n              if (err.xhr && (err.xhr.status === 401 || err.xhr.status === 403)) {\n                var authenticateHeader;\n                if (err.xhr.headers && isFunction(err.xhr.headers.get) && err.xhr.headers.get('WWW-Authenticate')) {\n                  authenticateHeader = err.xhr.headers.get('WWW-Authenticate');\n                } else if (isFunction(err.xhr.getResponseHeader)) {\n                  authenticateHeader = err.xhr.getResponseHeader('WWW-Authenticate');\n                }\n                if (authenticateHeader) {\n                  var errorMatches = authenticateHeader.match(/error=\"(.*?)\"/) || [];\n                  var errorDescriptionMatches = authenticateHeader.match(/error_description=\"(.*?)\"/) || [];\n                  var error = errorMatches[1];\n                  var errorDescription = errorDescriptionMatches[1];\n                  if (error && errorDescription) {\n                    err = new OAuthError(error, errorDescription);\n                  }\n                }\n              }\n              throw err;\n            }));\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getUserInfo.apply(this, arguments);\n}\nfunction getWithPopup(sdk, options) {\n  if (arguments.length > 2) {\n    return _Promise.reject(new AuthSdkError('As of version 3.0, \"getWithPopup\" takes only a single set of options'));\n  }\n  var popupWindow = loadPopup('/', options);\n  options = clone(options) || {};\n  _Object$assign(options, {\n    display: 'popup',\n    responseMode: 'okta_post_message',\n    popupWindow: popupWindow\n  });\n  return getToken(sdk, options);\n}\nfunction getWithRedirect(_x, _x2) {\n  return _getWithRedirect.apply(this, arguments);\n}\nfunction _getWithRedirect() {\n  _getWithRedirect = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(sdk, options) {\n    var tokenParams,\n      meta,\n      requestUrl,\n      _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(_args.length > 2)) {\n              _context.next = 2;\n              break;\n            }\n            return _context.abrupt(\"return\", _Promise.reject(new AuthSdkError('As of version 3.0, \"getWithRedirect\" takes only a single set of options')));\n          case 2:\n            options = clone(options) || {};\n            _context.next = 5;\n            return prepareTokenParams(sdk, options);\n          case 5:\n            tokenParams = _context.sent;\n            meta = createOAuthMeta(sdk, tokenParams);\n            requestUrl = meta.urls.authorizeUrl + buildAuthorizeParams(tokenParams);\n            sdk.transactionManager.save(meta, {\n              oauth: true\n            });\n            sdk.token.getWithRedirect._setLocation(requestUrl);\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getWithRedirect.apply(this, arguments);\n}\nfunction removeHash(sdk) {\n  var nativeHistory = sdk.token.parseFromUrl._getHistory();\n  var nativeDoc = sdk.token.parseFromUrl._getDocument();\n  var nativeLoc = sdk.token.parseFromUrl._getLocation();\n  if (nativeHistory && nativeHistory.replaceState) {\n    nativeHistory.replaceState(null, nativeDoc.title, nativeLoc.pathname + nativeLoc.search);\n  } else {\n    nativeLoc.hash = '';\n  }\n}\nfunction removeSearch(sdk) {\n  var nativeHistory = sdk.token.parseFromUrl._getHistory();\n  var nativeDoc = sdk.token.parseFromUrl._getDocument();\n  var nativeLoc = sdk.token.parseFromUrl._getLocation();\n  if (nativeHistory && nativeHistory.replaceState) {\n    nativeHistory.replaceState(null, nativeDoc.title, nativeLoc.pathname + nativeLoc.hash);\n  } else {\n    nativeLoc.search = '';\n  }\n}\nfunction getResponseMode(sdk) {\n  var defaultResponseMode = sdk.options.pkce ? 'query' : 'fragment';\n  var responseMode = sdk.options.responseMode || defaultResponseMode;\n  return responseMode;\n}\nfunction parseOAuthResponseFromUrl(sdk, options) {\n  options = options || {};\n  if (isString(options)) {\n    options = {\n      url: options\n    };\n  } else {\n    options = options;\n  }\n  var url = options.url;\n  var responseMode = options.responseMode || getResponseMode(sdk);\n  var nativeLoc = sdk.token.parseFromUrl._getLocation();\n  var paramStr;\n  if (responseMode === 'query') {\n    paramStr = url ? url.substring(_indexOfInstanceProperty(url).call(url, '?')) : nativeLoc.search;\n  } else {\n    paramStr = url ? url.substring(_indexOfInstanceProperty(url).call(url, '#')) : nativeLoc.hash;\n  }\n  if (!paramStr) {\n    throw new AuthSdkError('Unable to parse a token from the url');\n  }\n  return urlParamsToObject(paramStr);\n}\nfunction cleanOAuthResponseFromUrl(sdk, options) {\n  var responseMode = options.responseMode || getResponseMode(sdk);\n  responseMode === 'query' ? removeSearch(sdk) : removeHash(sdk);\n}\nfunction parseFromUrl(_x, _x2) {\n  return _parseFromUrl.apply(this, arguments);\n}\nfunction _parseFromUrl() {\n  _parseFromUrl = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(sdk, options) {\n    var res, state, oauthParams, urls;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            options = options || {};\n            if (isString(options)) {\n              options = {\n                url: options\n              };\n            } else {\n              options = options;\n            }\n            res = parseOAuthResponseFromUrl(sdk, options);\n            state = res.state;\n            oauthParams = sdk.transactionManager.load({\n              oauth: true,\n              pkce: sdk.options.pkce,\n              state: state\n            });\n            if (oauthParams) {\n              _context.next = 7;\n              break;\n            }\n            return _context.abrupt(\"return\", _Promise.reject(new AuthSdkError('Unable to retrieve OAuth redirect params from storage')));\n          case 7:\n            urls = oauthParams.urls;\n            delete oauthParams.urls;\n            if (!options.url) {\n              cleanOAuthResponseFromUrl(sdk, options);\n            }\n            return _context.abrupt(\"return\", handleOAuthResponse(sdk, oauthParams, res, urls).catch(function (err) {\n              if (!isInteractionRequiredError(err)) {\n                sdk.transactionManager.clear({\n                  state: state\n                });\n              }\n              throw err;\n            }).then(function (res) {\n              sdk.transactionManager.clear({\n                state: state\n              });\n              return res;\n            }));\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _parseFromUrl.apply(this, arguments);\n}\nvar getEnrolledCredentials = function getEnrolledCredentials() {\n  var authenticatorEnrollments = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var credentials = [];\n  authenticatorEnrollments.forEach(function (enrollement) {\n    if (enrollement.key === 'webauthn') {\n      credentials.push({\n        type: 'public-key',\n        id: base64UrlToBuffer(enrollement.credentialId)\n      });\n    }\n  });\n  return credentials;\n};\nvar buildCredentialCreationOptions = function buildCredentialCreationOptions(activationData, authenticatorEnrollments) {\n  return {\n    publicKey: {\n      rp: activationData.rp,\n      user: {\n        id: base64UrlToBuffer(activationData.user.id),\n        name: activationData.user.name,\n        displayName: activationData.user.displayName\n      },\n      challenge: base64UrlToBuffer(activationData.challenge),\n      pubKeyCredParams: activationData.pubKeyCredParams,\n      attestation: activationData.attestation,\n      authenticatorSelection: activationData.authenticatorSelection,\n      excludeCredentials: getEnrolledCredentials(authenticatorEnrollments)\n    }\n  };\n};\nvar buildCredentialRequestOptions = function buildCredentialRequestOptions(challengeData, authenticatorEnrollments) {\n  return {\n    publicKey: {\n      challenge: base64UrlToBuffer(challengeData.challenge),\n      userVerification: challengeData.userVerification,\n      allowCredentials: getEnrolledCredentials(authenticatorEnrollments)\n    }\n  };\n};\nvar getAttestation = function getAttestation(credential) {\n  var response = credential.response;\n  var id = credential.id;\n  var clientData = bufferToBase64Url(response.clientDataJSON);\n  var attestation = bufferToBase64Url(response.attestationObject);\n  return {\n    id: id,\n    clientData: clientData,\n    attestation: attestation\n  };\n};\nvar getAssertion = function getAssertion(credential) {\n  var response = credential.response;\n  var id = credential.id;\n  var clientData = bufferToBase64Url(response.clientDataJSON);\n  var authenticatorData = bufferToBase64Url(response.authenticatorData);\n  var signatureData = bufferToBase64Url(response.signature);\n  return {\n    id: id,\n    clientData: clientData,\n    authenticatorData: authenticatorData,\n    signatureData: signatureData\n  };\n};\nvar webauthn = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  buildCredentialCreationOptions: buildCredentialCreationOptions,\n  buildCredentialRequestOptions: buildCredentialRequestOptions,\n  getAttestation: getAttestation,\n  getAssertion: getAssertion\n});\nvar storageUtil = {\n  getHttpCache: function getHttpCache() {\n    return null;\n  },\n  getPKCEStorage: function getPKCEStorage() {\n    return null;\n  },\n  browserHasLocalStorage: function browserHasLocalStorage() {\n    try {\n      var storage = this.getLocalStorage();\n      return this.testStorage(storage);\n    } catch (e) {\n      return false;\n    }\n  },\n  browserHasSessionStorage: function browserHasSessionStorage() {\n    try {\n      var storage = this.getSessionStorage();\n      return this.testStorage(storage);\n    } catch (e) {\n      return false;\n    }\n  },\n  testStorageType: function testStorageType(storageType) {\n    var supported = false;\n    switch (storageType) {\n      case 'sessionStorage':\n        supported = this.browserHasSessionStorage();\n        break;\n      case 'localStorage':\n        supported = this.browserHasLocalStorage();\n        break;\n      case 'cookie':\n      case 'memory':\n        supported = true;\n        break;\n      default:\n        supported = false;\n        break;\n    }\n    return supported;\n  },\n  getStorageByType: function getStorageByType(storageType, options) {\n    var storageProvider;\n    switch (storageType) {\n      case 'sessionStorage':\n        storageProvider = this.getSessionStorage();\n        break;\n      case 'localStorage':\n        storageProvider = this.getLocalStorage();\n        break;\n      case 'cookie':\n        storageProvider = this.getCookieStorage(options);\n        break;\n      case 'memory':\n        storageProvider = this.getInMemoryStorage();\n        break;\n      default:\n        throw new AuthSdkError(\"Unrecognized storage option: \".concat(storageType));\n    }\n    return storageProvider;\n  },\n  findStorageType: function findStorageType(types) {\n    var _context;\n    var curType;\n    var nextType;\n    types = _sliceInstanceProperty(types).call(types);\n    curType = types.shift();\n    nextType = types.length ? types[0] : null;\n    if (!nextType) {\n      return curType;\n    }\n    if (this.testStorageType(curType)) {\n      return curType;\n    }\n    warn(_concatInstanceProperty(_context = \"This browser doesn't support \".concat(curType, \". Switching to \")).call(_context, nextType, \".\"));\n    return this.findStorageType(types);\n  },\n  getLocalStorage: function getLocalStorage() {\n    return localStorage;\n  },\n  getSessionStorage: function getSessionStorage() {\n    return sessionStorage;\n  },\n  getCookieStorage: function getCookieStorage(options) {\n    var _this = this;\n    var secure = options.secure;\n    var sameSite = options.sameSite;\n    var sessionCookie = options.sessionCookie;\n    if (typeof secure === 'undefined' || typeof sameSite === 'undefined') {\n      throw new AuthSdkError('getCookieStorage: \"secure\" and \"sameSite\" options must be provided');\n    }\n    var storage = {\n      getItem: this.storage.get,\n      setItem: function setItem(key, value) {\n        var expiresAt = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '2200-01-01T00:00:00.000Z';\n        expiresAt = sessionCookie ? null : expiresAt;\n        _this.storage.set(key, value, expiresAt, {\n          secure: secure,\n          sameSite: sameSite\n        });\n      },\n      removeItem: function removeItem(key) {\n        _this.storage.delete(key);\n      }\n    };\n    if (!options.useSeparateCookies) {\n      return storage;\n    }\n    return {\n      getItem: function getItem(key) {\n        var data = storage.getItem();\n        var value = {};\n        _Object$keys(data).forEach(function (k) {\n          if (_indexOfInstanceProperty(k).call(k, key) === 0) {\n            value[k.replace(\"\".concat(key, \"_\"), '')] = JSON.parse(data[k]);\n          }\n        });\n        return _JSON$stringify(value);\n      },\n      setItem: function setItem(key, value) {\n        var existingValues = JSON.parse(this.getItem(key));\n        value = JSON.parse(value);\n        _Object$keys(value).forEach(function (k) {\n          var storageKey = key + '_' + k;\n          var valueToStore = _JSON$stringify(value[k]);\n          storage.setItem(storageKey, valueToStore);\n          delete existingValues[k];\n        });\n        _Object$keys(existingValues).forEach(function (k) {\n          storage.removeItem(key + '_' + k);\n        });\n      },\n      removeItem: function removeItem(key) {\n        var existingValues = JSON.parse(this.getItem(key));\n        _Object$keys(existingValues).forEach(function (k) {\n          storage.removeItem(key + '_' + k);\n        });\n      }\n    };\n  },\n  inMemoryStore: {},\n  getInMemoryStorage: function getInMemoryStorage() {\n    var _this2 = this;\n    return {\n      getItem: function getItem(key) {\n        return _this2.inMemoryStore[key];\n      },\n      setItem: function setItem(key, value) {\n        _this2.inMemoryStore[key] = value;\n      }\n    };\n  },\n  testStorage: function testStorage(storage) {\n    var key = 'okta-test-storage';\n    try {\n      storage.setItem(key, key);\n      storage.removeItem(key);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  },\n  storage: {\n    set: function set(name, value, expiresAt, options) {\n      var sameSite = options.sameSite,\n        secure = options.secure;\n      if (typeof secure === 'undefined' || typeof sameSite === 'undefined') {\n        throw new AuthSdkError('storage.set: \"secure\" and \"sameSite\" options must be provided');\n      }\n      var cookieOptions = {\n        path: options.path || '/',\n        secure: secure,\n        sameSite: sameSite\n      };\n      if (!!Date.parse(expiresAt)) {\n        cookieOptions.expires = new Date(expiresAt);\n      }\n      Cookies.set(name, value, cookieOptions);\n      return this.get(name);\n    },\n    get: function get(name) {\n      if (!arguments.length) {\n        return Cookies.get();\n      }\n      return Cookies.get(name);\n    },\n    delete: function _delete(name) {\n      return Cookies.remove(name, {\n        path: '/'\n      });\n    }\n  }\n};\nvar SdkClock = function () {\n  function SdkClock(localOffset) {\n    _classCallCheck(this, SdkClock);\n    this.localOffset = _parseInt(localOffset || 0);\n  }\n  _createClass(SdkClock, [{\n    key: \"now\",\n    value: function now() {\n      var now = (Date.now() + this.localOffset) / 1000;\n      return now;\n    }\n  }], [{\n    key: \"create\",\n    value: function create() {\n      var localOffset = 0;\n      return new SdkClock(localOffset);\n    }\n  }]);\n  return SdkClock;\n}();\nvar DEFAULT_OPTIONS = {\n  autoRenew: true,\n  autoRemove: true,\n  syncStorage: true,\n  clearPendingRemoveTokens: true,\n  storage: undefined,\n  expireEarlySeconds: 30,\n  storageKey: TOKEN_STORAGE_NAME,\n  _storageEventDelay: 0\n};\nvar EVENT_EXPIRED = 'expired';\nvar EVENT_RENEWED = 'renewed';\nvar EVENT_ADDED = 'added';\nvar EVENT_REMOVED = 'removed';\nvar EVENT_ERROR = 'error';\nfunction defaultState() {\n  return {\n    expireTimeouts: {},\n    renewPromise: null\n  };\n}\nvar TokenManager = function () {\n  function TokenManager(sdk) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, TokenManager);\n    this.sdk = sdk;\n    this.emitter = sdk.emitter;\n    if (!this.emitter) {\n      throw new AuthSdkError('Emitter should be initialized before TokenManager');\n    }\n    options = _Object$assign({}, DEFAULT_OPTIONS, removeNils(options));\n    if (isIE11OrLess()) {\n      options._storageEventDelay = options._storageEventDelay || 1000;\n    }\n    if (!isLocalhost()) {\n      options.expireEarlySeconds = DEFAULT_OPTIONS.expireEarlySeconds;\n    }\n    this.options = options;\n    var storageOptions = removeNils({\n      storageKey: options.storageKey,\n      secure: options.secure\n    });\n    if (_typeof(options.storage) === 'object') {\n      storageOptions.storageProvider = options.storage;\n    } else if (options.storage) {\n      storageOptions.storageType = options.storage;\n    }\n    this.storage = sdk.storageManager.getTokenStorage(_Object$assign(_Object$assign({}, storageOptions), {\n      useSeparateCookies: true\n    }));\n    this.clock = SdkClock.create();\n    this.state = defaultState();\n    this.on = this.emitter.on.bind(this.emitter);\n    this.off = this.emitter.off.bind(this.emitter);\n  }\n  _createClass(TokenManager, [{\n    key: \"start\",\n    value: function start() {\n      if (this.options.clearPendingRemoveTokens) {\n        this.clearPendingRemoveTokens();\n      }\n      this.setExpireEventTimeoutAll();\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.clearExpireEventTimeoutAll();\n    }\n  }, {\n    key: \"getOptions\",\n    value: function getOptions() {\n      return clone(this.options);\n    }\n  }, {\n    key: \"getExpireTime\",\n    value: function getExpireTime(token) {\n      var expireEarlySeconds = this.options.expireEarlySeconds || 0;\n      var expireTime = token.expiresAt - expireEarlySeconds;\n      return expireTime;\n    }\n  }, {\n    key: \"hasExpired\",\n    value: function hasExpired(token) {\n      var expireTime = this.getExpireTime(token);\n      return expireTime <= this.clock.now();\n    }\n  }, {\n    key: \"emitExpired\",\n    value: function emitExpired(key, token) {\n      this.emitter.emit(EVENT_EXPIRED, key, token);\n    }\n  }, {\n    key: \"emitRenewed\",\n    value: function emitRenewed(key, freshToken, oldToken) {\n      this.emitter.emit(EVENT_RENEWED, key, freshToken, oldToken);\n    }\n  }, {\n    key: \"emitAdded\",\n    value: function emitAdded(key, token) {\n      this.emitter.emit(EVENT_ADDED, key, token);\n    }\n  }, {\n    key: \"emitRemoved\",\n    value: function emitRemoved(key, token) {\n      this.emitter.emit(EVENT_REMOVED, key, token);\n    }\n  }, {\n    key: \"emitError\",\n    value: function emitError(error) {\n      this.emitter.emit(EVENT_ERROR, error);\n    }\n  }, {\n    key: \"emitEventsForCrossTabsStorageUpdate\",\n    value: function emitEventsForCrossTabsStorageUpdate(newValue, oldValue) {\n      var _this = this;\n      var oldTokens = this.getTokensFromStorageValue(oldValue);\n      var newTokens = this.getTokensFromStorageValue(newValue);\n      _Object$keys(newTokens).forEach(function (key) {\n        var oldToken = oldTokens[key];\n        var newToken = newTokens[key];\n        if (_JSON$stringify(oldToken) !== _JSON$stringify(newToken)) {\n          _this.emitAdded(key, newToken);\n        }\n      });\n      _Object$keys(oldTokens).forEach(function (key) {\n        var oldToken = oldTokens[key];\n        var newToken = newTokens[key];\n        if (!newToken) {\n          _this.emitRemoved(key, oldToken);\n        }\n      });\n    }\n  }, {\n    key: \"clearExpireEventTimeout\",\n    value: function clearExpireEventTimeout(key) {\n      clearTimeout(this.state.expireTimeouts[key]);\n      delete this.state.expireTimeouts[key];\n      this.state.renewPromise = null;\n    }\n  }, {\n    key: \"clearExpireEventTimeoutAll\",\n    value: function clearExpireEventTimeoutAll() {\n      var expireTimeouts = this.state.expireTimeouts;\n      for (var key in expireTimeouts) {\n        if (!Object.prototype.hasOwnProperty.call(expireTimeouts, key)) {\n          continue;\n        }\n        this.clearExpireEventTimeout(key);\n      }\n    }\n  }, {\n    key: \"setExpireEventTimeout\",\n    value: function setExpireEventTimeout(key, token) {\n      var _this2 = this;\n      if (isRefreshToken(token)) {\n        return;\n      }\n      var expireTime = this.getExpireTime(token);\n      var expireEventWait = Math.max(expireTime - this.clock.now(), 0) * 1000;\n      this.clearExpireEventTimeout(key);\n      var expireEventTimeout = setTimeout(function () {\n        _this2.emitExpired(key, token);\n      }, expireEventWait);\n      this.state.expireTimeouts[key] = expireEventTimeout;\n    }\n  }, {\n    key: \"setExpireEventTimeoutAll\",\n    value: function setExpireEventTimeoutAll() {\n      var tokenStorage = this.storage.getStorage();\n      for (var key in tokenStorage) {\n        if (!Object.prototype.hasOwnProperty.call(tokenStorage, key)) {\n          continue;\n        }\n        var token = tokenStorage[key];\n        this.setExpireEventTimeout(key, token);\n      }\n    }\n  }, {\n    key: \"resetExpireEventTimeoutAll\",\n    value: function resetExpireEventTimeoutAll() {\n      this.clearExpireEventTimeoutAll();\n      this.setExpireEventTimeoutAll();\n    }\n  }, {\n    key: \"add\",\n    value: function add(key, token) {\n      var tokenStorage = this.storage.getStorage();\n      validateToken(token);\n      tokenStorage[key] = token;\n      this.storage.setStorage(tokenStorage);\n      this.emitAdded(key, token);\n      this.setExpireEventTimeout(key, token);\n    }\n  }, {\n    key: \"getSync\",\n    value: function getSync(key) {\n      var tokenStorage = this.storage.getStorage();\n      return tokenStorage[key];\n    }\n  }, {\n    key: \"get\",\n    value: function () {\n      var _get = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(key) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", this.getSync(key));\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function get(_x) {\n        return _get.apply(this, arguments);\n      }\n      return get;\n    }()\n  }, {\n    key: \"getTokensSync\",\n    value: function getTokensSync() {\n      var tokens = {};\n      var tokenStorage = this.storage.getStorage();\n      _Object$keys(tokenStorage).forEach(function (key) {\n        var token = tokenStorage[key];\n        if (isAccessToken(token)) {\n          tokens.accessToken = token;\n        } else if (isIDToken(token)) {\n          tokens.idToken = token;\n        } else if (isRefreshToken(token)) {\n          tokens.refreshToken = token;\n        }\n      });\n      return tokens;\n    }\n  }, {\n    key: \"getTokens\",\n    value: function () {\n      var _getTokens = _asyncToGenerator(_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", this.getTokensSync());\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n      function getTokens() {\n        return _getTokens.apply(this, arguments);\n      }\n      return getTokens;\n    }()\n  }, {\n    key: \"getStorageKeyByType\",\n    value: function getStorageKeyByType(type) {\n      var _context3;\n      var tokenStorage = this.storage.getStorage();\n      var key = _filterInstanceProperty(_context3 = _Object$keys(tokenStorage)).call(_context3, function (key) {\n        var token = tokenStorage[key];\n        return isAccessToken(token) && type === 'accessToken' || isIDToken(token) && type === 'idToken' || isRefreshToken(token) && type === 'refreshToken';\n      })[0];\n      return key;\n    }\n  }, {\n    key: \"getTokenType\",\n    value: function getTokenType(token) {\n      if (isAccessToken(token)) {\n        return 'accessToken';\n      }\n      if (isIDToken(token)) {\n        return 'idToken';\n      }\n      if (isRefreshToken(token)) {\n        return 'refreshToken';\n      }\n      throw new AuthSdkError('Unknown token type');\n    }\n  }, {\n    key: \"setTokens\",\n    value: function setTokens(tokens, accessTokenCb, idTokenCb, refreshTokenCb) {\n      var _this3 = this;\n      var handleTokenCallback = function handleTokenCallback(key, token) {\n        var type = _this3.getTokenType(token);\n        if (type === 'accessToken') {\n          accessTokenCb && accessTokenCb(key, token);\n        } else if (type === 'idToken') {\n          idTokenCb && idTokenCb(key, token);\n        } else if (type === 'refreshToken') {\n          refreshTokenCb && refreshTokenCb(key, token);\n        }\n      };\n      var handleAdded = function handleAdded(key, token) {\n        _this3.emitAdded(key, token);\n        _this3.setExpireEventTimeout(key, token);\n        handleTokenCallback(key, token);\n      };\n      var handleRenewed = function handleRenewed(key, token, oldToken) {\n        _this3.emitRenewed(key, token, oldToken);\n        _this3.clearExpireEventTimeout(key);\n        _this3.setExpireEventTimeout(key, token);\n        handleTokenCallback(key, token);\n      };\n      var handleRemoved = function handleRemoved(key, token) {\n        _this3.clearExpireEventTimeout(key);\n        _this3.emitRemoved(key, token);\n        handleTokenCallback(key, token);\n      };\n      var types = ['idToken', 'accessToken', 'refreshToken'];\n      var existingTokens = this.getTokensSync();\n      types.forEach(function (type) {\n        var token = tokens[type];\n        if (token) {\n          validateToken(token, type);\n        }\n      });\n      var storage = _reduceInstanceProperty(types).call(types, function (storage, type) {\n        var token = tokens[type];\n        if (token) {\n          var storageKey = _this3.getStorageKeyByType(type) || type;\n          storage[storageKey] = token;\n        }\n        return storage;\n      }, {});\n      this.storage.setStorage(storage);\n      types.forEach(function (type) {\n        var newToken = tokens[type];\n        var existingToken = existingTokens[type];\n        var storageKey = _this3.getStorageKeyByType(type) || type;\n        if (newToken && existingToken) {\n          handleRemoved(storageKey, existingToken);\n          handleAdded(storageKey, newToken);\n          handleRenewed(storageKey, newToken, existingToken);\n        } else if (newToken) {\n          handleAdded(storageKey, newToken);\n        } else if (existingToken) {\n          handleRemoved(storageKey, existingToken);\n        }\n      });\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(key) {\n      this.clearExpireEventTimeout(key);\n      var tokenStorage = this.storage.getStorage();\n      var removedToken = tokenStorage[key];\n      delete tokenStorage[key];\n      this.storage.setStorage(tokenStorage);\n      this.emitRemoved(key, removedToken);\n    }\n  }, {\n    key: \"renewToken\",\n    value: function () {\n      var _renewToken = _asyncToGenerator(_regeneratorRuntime.mark(function _callee3(token) {\n        var _a;\n        return _regeneratorRuntime.wrap(function _callee3$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                return _context4.abrupt(\"return\", (_a = this.sdk.token) === null || _a === void 0 ? void 0 : _a.renew(token));\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n      function renewToken(_x2) {\n        return _renewToken.apply(this, arguments);\n      }\n      return renewToken;\n    }()\n  }, {\n    key: \"validateToken\",\n    value: function validateToken$1(token) {\n      return validateToken(token);\n    }\n  }, {\n    key: \"renew\",\n    value: function renew(key) {\n      var _this4 = this;\n      if (this.state.renewPromise) {\n        return this.state.renewPromise;\n      }\n      try {\n        var token = this.getSync(key);\n        if (!token) {\n          throw new AuthSdkError('The tokenManager has no token for the key: ' + key);\n        }\n      } catch (e) {\n        return _Promise.reject(e);\n      }\n      this.clearExpireEventTimeout(key);\n      this.state.renewPromise = this.sdk.token.renewTokens().then(function (tokens) {\n        _this4.setTokens(tokens);\n        var tokenType = _this4.getTokenType(token);\n        return tokens[tokenType];\n      }).catch(function (err) {\n        _this4.remove(key);\n        err.tokenKey = key;\n        _this4.emitError(err);\n        throw err;\n      }).finally(function () {\n        _this4.state.renewPromise = null;\n      });\n      return this.state.renewPromise;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.clearExpireEventTimeoutAll();\n      this.storage.clearStorage();\n    }\n  }, {\n    key: \"clearPendingRemoveTokens\",\n    value: function clearPendingRemoveTokens() {\n      var _this5 = this;\n      var tokens = this.getTokensSync();\n      _Object$keys(tokens).forEach(function (key) {\n        if (tokens[key].pendingRemove) {\n          _this5.remove(key);\n        }\n      });\n    }\n  }, {\n    key: \"getTokensFromStorageValue\",\n    value: function getTokensFromStorageValue(value) {\n      var tokens;\n      try {\n        tokens = JSON.parse(value) || {};\n      } catch (e) {\n        tokens = {};\n      }\n      return tokens;\n    }\n  }, {\n    key: \"updateRefreshToken\",\n    value: function updateRefreshToken(token) {\n      var key = this.getStorageKeyByType('refreshToken') || REFRESH_TOKEN_STORAGE_KEY;\n      var tokenStorage = this.storage.getStorage();\n      validateToken(token);\n      tokenStorage[key] = token;\n      this.storage.setStorage(tokenStorage);\n    }\n  }, {\n    key: \"addPendingRemoveFlags\",\n    value: function addPendingRemoveFlags() {\n      var tokens = this.getTokensSync();\n      _Object$keys(tokens).forEach(function (key) {\n        tokens[key].pendingRemove = true;\n      });\n      this.setTokens(tokens);\n    }\n  }]);\n  return TokenManager;\n}();\nvar AutoRenewService = function () {\n  function AutoRenewService(tokenManager) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, AutoRenewService);\n    this.started = false;\n    this.tokenManager = tokenManager;\n    this.options = options;\n    this.renewTimeQueue = [];\n    this.onTokenExpiredHandler = this.onTokenExpiredHandler.bind(this);\n  }\n  _createClass(AutoRenewService, [{\n    key: \"shouldThrottleRenew\",\n    value: function shouldThrottleRenew() {\n      var res = false;\n      this.renewTimeQueue.push(Date.now());\n      if (this.renewTimeQueue.length >= 10) {\n        var firstTime = this.renewTimeQueue.shift();\n        var lastTime = this.renewTimeQueue[this.renewTimeQueue.length - 1];\n        res = lastTime - firstTime < 30 * 1000;\n      }\n      return res;\n    }\n  }, {\n    key: \"requiresLeadership\",\n    value: function requiresLeadership() {\n      return !!this.options.syncStorage && isBrowser();\n    }\n  }, {\n    key: \"onTokenExpiredHandler\",\n    value: function onTokenExpiredHandler(key) {\n      if (this.options.autoRenew) {\n        if (this.shouldThrottleRenew()) {\n          var error = new AuthSdkError('Too many token renew requests');\n          this.tokenManager.emitError(error);\n        } else {\n          this.tokenManager.renew(key).catch(function () {});\n        }\n      } else if (this.options.autoRemove) {\n        this.tokenManager.remove(key);\n      }\n    }\n  }, {\n    key: \"canStart\",\n    value: function canStart() {\n      return !!this.options.autoRenew || !!this.options.autoRemove;\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      if (this.canStart()) {\n        this.stop();\n        this.tokenManager.on(EVENT_EXPIRED, this.onTokenExpiredHandler);\n        this.started = true;\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      if (this.started) {\n        this.tokenManager.off(EVENT_EXPIRED, this.onTokenExpiredHandler);\n        this.renewTimeQueue = [];\n        this.started = false;\n      }\n    }\n  }, {\n    key: \"isStarted\",\n    value: function isStarted() {\n      return this.started;\n    }\n  }]);\n  return AutoRenewService;\n}();\nvar SyncStorageService = function () {\n  function SyncStorageService(tokenManager) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, SyncStorageService);\n    this.started = false;\n    this.tokenManager = tokenManager;\n    this.options = options;\n    this.storageListener = this.storageListener.bind(this);\n  }\n  _createClass(SyncStorageService, [{\n    key: \"storageListener\",\n    value: function storageListener(_ref) {\n      var _this = this;\n      var key = _ref.key,\n        newValue = _ref.newValue,\n        oldValue = _ref.oldValue;\n      var opts = this.tokenManager.getOptions();\n      var handleCrossTabsStorageChange = function handleCrossTabsStorageChange() {\n        _this.tokenManager.resetExpireEventTimeoutAll();\n        _this.tokenManager.emitEventsForCrossTabsStorageUpdate(newValue, oldValue);\n      };\n      if (key && (key !== opts.storageKey || newValue === oldValue)) {\n        return;\n      }\n      this.syncTimeout = setTimeout(function () {\n        return handleCrossTabsStorageChange();\n      }, opts._storageEventDelay);\n    }\n  }, {\n    key: \"requiresLeadership\",\n    value: function requiresLeadership() {\n      return false;\n    }\n  }, {\n    key: \"isStarted\",\n    value: function isStarted() {\n      return this.started;\n    }\n  }, {\n    key: \"canStart\",\n    value: function canStart() {\n      return !!this.options.syncStorage && isBrowser();\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      if (this.canStart()) {\n        this.stop();\n        window.addEventListener('storage', this.storageListener);\n        this.started = true;\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      if (this.started) {\n        window.removeEventListener('storage', this.storageListener);\n        clearTimeout(this.syncTimeout);\n        this.started = false;\n      }\n    }\n  }]);\n  return SyncStorageService;\n}();\nfunction _createForOfIteratorHelper$7(o, allowArrayLike) {\n  var it = typeof _Symbol !== \"undefined\" && _getIteratorMethod(o) || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$7(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _unsupportedIterableToArray$7(o, minLen) {\n  var _context4;\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$7(o, minLen);\n  var n = _sliceInstanceProperty(_context4 = Object.prototype.toString.call(o)).call(_context4, 8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return _Array$from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$7(o, minLen);\n}\nfunction _arrayLikeToArray$7(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nvar ServiceManager = function () {\n  function ServiceManager(sdk) {\n    var _this = this;\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, ServiceManager);\n    this.sdk = sdk;\n    var _sdk$tokenManager$get = sdk.tokenManager.getOptions(),\n      autoRenew = _sdk$tokenManager$get.autoRenew,\n      autoRemove = _sdk$tokenManager$get.autoRemove,\n      syncStorage = _sdk$tokenManager$get.syncStorage;\n    this.options = _Object$assign({}, ServiceManager.defaultOptions, {\n      autoRenew: autoRenew,\n      autoRemove: autoRemove,\n      syncStorage: syncStorage\n    }, options);\n    this.started = false;\n    this.services = new _Map();\n    this.onLeaderDuplicate = this.onLeaderDuplicate.bind(this);\n    this.onLeader = this.onLeader.bind(this);\n    ServiceManager.knownServices.forEach(function (name) {\n      var svc = _this.createService(name);\n      if (svc) {\n        _this.services.set(name, svc);\n      }\n    });\n  }\n  _createClass(ServiceManager, [{\n    key: \"onLeader\",\n    value: function onLeader() {\n      if (this.started) {\n        this.startServices();\n      }\n    }\n  }, {\n    key: \"onLeaderDuplicate\",\n    value: function onLeaderDuplicate() {}\n  }, {\n    key: \"isLeader\",\n    value: function isLeader() {\n      var _a;\n      return !!((_a = this.elector) === null || _a === void 0 ? void 0 : _a.isLeader);\n    }\n  }, {\n    key: \"hasLeader\",\n    value: function hasLeader() {\n      var _a;\n      return (_a = this.elector) === null || _a === void 0 ? void 0 : _a.hasLeader;\n    }\n  }, {\n    key: \"isLeaderRequired\",\n    value: function isLeaderRequired() {\n      var _context;\n      return _toConsumableArray(_valuesInstanceProperty(_context = this.services).call(_context)).some(function (srv) {\n        return srv.requiresLeadership();\n      });\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      if (this.started) {\n        return;\n      }\n      if (this.isLeaderRequired()) {\n        this.startElector();\n      }\n      this.startServices();\n      this.started = true;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.stopElector();\n      this.stopServices();\n      this.started = false;\n    }\n  }, {\n    key: \"getService\",\n    value: function getService(name) {\n      return this.services.get(name);\n    }\n  }, {\n    key: \"startServices\",\n    value: function startServices() {\n      var _context2;\n      var _iterator = _createForOfIteratorHelper$7(_valuesInstanceProperty(_context2 = this.services).call(_context2)),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var srv = _step.value;\n          var canStart = srv.canStart() && !srv.isStarted() && (srv.requiresLeadership() ? this.isLeader() : true);\n          if (canStart) {\n            srv.start();\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"stopServices\",\n    value: function stopServices() {\n      var _context3;\n      var _iterator2 = _createForOfIteratorHelper$7(_valuesInstanceProperty(_context3 = this.services).call(_context3)),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var srv = _step2.value;\n          srv.stop();\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }, {\n    key: \"startElector\",\n    value: function startElector() {\n      this.stopElector();\n      if (ServiceManager.canUseLeaderElection()) {\n        if (!this.channel) {\n          var broadcastChannelName = this.options.broadcastChannelName;\n          this.channel = new BroadcastChannel(broadcastChannelName);\n        }\n        if (!this.elector) {\n          this.elector = createLeaderElection(this.channel);\n          this.elector.onduplicate = this.onLeaderDuplicate;\n          this.elector.awaitLeadership().then(this.onLeader);\n        }\n      }\n    }\n  }, {\n    key: \"stopElector\",\n    value: function stopElector() {\n      var _a, _b;\n      if (this.elector) {\n        (_a = this.elector) === null || _a === void 0 ? void 0 : _a.die();\n        this.elector = undefined;\n        (_b = this.channel) === null || _b === void 0 ? void 0 : _b.close();\n        this.channel = undefined;\n      }\n    }\n  }, {\n    key: \"createService\",\n    value: function createService(name) {\n      var tokenManager = this.sdk.tokenManager;\n      var service;\n      switch (name) {\n        case 'autoRenew':\n          service = new AutoRenewService(tokenManager, _Object$assign({}, this.options));\n          break;\n        case 'syncStorage':\n          service = new SyncStorageService(tokenManager, _Object$assign({}, this.options));\n          break;\n        default:\n          throw new Error(\"Unknown service \".concat(name));\n      }\n      return service;\n    }\n  }], [{\n    key: \"canUseLeaderElection\",\n    value: function canUseLeaderElection() {\n      return isBrowser();\n    }\n  }]);\n  return ServiceManager;\n}();\nServiceManager.knownServices = ['autoRenew', 'syncStorage'];\nServiceManager.defaultOptions = {\n  autoRenew: true,\n  autoRemove: true,\n  syncStorage: true\n};\nvar PromiseQueue = function () {\n  function PromiseQueue() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      quiet: false\n    };\n    _classCallCheck(this, PromiseQueue);\n    this.queue = [];\n    this.running = false;\n    this.options = options;\n  }\n  _createClass(PromiseQueue, [{\n    key: \"push\",\n    value: function push(method, thisObject) {\n      var _this = this;\n      for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        args[_key - 2] = arguments[_key];\n      }\n      return new _Promise(function (resolve, reject) {\n        if (_this.queue.length > 0) {\n          if (_this.options.quiet !== false) {\n            warn('Async method is being called but another async method is already running. ' + 'The new method will be delayed until the previous method completes.');\n          }\n        }\n        _this.queue.push({\n          method: method,\n          thisObject: thisObject,\n          args: args,\n          resolve: resolve,\n          reject: reject\n        });\n        _this.run();\n      });\n    }\n  }, {\n    key: \"run\",\n    value: function run() {\n      var _this2 = this;\n      if (this.running) {\n        return;\n      }\n      if (this.queue.length === 0) {\n        return;\n      }\n      this.running = true;\n      var queueItem = this.queue.shift();\n      var res = queueItem.method.apply(queueItem.thisObject, queueItem.args);\n      if (isPromise(res)) {\n        res.then(queueItem.resolve, queueItem.reject).finally(function () {\n          _this2.running = false;\n          _this2.run();\n        });\n      } else {\n        queueItem.resolve(res);\n        this.running = false;\n        this.run();\n      }\n    }\n  }]);\n  return PromiseQueue;\n}();\nfunction fingerprint(sdk, options) {\n  options = options || {};\n  if (!isFingerprintSupported()) {\n    return _Promise.reject(new AuthSdkError('Fingerprinting is not supported on this device'));\n  }\n  var timeout;\n  var iframe;\n  var listener;\n  var promise = new _Promise(function (resolve, reject) {\n    iframe = document.createElement('iframe');\n    iframe.style.display = 'none';\n    listener = function listener(e) {\n      if (!e || !e.data || e.origin !== sdk.getIssuerOrigin()) {\n        return;\n      }\n      try {\n        var msg = JSON.parse(e.data);\n      } catch (err) {\n        return;\n      }\n      if (!msg) {\n        return;\n      }\n      if (msg.type === 'FingerprintAvailable') {\n        return resolve(msg.fingerprint);\n      }\n      if (msg.type === 'FingerprintServiceReady') {\n        e.source.postMessage(_JSON$stringify({\n          type: 'GetFingerprint'\n        }), e.origin);\n      }\n    };\n    addListener(window, 'message', listener);\n    iframe.src = sdk.getIssuerOrigin() + '/auth/services/devicefingerprint';\n    document.body.appendChild(iframe);\n    timeout = setTimeout(function () {\n      reject(new AuthSdkError('Fingerprinting timed out'));\n    }, (options === null || options === void 0 ? void 0 : options.timeout) || 15000);\n  });\n  return promise.finally(function () {\n    clearTimeout(timeout);\n    removeListener(window, 'message', listener);\n    if (document.body.contains(iframe)) {\n      iframe.parentElement.removeChild(iframe);\n    }\n  });\n}\nvar INITIAL_AUTH_STATE = null;\nvar DEFAULT_PENDING = {\n  updateAuthStatePromise: null,\n  canceledTimes: 0\n};\nvar EVENT_AUTH_STATE_CHANGE = 'authStateChange';\nvar MAX_PROMISE_CANCEL_TIMES = 10;\nvar isSameAuthState = function isSameAuthState(prevState, state) {\n  if (!prevState) {\n    return false;\n  }\n  return prevState.isAuthenticated === state.isAuthenticated && _JSON$stringify(prevState.idToken) === _JSON$stringify(state.idToken) && _JSON$stringify(prevState.accessToken) === _JSON$stringify(state.accessToken) && prevState.error === state.error;\n};\nvar AuthStateManager = function () {\n  function AuthStateManager(sdk) {\n    var _this = this;\n    _classCallCheck(this, AuthStateManager);\n    if (!sdk.emitter) {\n      throw new AuthSdkError('Emitter should be initialized before AuthStateManager');\n    }\n    this._sdk = sdk;\n    this._pending = _Object$assign({}, DEFAULT_PENDING);\n    this._authState = INITIAL_AUTH_STATE;\n    this._logOptions = {};\n    this._prevAuthState = null;\n    this._transformQueue = new PromiseQueue({\n      quiet: true\n    });\n    sdk.tokenManager.on(EVENT_ADDED, function (key, token) {\n      _this._setLogOptions({\n        event: EVENT_ADDED,\n        key: key,\n        token: token\n      });\n      _this.updateAuthState();\n    });\n    sdk.tokenManager.on(EVENT_REMOVED, function (key, token) {\n      _this._setLogOptions({\n        event: EVENT_REMOVED,\n        key: key,\n        token: token\n      });\n      _this.updateAuthState();\n    });\n  }\n  _createClass(AuthStateManager, [{\n    key: \"_setLogOptions\",\n    value: function _setLogOptions(options) {\n      this._logOptions = options;\n    }\n  }, {\n    key: \"getAuthState\",\n    value: function getAuthState() {\n      return this._authState;\n    }\n  }, {\n    key: \"getPreviousAuthState\",\n    value: function getPreviousAuthState() {\n      return this._prevAuthState;\n    }\n  }, {\n    key: \"updateAuthState\",\n    value: function () {\n      var _updateAuthState = _asyncToGenerator(_regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n        var _this$_sdk$options, transformAuthState, devMode, log, emitAuthStateChange, finalPromise, cancelablePromise;\n        return _regeneratorRuntime.wrap(function _callee$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this$_sdk$options = this._sdk.options, transformAuthState = _this$_sdk$options.transformAuthState, devMode = _this$_sdk$options.devMode;\n                log = function log(status) {\n                  var _context;\n                  var _this2$_logOptions = _this2._logOptions,\n                    event = _this2$_logOptions.event,\n                    key = _this2$_logOptions.key,\n                    token = _this2$_logOptions.token;\n                  getConsole().group(_concatInstanceProperty(_context = \"OKTA-AUTH-JS:updateAuthState: Event:\".concat(event, \" Status:\")).call(_context, status));\n                  getConsole().log(key, token);\n                  getConsole().log('Current authState', _this2._authState);\n                  getConsole().groupEnd();\n                  _this2._logOptions = {};\n                };\n                emitAuthStateChange = function emitAuthStateChange(authState) {\n                  if (isSameAuthState(_this2._authState, authState)) {\n                    devMode && log('unchanged');\n                    return;\n                  }\n                  _this2._prevAuthState = _this2._authState;\n                  _this2._authState = authState;\n                  _this2._sdk.emitter.emit(EVENT_AUTH_STATE_CHANGE, _Object$assign({}, authState));\n                  devMode && log('emitted');\n                };\n                finalPromise = function finalPromise(origPromise) {\n                  return _this2._pending.updateAuthStatePromise.then(function () {\n                    var curPromise = _this2._pending.updateAuthStatePromise;\n                    if (curPromise && curPromise !== origPromise) {\n                      return finalPromise(curPromise);\n                    }\n                    return _this2.getAuthState();\n                  });\n                };\n                if (!this._pending.updateAuthStatePromise) {\n                  _context2.next = 11;\n                  break;\n                }\n                if (!(this._pending.canceledTimes >= MAX_PROMISE_CANCEL_TIMES)) {\n                  _context2.next = 10;\n                  break;\n                }\n                devMode && log('terminated');\n                return _context2.abrupt(\"return\", finalPromise(this._pending.updateAuthStatePromise));\n              case 10:\n                this._pending.updateAuthStatePromise.cancel();\n              case 11:\n                cancelablePromise = new PCancelable(function (resolve, _, onCancel) {\n                  onCancel.shouldReject = false;\n                  onCancel(function () {\n                    _this2._pending.updateAuthStatePromise = null;\n                    _this2._pending.canceledTimes = _this2._pending.canceledTimes + 1;\n                    devMode && log('canceled');\n                  });\n                  var emitAndResolve = function emitAndResolve(authState) {\n                    if (cancelablePromise.isCanceled) {\n                      resolve();\n                      return;\n                    }\n                    emitAuthStateChange(authState);\n                    resolve();\n                    _this2._pending = _Object$assign({}, DEFAULT_PENDING);\n                  };\n                  _this2._sdk.isAuthenticated().then(function () {\n                    if (cancelablePromise.isCanceled) {\n                      resolve();\n                      return;\n                    }\n                    var _this2$_sdk$tokenMana = _this2._sdk.tokenManager.getTokensSync(),\n                      accessToken = _this2$_sdk$tokenMana.accessToken,\n                      idToken = _this2$_sdk$tokenMana.idToken,\n                      refreshToken = _this2$_sdk$tokenMana.refreshToken;\n                    var authState = {\n                      accessToken: accessToken,\n                      idToken: idToken,\n                      refreshToken: refreshToken,\n                      isAuthenticated: !!(accessToken && idToken)\n                    };\n                    var promise = transformAuthState ? _this2._transformQueue.push(transformAuthState, null, _this2._sdk, authState) : _Promise.resolve(authState);\n                    promise.then(function (authState) {\n                      return emitAndResolve(authState);\n                    }).catch(function (error) {\n                      return emitAndResolve({\n                        accessToken: accessToken,\n                        idToken: idToken,\n                        refreshToken: refreshToken,\n                        isAuthenticated: false,\n                        error: error\n                      });\n                    });\n                  });\n                });\n                this._pending.updateAuthStatePromise = cancelablePromise;\n                return _context2.abrupt(\"return\", finalPromise(cancelablePromise));\n              case 14:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function updateAuthState() {\n        return _updateAuthState.apply(this, arguments);\n      }\n      return updateAuthState;\n    }()\n  }, {\n    key: \"subscribe\",\n    value: function subscribe(handler) {\n      this._sdk.emitter.on(EVENT_AUTH_STATE_CHANGE, handler);\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe(handler) {\n      this._sdk.emitter.off(EVENT_AUTH_STATE_CHANGE, handler);\n    }\n  }]);\n  return AuthStateManager;\n}();\nvar SavedObject = function () {\n  function SavedObject(storage, storageName) {\n    _classCallCheck(this, SavedObject);\n    if (!storage) {\n      throw new AuthSdkError('\"storage\" is required');\n    }\n    if (typeof storageName !== 'string' || !storageName.length) {\n      throw new AuthSdkError('\"storageName\" is required');\n    }\n    this.storageName = storageName;\n    this.storageProvider = storage;\n  }\n  _createClass(SavedObject, [{\n    key: \"getItem\",\n    value: function getItem(key) {\n      return this.getStorage()[key];\n    }\n  }, {\n    key: \"setItem\",\n    value: function setItem(key, value) {\n      return this.updateStorage(key, value);\n    }\n  }, {\n    key: \"removeItem\",\n    value: function removeItem(key) {\n      return this.clearStorage(key);\n    }\n  }, {\n    key: \"getStorage\",\n    value: function getStorage() {\n      var storageString = this.storageProvider.getItem(this.storageName);\n      storageString = storageString || '{}';\n      try {\n        return JSON.parse(storageString);\n      } catch (e) {\n        throw new AuthSdkError('Unable to parse storage string: ' + this.storageName);\n      }\n    }\n  }, {\n    key: \"setStorage\",\n    value: function setStorage(obj) {\n      try {\n        var storageString = obj ? _JSON$stringify(obj) : '{}';\n        this.storageProvider.setItem(this.storageName, storageString);\n      } catch (e) {\n        throw new AuthSdkError('Unable to set storage: ' + this.storageName);\n      }\n    }\n  }, {\n    key: \"clearStorage\",\n    value: function clearStorage(key) {\n      if (!key) {\n        if (this.storageProvider.removeItem) {\n          this.storageProvider.removeItem(this.storageName);\n        } else {\n          this.setStorage();\n        }\n        return;\n      }\n      var obj = this.getStorage();\n      delete obj[key];\n      this.setStorage(obj);\n    }\n  }, {\n    key: \"updateStorage\",\n    value: function updateStorage(key, value) {\n      var obj = this.getStorage();\n      obj[key] = value;\n      this.setStorage(obj);\n    }\n  }]);\n  return SavedObject;\n}();\nfunction logServerSideMemoryStorageWarning(options) {\n  if (!isBrowser() && !options.storageProvider && !options.storageProvider) {\n    warn('Memory storage can only support simple single user use case on server side, please provide custom storageProvider or storageKey if advanced scenarios need to be supported.');\n  }\n}\nvar StorageManager = function () {\n  function StorageManager(storageManagerOptions, cookieOptions, storageUtil) {\n    _classCallCheck(this, StorageManager);\n    this.storageManagerOptions = storageManagerOptions;\n    this.cookieOptions = cookieOptions;\n    this.storageUtil = storageUtil;\n  }\n  _createClass(StorageManager, [{\n    key: \"getOptionsForSection\",\n    value: function getOptionsForSection(sectionName, overrideOptions) {\n      return _Object$assign({}, this.storageManagerOptions[sectionName], overrideOptions);\n    }\n  }, {\n    key: \"getStorage\",\n    value: function getStorage(options) {\n      options = _Object$assign({}, this.cookieOptions, options);\n      if (options.storageProvider) {\n        return options.storageProvider;\n      }\n      var _options = options,\n        storageType = _options.storageType,\n        storageTypes = _options.storageTypes;\n      if (storageType === 'sessionStorage') {\n        options.sessionCookie = true;\n      }\n      if (storageType && storageTypes) {\n        var idx = _indexOfInstanceProperty(storageTypes).call(storageTypes, storageType);\n        if (idx >= 0) {\n          storageTypes = _sliceInstanceProperty(storageTypes).call(storageTypes, idx);\n          storageType = undefined;\n        }\n      }\n      if (!storageType) {\n        storageType = this.storageUtil.findStorageType(storageTypes);\n      }\n      return this.storageUtil.getStorageByType(storageType, options);\n    }\n  }, {\n    key: \"getTransactionStorage\",\n    value: function getTransactionStorage(options) {\n      options = this.getOptionsForSection('transaction', options);\n      logServerSideMemoryStorageWarning(options);\n      var storage = this.getStorage(options);\n      var storageKey = options.storageKey || TRANSACTION_STORAGE_NAME;\n      return new SavedObject(storage, storageKey);\n    }\n  }, {\n    key: \"getSharedTansactionStorage\",\n    value: function getSharedTansactionStorage(options) {\n      options = this.getOptionsForSection('shared-transaction', options);\n      logServerSideMemoryStorageWarning(options);\n      var storage = this.getStorage(options);\n      var storageKey = options.storageKey || SHARED_TRANSACTION_STORAGE_NAME;\n      return new SavedObject(storage, storageKey);\n    }\n  }, {\n    key: \"getOriginalUriStorage\",\n    value: function getOriginalUriStorage(options) {\n      options = this.getOptionsForSection('original-uri', options);\n      logServerSideMemoryStorageWarning(options);\n      var storage = this.getStorage(options);\n      var storageKey = options.storageKey || ORIGINAL_URI_STORAGE_NAME;\n      return new SavedObject(storage, storageKey);\n    }\n  }, {\n    key: \"getIdxResponseStorage\",\n    value: function getIdxResponseStorage(options) {\n      var storage;\n      if (isBrowser()) {\n        try {\n          storage = this.storageUtil.getStorageByType('memory', options);\n        } catch (e) {\n          warn('No response storage found, you may want to provide custom implementation for intermediate idx responses to optimize the network traffic');\n        }\n      } else {\n        var transactionStorage = this.getTransactionStorage(options);\n        if (transactionStorage) {\n          storage = {\n            getItem: function getItem(key) {\n              var transaction = transactionStorage.getStorage();\n              if (transaction && transaction[key]) {\n                return transaction[key];\n              }\n              return null;\n            },\n            setItem: function setItem(key, val) {\n              var transaction = transactionStorage.getStorage();\n              if (!transaction) {\n                throw new AuthSdkError('Transaction has been cleared, failed to save idxState');\n              }\n              transaction[key] = val;\n              transactionStorage.setStorage(transaction);\n            },\n            removeItem: function removeItem(key) {\n              var transaction = transactionStorage.getStorage();\n              if (!transaction) {\n                return;\n              }\n              delete transaction[key];\n              transactionStorage.setStorage(transaction);\n            }\n          };\n        }\n      }\n      if (!storage) {\n        return null;\n      }\n      return new SavedObject(storage, IDX_RESPONSE_STORAGE_NAME);\n    }\n  }, {\n    key: \"getTokenStorage\",\n    value: function getTokenStorage(options) {\n      options = this.getOptionsForSection('token', options);\n      logServerSideMemoryStorageWarning(options);\n      var storage = this.getStorage(options);\n      var storageKey = options.storageKey || TOKEN_STORAGE_NAME;\n      return new SavedObject(storage, storageKey);\n    }\n  }, {\n    key: \"getHttpCache\",\n    value: function getHttpCache(options) {\n      options = this.getOptionsForSection('cache', options);\n      var storage = this.getStorage(options);\n      var storageKey = options.storageKey || CACHE_STORAGE_NAME;\n      return new SavedObject(storage, storageKey);\n    }\n  }, {\n    key: \"getLegacyPKCEStorage\",\n    value: function getLegacyPKCEStorage(options) {\n      options = this.getOptionsForSection('legacy-pkce', options);\n      var storage = this.getStorage(options);\n      var storageKey = options.storageKey || PKCE_STORAGE_NAME;\n      return new SavedObject(storage, storageKey);\n    }\n  }, {\n    key: \"getLegacyOAuthParamsStorage\",\n    value: function getLegacyOAuthParamsStorage(options) {\n      options = this.getOptionsForSection('legacy-oauth-params', options);\n      var storage = this.getStorage(options);\n      var storageKey = options.storageKey || REDIRECT_OAUTH_PARAMS_NAME;\n      return new SavedObject(storage, storageKey);\n    }\n  }]);\n  return StorageManager;\n}();\nfunction isRawIdxResponse(obj) {\n  return obj && obj.version;\n}\nfunction isIdxResponse(obj) {\n  return obj && isRawIdxResponse(obj.rawIdxState);\n}\nvar MAX_ENTRY_LIFETIME = 30 * 60 * 1000;\nfunction pruneSharedStorage(storageManager) {\n  var sharedStorage = storageManager.getSharedTansactionStorage();\n  var entries = sharedStorage.getStorage();\n  _Object$keys(entries).forEach(function (state) {\n    var entry = entries[state];\n    var age = Date.now() - entry.dateCreated;\n    if (age > MAX_ENTRY_LIFETIME) {\n      delete entries[state];\n    }\n  });\n  sharedStorage.setStorage(entries);\n}\nfunction saveTransactionToSharedStorage(storageManager, state, meta) {\n  var sharedStorage = storageManager.getSharedTansactionStorage();\n  var entries = sharedStorage.getStorage();\n  entries[state] = {\n    dateCreated: Date.now(),\n    transaction: meta\n  };\n  sharedStorage.setStorage(entries);\n}\nfunction loadTransactionFromSharedStorage(storageManager, state) {\n  var sharedStorage = storageManager.getSharedTansactionStorage();\n  var entries = sharedStorage.getStorage();\n  var entry = entries[state];\n  if (entry && entry.transaction && isTransactionMeta(entry.transaction)) {\n    return entry.transaction;\n  }\n  return null;\n}\nfunction clearTransactionFromSharedStorage(storageManager, state) {\n  var sharedStorage = storageManager.getSharedTansactionStorage();\n  var entries = sharedStorage.getStorage();\n  delete entries[state];\n  sharedStorage.setStorage(entries);\n}\nvar TransactionManager = function () {\n  function TransactionManager(options) {\n    _classCallCheck(this, TransactionManager);\n    this.storageManager = options.storageManager;\n    this.legacyWidgetSupport = options.legacyWidgetSupport === false ? false : true;\n    this.saveNonceCookie = options.saveNonceCookie === false ? false : true;\n    this.saveStateCookie = options.saveStateCookie === false ? false : true;\n    this.saveParamsCookie = options.saveParamsCookie === false ? false : true;\n    this.enableSharedStorage = options.enableSharedStorage === false ? false : true;\n    this.saveLastResponse = options.saveLastResponse === false ? false : true;\n    this.options = options;\n  }\n  _createClass(TransactionManager, [{\n    key: \"clear\",\n    value: function clear() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var transactionStorage = this.storageManager.getTransactionStorage();\n      var meta = transactionStorage.getStorage();\n      transactionStorage.clearStorage();\n      if (this.enableSharedStorage && options.clearSharedStorage !== false) {\n        var state = options.state || (meta === null || meta === void 0 ? void 0 : meta.state);\n        if (state) {\n          clearTransactionFromSharedStorage(this.storageManager, state);\n        }\n      }\n      if (options.clearIdxResponse !== false) {\n        this.clearIdxResponse();\n      }\n      if (!this.legacyWidgetSupport) {\n        return;\n      }\n      if (options.oauth) {\n        this.clearLegacyOAuthParams();\n      }\n      if (options.pkce) {\n        this.clearLegacyPKCE();\n      }\n    }\n  }, {\n    key: \"save\",\n    value: function save(meta) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var storage = this.storageManager.getTransactionStorage();\n      var obj = storage.getStorage();\n      if (isTransactionMeta(obj) && !options.muteWarning) {\n        warn('a saved auth transaction exists in storage. This may indicate another auth flow is already in progress.');\n      }\n      storage.setStorage(meta);\n      if (this.enableSharedStorage && meta.state) {\n        saveTransactionToSharedStorage(this.storageManager, meta.state, meta);\n      }\n      if (!options.oauth) {\n        return;\n      }\n      if (this.saveNonceCookie || this.saveStateCookie || this.saveParamsCookie) {\n        var cookieStorage = this.storageManager.getStorage({\n          storageType: 'cookie'\n        });\n        if (this.saveParamsCookie) {\n          var responseType = meta.responseType,\n            state = meta.state,\n            nonce = meta.nonce,\n            scopes = meta.scopes,\n            clientId = meta.clientId,\n            urls = meta.urls,\n            ignoreSignature = meta.ignoreSignature;\n          var oauthParams = {\n            responseType: responseType,\n            state: state,\n            nonce: nonce,\n            scopes: scopes,\n            clientId: clientId,\n            urls: urls,\n            ignoreSignature: ignoreSignature\n          };\n          cookieStorage.setItem(REDIRECT_OAUTH_PARAMS_NAME, _JSON$stringify(oauthParams), null);\n        }\n        if (this.saveNonceCookie && meta.nonce) {\n          cookieStorage.setItem(REDIRECT_NONCE_COOKIE_NAME, meta.nonce, null);\n        }\n        if (this.saveStateCookie && meta.state) {\n          cookieStorage.setItem(REDIRECT_STATE_COOKIE_NAME, meta.state, null);\n        }\n      }\n    }\n  }, {\n    key: \"exists\",\n    value: function exists() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      try {\n        var meta = this.load(options);\n        return !!meta;\n      } catch (_a) {\n        return false;\n      }\n    }\n  }, {\n    key: \"load\",\n    value: function load() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var meta;\n      if (this.enableSharedStorage && options.state) {\n        pruneSharedStorage(this.storageManager);\n        meta = loadTransactionFromSharedStorage(this.storageManager, options.state);\n        if (isTransactionMeta(meta)) {\n          return meta;\n        }\n      }\n      var storage = this.storageManager.getTransactionStorage();\n      meta = storage.getStorage();\n      if (isTransactionMeta(meta)) {\n        return meta;\n      }\n      if (!this.legacyWidgetSupport) {\n        return null;\n      }\n      if (options.oauth) {\n        try {\n          var oauthParams = this.loadLegacyOAuthParams();\n          _Object$assign(meta, oauthParams);\n        } finally {\n          this.clearLegacyOAuthParams();\n        }\n      }\n      if (options.pkce) {\n        try {\n          var pkceMeta = this.loadLegacyPKCE();\n          _Object$assign(meta, pkceMeta);\n        } finally {\n          this.clearLegacyPKCE();\n        }\n      }\n      if (isTransactionMeta(meta)) {\n        return meta;\n      }\n      return null;\n    }\n  }, {\n    key: \"clearLegacyPKCE\",\n    value: function clearLegacyPKCE() {\n      var storage;\n      if (this.storageManager.storageUtil.testStorageType('localStorage')) {\n        storage = this.storageManager.getLegacyPKCEStorage({\n          storageType: 'localStorage'\n        });\n        storage.clearStorage();\n      }\n      if (this.storageManager.storageUtil.testStorageType('sessionStorage')) {\n        storage = this.storageManager.getLegacyPKCEStorage({\n          storageType: 'sessionStorage'\n        });\n        storage.clearStorage();\n      }\n    }\n  }, {\n    key: \"loadLegacyPKCE\",\n    value: function loadLegacyPKCE() {\n      var storage;\n      var obj;\n      if (this.storageManager.storageUtil.testStorageType('localStorage')) {\n        storage = this.storageManager.getLegacyPKCEStorage({\n          storageType: 'localStorage'\n        });\n        obj = storage.getStorage();\n        if (obj && obj.codeVerifier) {\n          return obj;\n        }\n      }\n      if (this.storageManager.storageUtil.testStorageType('sessionStorage')) {\n        storage = this.storageManager.getLegacyPKCEStorage({\n          storageType: 'sessionStorage'\n        });\n        obj = storage.getStorage();\n        if (obj && obj.codeVerifier) {\n          return obj;\n        }\n      }\n      throw new AuthSdkError('Could not load PKCE codeVerifier from storage. This may indicate the auth flow has already completed or multiple auth flows are executing concurrently.', undefined);\n    }\n  }, {\n    key: \"clearLegacyOAuthParams\",\n    value: function clearLegacyOAuthParams() {\n      var storage;\n      if (this.storageManager.storageUtil.testStorageType('sessionStorage')) {\n        storage = this.storageManager.getLegacyOAuthParamsStorage({\n          storageType: 'sessionStorage'\n        });\n        storage.clearStorage();\n      }\n      if (this.storageManager.storageUtil.testStorageType('cookie')) {\n        storage = this.storageManager.getLegacyOAuthParamsStorage({\n          storageType: 'cookie'\n        });\n        storage.clearStorage();\n      }\n    }\n  }, {\n    key: \"loadLegacyOAuthParams\",\n    value: function loadLegacyOAuthParams() {\n      var storage;\n      var oauthParams;\n      if (this.storageManager.storageUtil.testStorageType('sessionStorage')) {\n        storage = this.storageManager.getLegacyOAuthParamsStorage({\n          storageType: 'sessionStorage'\n        });\n        oauthParams = storage.getStorage();\n      }\n      if (isOAuthTransactionMeta(oauthParams)) {\n        return oauthParams;\n      }\n      if (this.storageManager.storageUtil.testStorageType('cookie')) {\n        storage = this.storageManager.getLegacyOAuthParamsStorage({\n          storageType: 'cookie'\n        });\n        oauthParams = storage.getStorage();\n      }\n      if (isOAuthTransactionMeta(oauthParams)) {\n        return oauthParams;\n      }\n      throw new AuthSdkError('Unable to retrieve OAuth redirect params from storage');\n    }\n  }, {\n    key: \"saveIdxResponse\",\n    value: function saveIdxResponse(data) {\n      if (!this.saveLastResponse) {\n        return;\n      }\n      var storage = this.storageManager.getIdxResponseStorage();\n      if (!storage) {\n        return;\n      }\n      storage.setStorage(data);\n    }\n  }, {\n    key: \"loadIdxResponse\",\n    value: function loadIdxResponse(options) {\n      if (!this.saveLastResponse) {\n        return null;\n      }\n      var storage = this.storageManager.getIdxResponseStorage();\n      if (!storage) {\n        return null;\n      }\n      var storedValue = storage.getStorage();\n      if (!storedValue || !isRawIdxResponse(storedValue.rawIdxResponse)) {\n        return null;\n      }\n      if (options) {\n        var stateHandle = options.stateHandle,\n          interactionHandle = options.interactionHandle;\n        if (stateHandle && storedValue.stateHandle !== stateHandle) {\n          return null;\n        }\n        if (interactionHandle && storedValue.interactionHandle !== interactionHandle) {\n          return null;\n        }\n      }\n      return storedValue;\n    }\n  }, {\n    key: \"clearIdxResponse\",\n    value: function clearIdxResponse() {\n      if (!this.saveLastResponse) {\n        return;\n      }\n      var storage = this.storageManager.getIdxResponseStorage();\n      storage === null || storage === void 0 ? void 0 : storage.clearStorage();\n    }\n  }]);\n  return TransactionManager;\n}();\nfunction assertValidConfig(args) {\n  args = args || {};\n  var scopes = args.scopes;\n  if (scopes && !Array.isArray(scopes)) {\n    throw new AuthSdkError('scopes must be a array of strings. ' + 'Required usage: new OktaAuth({scopes: [\"openid\", \"email\"]})');\n  }\n  var issuer = args.issuer;\n  if (!issuer) {\n    throw new AuthSdkError('No issuer passed to constructor. ' + 'Required usage: new OktaAuth({issuer: \"https://{yourOktaDomain}.com/oauth2/{authServerId}\"})');\n  }\n  var isUrlRegex = new RegExp('^http?s?://.+');\n  if (!isUrlRegex.test(issuer)) {\n    throw new AuthSdkError('Issuer must be a valid URL. ' + 'Required usage: new OktaAuth({issuer: \"https://{yourOktaDomain}.com/oauth2/{authServerId}\"})');\n  }\n  if (_indexOfInstanceProperty(issuer).call(issuer, '-admin.') !== -1) {\n    throw new AuthSdkError('Issuer URL passed to constructor contains \"-admin\" in subdomain. ' + 'Required usage: new OktaAuth({issuer: \"https://{yourOktaDomain}.com})');\n  }\n}\nfunction _createForOfIteratorHelper$6(o, allowArrayLike) {\n  var it = typeof _Symbol !== \"undefined\" && _getIteratorMethod(o) || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$6(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _unsupportedIterableToArray$6(o, minLen) {\n  var _context5;\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$6(o, minLen);\n  var n = _sliceInstanceProperty(_context5 = Object.prototype.toString.call(o)).call(_context5, 8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return _Array$from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$6(o, minLen);\n}\nfunction _arrayLikeToArray$6(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nvar appJsonContentTypeRegex = /application\\/\\w*\\+?json/;\nfunction readData(response) {\n  var _context;\n  if (response.headers.get('Content-Type') && _indexOfInstanceProperty(_context = response.headers.get('Content-Type').toLowerCase()).call(_context, 'application/json') >= 0) {\n    return response.json().catch(function (e) {\n      return {\n        error: e,\n        errorSummary: 'Could not parse server response'\n      };\n    });\n  } else {\n    return response.text();\n  }\n}\nfunction formatResult(status, data, response) {\n  var _context2;\n  var isObject = _typeof(data) === 'object';\n  var headers = {};\n  var _iterator = _createForOfIteratorHelper$6(_entriesInstanceProperty(_context2 = response.headers).call(_context2)),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var pair = _step.value;\n      headers[pair[0]] = pair[1];\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  var result = {\n    responseText: isObject ? _JSON$stringify(data) : data,\n    status: status,\n    headers: headers\n  };\n  if (isObject) {\n    result.responseType = 'json';\n    result.responseJSON = data;\n  }\n  return result;\n}\nfunction fetchRequest(method, url, args) {\n  var body = args.data;\n  var headers = args.headers || {};\n  var contentType = headers['Content-Type'] || headers['content-type'] || '';\n  if (body && typeof body !== 'string') {\n    if (appJsonContentTypeRegex.test(contentType)) {\n      body = _JSON$stringify(body);\n    } else if (contentType === 'application/x-www-form-urlencoded') {\n      var _context3;\n      body = _mapInstanceProperty(_context3 = _Object$entries(body)).call(_context3, function (_ref) {\n        var _context4;\n        var _ref2 = _slicedToArray(_ref, 2),\n          param = _ref2[0],\n          value = _ref2[1];\n        return _concatInstanceProperty(_context4 = \"\".concat(param, \"=\")).call(_context4, encodeURIComponent(value));\n      }).join('&');\n    }\n  }\n  var fetch = window.fetch || crossFetch;\n  var fetchPromise = fetch(url, {\n    method: method,\n    headers: args.headers,\n    body: body,\n    credentials: args.withCredentials ? 'include' : 'omit'\n  });\n  if (!fetchPromise.finally) {\n    fetchPromise = _Promise.resolve(fetchPromise);\n  }\n  return fetchPromise.then(function (response) {\n    var error = !response.ok;\n    var status = response.status;\n    return readData(response).then(function (data) {\n      return formatResult(status, data, response);\n    }).then(function (result) {\n      var _a;\n      if (error || ((_a = result.responseJSON) === null || _a === void 0 ? void 0 : _a.error)) {\n        throw result;\n      }\n      return result;\n    });\n  });\n}\nfunction getStorage() {\n  var storageUtil$1 = _Object$assign({}, storageUtil, {\n    inMemoryStore: {}\n  });\n  return storageUtil$1;\n}\nvar STORAGE_MANAGER_OPTIONS = {\n  token: {\n    storageTypes: ['localStorage', 'sessionStorage', 'cookie']\n  },\n  cache: {\n    storageTypes: ['localStorage', 'sessionStorage', 'cookie']\n  },\n  transaction: {\n    storageTypes: ['sessionStorage', 'localStorage', 'cookie']\n  },\n  'shared-transaction': {\n    storageTypes: ['localStorage']\n  },\n  'original-uri': {\n    storageTypes: ['localStorage']\n  }\n};\nvar enableSharedStorage = true;\nfunction getCookieSettings() {\n  var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var isHTTPS = arguments.length > 1 ? arguments[1] : undefined;\n  var cookieSettings = args.cookies || {};\n  if (typeof cookieSettings.secure === 'undefined') {\n    cookieSettings.secure = isHTTPS;\n  }\n  if (typeof cookieSettings.sameSite === 'undefined') {\n    cookieSettings.sameSite = cookieSettings.secure ? 'none' : 'lax';\n  }\n  if (cookieSettings.secure && !isHTTPS) {\n    warn('The current page is not being served with the HTTPS protocol.\\n' + 'For security reasons, we strongly recommend using HTTPS.\\n' + 'If you cannot use HTTPS, set \"cookies.secure\" option to false.');\n    cookieSettings.secure = false;\n  }\n  if (cookieSettings.sameSite === 'none' && !cookieSettings.secure) {\n    cookieSettings.sameSite = 'lax';\n  }\n  return cookieSettings;\n}\nfunction getDefaultOptions() {\n  var options = {\n    devMode: false,\n    httpRequestClient: fetchRequest,\n    storageUtil: getStorage(),\n    storageManager: STORAGE_MANAGER_OPTIONS,\n    transactionManager: {\n      enableSharedStorage: enableSharedStorage\n    }\n  };\n  return options;\n}\nfunction mergeOptions(options, args) {\n  return _Object$assign({}, options, removeNils(args), {\n    storageManager: _Object$assign({}, options.storageManager, args.storageManager),\n    transactionManager: _Object$assign({}, options.transactionManager, args.transactionManager)\n  });\n}\nfunction buildOptions() {\n  var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  assertValidConfig(args);\n  args = mergeOptions(getDefaultOptions(), args);\n  return removeNils({\n    issuer: removeTrailingSlash(args.issuer),\n    tokenUrl: removeTrailingSlash(args.tokenUrl),\n    authorizeUrl: removeTrailingSlash(args.authorizeUrl),\n    userinfoUrl: removeTrailingSlash(args.userinfoUrl),\n    revokeUrl: removeTrailingSlash(args.revokeUrl),\n    logoutUrl: removeTrailingSlash(args.logoutUrl),\n    clientId: args.clientId,\n    redirectUri: args.redirectUri,\n    state: args.state,\n    scopes: args.scopes,\n    postLogoutRedirectUri: args.postLogoutRedirectUri,\n    responseMode: args.responseMode,\n    responseType: args.responseType,\n    pkce: args.pkce === false ? false : true,\n    useInteractionCodeFlow: args.useInteractionCodeFlow,\n    httpRequestClient: args.httpRequestClient,\n    transformErrorXHR: args.transformErrorXHR,\n    transformAuthState: args.transformAuthState,\n    restoreOriginalUri: args.restoreOriginalUri,\n    storageUtil: args.storageUtil,\n    headers: args.headers,\n    devMode: !!args.devMode,\n    storageManager: args.storageManager,\n    transactionManager: args.transactionManager,\n    cookies: getCookieSettings(args, isHTTPS()),\n    flow: args.flow,\n    codeChallenge: args.codeChallenge,\n    codeChallengeMethod: args.codeChallengeMethod,\n    recoveryToken: args.recoveryToken,\n    activationToken: args.activationToken,\n    ignoreSignature: !!args.ignoreSignature,\n    clientSecret: args.clientSecret\n  });\n}\nfunction createTransactionMeta(_x) {\n  return _createTransactionMeta.apply(this, arguments);\n}\nfunction _createTransactionMeta() {\n  _createTransactionMeta = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(authClient) {\n    var options,\n      tokenParams,\n      pkceMeta,\n      _Object$assign2,\n      _Object$assign2$flow,\n      flow,\n      _Object$assign2$withC,\n      withCredentials,\n      _Object$assign2$activ,\n      activationToken,\n      _Object$assign2$recov,\n      recoveryToken,\n      meta,\n      _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n            _context.next = 3;\n            return authClient.token.prepareTokenParams(options);\n          case 3:\n            tokenParams = _context.sent;\n            pkceMeta = createOAuthMeta(authClient, tokenParams);\n            _Object$assign2 = _Object$assign(_Object$assign({}, authClient.options), options), _Object$assign2$flow = _Object$assign2.flow, flow = _Object$assign2$flow === void 0 ? 'default' : _Object$assign2$flow, _Object$assign2$withC = _Object$assign2.withCredentials, withCredentials = _Object$assign2$withC === void 0 ? true : _Object$assign2$withC, _Object$assign2$activ = _Object$assign2.activationToken, activationToken = _Object$assign2$activ === void 0 ? undefined : _Object$assign2$activ, _Object$assign2$recov = _Object$assign2.recoveryToken, recoveryToken = _Object$assign2$recov === void 0 ? undefined : _Object$assign2$recov;\n            meta = _Object$assign(_Object$assign({}, pkceMeta), {\n              flow: flow,\n              withCredentials: withCredentials,\n              activationToken: activationToken,\n              recoveryToken: recoveryToken\n            });\n            return _context.abrupt(\"return\", meta);\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _createTransactionMeta.apply(this, arguments);\n}\nfunction hasSavedInteractionHandle(authClient, options) {\n  var savedMeta = getSavedTransactionMeta(authClient, options);\n  if (savedMeta === null || savedMeta === void 0 ? void 0 : savedMeta.interactionHandle) {\n    return true;\n  }\n  return false;\n}\nfunction getSavedTransactionMeta(authClient, options) {\n  options = removeNils(options);\n  options = _Object$assign(_Object$assign({}, authClient.options), options);\n  var savedMeta;\n  try {\n    savedMeta = authClient.transactionManager.load(options);\n  } catch (e) {}\n  if (!savedMeta) {\n    return;\n  }\n  if (isTransactionMetaValid(savedMeta, options)) {\n    return savedMeta;\n  }\n  warn('Saved transaction meta does not match the current configuration. ' + 'This may indicate that two apps are sharing a storage key.');\n}\nfunction getTransactionMeta(_x2, _x3) {\n  return _getTransactionMeta.apply(this, arguments);\n}\nfunction _getTransactionMeta() {\n  _getTransactionMeta = _asyncToGenerator(_regeneratorRuntime.mark(function _callee2(authClient, options) {\n    var validExistingMeta;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            options = removeNils(options);\n            options = _Object$assign(_Object$assign({}, authClient.options), options);\n            validExistingMeta = getSavedTransactionMeta(authClient, options);\n            if (!validExistingMeta) {\n              _context2.next = 5;\n              break;\n            }\n            return _context2.abrupt(\"return\", validExistingMeta);\n          case 5:\n            return _context2.abrupt(\"return\", createTransactionMeta(authClient, options));\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getTransactionMeta.apply(this, arguments);\n}\nfunction saveTransactionMeta(authClient, meta) {\n  authClient.transactionManager.save(meta, {\n    muteWarning: true\n  });\n}\nfunction clearTransactionMeta(authClient) {\n  authClient.transactionManager.clear();\n}\nfunction isTransactionMetaValid(meta) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var keys = ['issuer', 'clientId', 'redirectUri', 'state', 'codeChallenge', 'codeChallengeMethod', 'activationToken', 'recoveryToken'];\n  if (isTransactionMetaValidForOptions(meta, options, keys) === false) {\n    return false;\n  }\n  var flow = options.flow;\n  if (isTransactionMetaValidForFlow(meta, flow) === false) {\n    return false;\n  }\n  return true;\n}\nfunction isTransactionMetaValidForFlow(meta, flow) {\n  var shouldValidateFlow = flow && flow !== 'default' && flow !== 'proceed';\n  if (shouldValidateFlow) {\n    if (flow !== meta.flow) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isTransactionMetaValidForOptions(meta, options, keys) {\n  var mismatch = keys.some(function (key) {\n    var value = options[key];\n    if (value && value !== meta[key]) {\n      return true;\n    }\n  });\n  return !mismatch;\n}\nfunction getResponse(meta) {\n  return {\n    meta: meta,\n    interactionHandle: meta.interactionHandle,\n    state: meta.state\n  };\n}\nfunction interact(_x) {\n  return _interact.apply(this, arguments);\n}\nfunction _interact() {\n  _interact = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(authClient) {\n    var options,\n      meta,\n      baseUrl,\n      _meta,\n      clientId,\n      redirectUri,\n      state,\n      scopes,\n      withCredentials,\n      codeChallenge,\n      codeChallengeMethod,\n      activationToken,\n      recoveryToken,\n      clientSecret,\n      url,\n      params,\n      headers,\n      resp,\n      interactionHandle,\n      newMeta,\n      _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n            options = removeNils(options);\n            meta = getSavedTransactionMeta(authClient, options);\n            if (!(meta === null || meta === void 0 ? void 0 : meta.interactionHandle)) {\n              _context.next = 5;\n              break;\n            }\n            return _context.abrupt(\"return\", getResponse(meta));\n          case 5:\n            _context.next = 7;\n            return createTransactionMeta(authClient, _Object$assign(_Object$assign({}, meta), options));\n          case 7:\n            meta = _context.sent;\n            baseUrl = getOAuthBaseUrl(authClient);\n            _meta = meta, clientId = _meta.clientId, redirectUri = _meta.redirectUri, state = _meta.state, scopes = _meta.scopes, withCredentials = _meta.withCredentials, codeChallenge = _meta.codeChallenge, codeChallengeMethod = _meta.codeChallengeMethod, activationToken = _meta.activationToken, recoveryToken = _meta.recoveryToken;\n            clientSecret = options.clientSecret || authClient.options.clientSecret;\n            withCredentials = withCredentials !== null && withCredentials !== void 0 ? withCredentials : true;\n            url = \"\".concat(baseUrl, \"/v1/interact\");\n            params = {\n              client_id: clientId,\n              scope: scopes.join(' '),\n              redirect_uri: redirectUri,\n              code_challenge: codeChallenge,\n              code_challenge_method: codeChallengeMethod,\n              state: state\n            };\n            if (activationToken) {\n              params.activation_token = activationToken;\n            }\n            if (recoveryToken) {\n              params.recovery_token = recoveryToken;\n            }\n            if (clientSecret) {\n              params.client_secret = clientSecret;\n            }\n            headers = {\n              'Content-Type': 'application/x-www-form-urlencoded'\n            };\n            _context.next = 20;\n            return httpRequest(authClient, {\n              method: 'POST',\n              url: url,\n              headers: headers,\n              withCredentials: withCredentials,\n              args: params\n            });\n          case 20:\n            resp = _context.sent;\n            interactionHandle = resp.interaction_handle;\n            newMeta = _Object$assign(_Object$assign({}, meta), {\n              interactionHandle: interactionHandle,\n              withCredentials: withCredentials,\n              state: state,\n              scopes: scopes,\n              recoveryToken: recoveryToken,\n              activationToken: activationToken\n            });\n            saveTransactionMeta(authClient, newMeta);\n            return _context.abrupt(\"return\", getResponse(newMeta));\n          case 25:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _interact.apply(this, arguments);\n}\nfunction _createForOfIteratorHelper$5(o, allowArrayLike) {\n  var it = typeof _Symbol !== \"undefined\" && _getIteratorMethod(o) || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$5(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _unsupportedIterableToArray$5(o, minLen) {\n  var _context;\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$5(o, minLen);\n  var n = _sliceInstanceProperty(_context = Object.prototype.toString.call(o)).call(_context, 8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return _Array$from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$5(o, minLen);\n}\nfunction _arrayLikeToArray$5(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nvar isFieldMutable = function isFieldMutable(field) {\n  return field.mutable !== false;\n};\nvar divideSingleActionParamsByMutability = function divideSingleActionParamsByMutability(action) {\n  var _a, _b;\n  var defaultParamsForAction = {};\n  var neededParamsForAction = [];\n  var immutableParamsForAction = {};\n  if (!action.value) {\n    neededParamsForAction.push(action);\n    return {\n      defaultParamsForAction: defaultParamsForAction,\n      neededParamsForAction: neededParamsForAction,\n      immutableParamsForAction: immutableParamsForAction\n    };\n  }\n  var _iterator = _createForOfIteratorHelper$5(action.value),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var field = _step.value;\n      if (isFieldMutable(field)) {\n        neededParamsForAction.push(field);\n        if ((_a = field.value) !== null && _a !== void 0 ? _a : false) {\n          defaultParamsForAction[field.name] = field.value;\n        }\n      } else {\n        immutableParamsForAction[field.name] = (_b = field.value) !== null && _b !== void 0 ? _b : '';\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return {\n    defaultParamsForAction: defaultParamsForAction,\n    neededParamsForAction: neededParamsForAction,\n    immutableParamsForAction: immutableParamsForAction\n  };\n};\nvar divideActionParamsByMutability = function divideActionParamsByMutability(actionList) {\n  actionList = Array.isArray(actionList) ? actionList : [actionList];\n  var neededParams = [];\n  var defaultParams = {};\n  var immutableParams = {};\n  var _iterator2 = _createForOfIteratorHelper$5(actionList),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var action = _step2.value;\n      var _divideSingleActionPa = divideSingleActionParamsByMutability(action),\n        defaultParamsForAction = _divideSingleActionPa.defaultParamsForAction,\n        neededParamsForAction = _divideSingleActionPa.neededParamsForAction,\n        immutableParamsForAction = _divideSingleActionPa.immutableParamsForAction;\n      neededParams.push(neededParamsForAction);\n      defaultParams[action.name] = defaultParamsForAction;\n      immutableParams[action.name] = immutableParamsForAction;\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n  return {\n    defaultParams: defaultParams,\n    neededParams: neededParams,\n    immutableParams: immutableParams\n  };\n};\nvar generateDirectFetch = function generateDirectFetch(authClient, _ref) {\n  var actionDefinition = _ref.actionDefinition,\n    _ref$defaultParamsFor = _ref.defaultParamsForAction,\n    defaultParamsForAction = _ref$defaultParamsFor === void 0 ? {} : _ref$defaultParamsFor,\n    _ref$immutableParamsF = _ref.immutableParamsForAction,\n    immutableParamsForAction = _ref$immutableParamsF === void 0 ? {} : _ref$immutableParamsF,\n    _ref$toPersist = _ref.toPersist,\n    toPersist = _ref$toPersist === void 0 ? {} : _ref$toPersist;\n  var target = actionDefinition.href;\n  return _asyncToGenerator(_regeneratorRuntime.mark(function _callee() {\n    var params,\n      _a,\n      headers,\n      body,\n      response,\n      _response,\n      payload,\n      wwwAuthHeader,\n      idxResponse,\n      _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            params = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n            headers = {\n              'Content-Type': 'application/json',\n              'Accept': actionDefinition.accepts || 'application/ion+json'\n            };\n            body = _JSON$stringify(_Object$assign(_Object$assign(_Object$assign({}, defaultParamsForAction), params), immutableParamsForAction));\n            _context.prev = 3;\n            _context.next = 6;\n            return httpRequest(authClient, {\n              url: target,\n              method: actionDefinition.method,\n              headers: headers,\n              args: body,\n              withCredentials: (_a = toPersist === null || toPersist === void 0 ? void 0 : toPersist.withCredentials) !== null && _a !== void 0 ? _a : true\n            });\n          case 6:\n            response = _context.sent;\n            return _context.abrupt(\"return\", makeIdxState$1(authClient, _Object$assign({}, response), toPersist, true));\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](3);\n            if (!(!(_context.t0 instanceof AuthApiError) || !(_context.t0 === null || _context.t0 === void 0 ? void 0 : _context.t0.xhr))) {\n              _context.next = 14;\n              break;\n            }\n            throw _context.t0;\n          case 14:\n            _response = _context.t0.xhr;\n            payload = _response.responseJSON || JSON.parse(_response.responseText);\n            wwwAuthHeader = _response.headers['WWW-Authenticate'] || _response.headers['www-authenticate'];\n            idxResponse = makeIdxState$1(authClient, _Object$assign({}, payload), toPersist, false);\n            if (_response.status === 401 && wwwAuthHeader === 'Oktadevicejwt realm=\"Okta Device\"') {\n              idxResponse.stepUp = true;\n            }\n            throw idxResponse;\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[3, 10]]);\n  }));\n};\nvar generateIdxAction = function generateIdxAction(authClient, actionDefinition, toPersist) {\n  var generator = generateDirectFetch;\n  var _divideActionParamsBy = divideActionParamsByMutability(actionDefinition),\n    defaultParams = _divideActionParamsBy.defaultParams,\n    neededParams = _divideActionParamsBy.neededParams,\n    immutableParams = _divideActionParamsBy.immutableParams;\n  var action = generator(authClient, {\n    actionDefinition: actionDefinition,\n    defaultParamsForAction: defaultParams[actionDefinition.name],\n    immutableParamsForAction: immutableParams[actionDefinition.name],\n    toPersist: toPersist\n  });\n  action.neededParams = neededParams;\n  return action;\n};\nvar generateRemediationFunctions = function generateRemediationFunctions(authClient, remediationValue) {\n  var toPersist = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return _Object$fromEntries(_mapInstanceProperty(remediationValue).call(remediationValue, function (remediation) {\n    return [remediation.name, generateIdxAction(authClient, remediation, toPersist)];\n  }));\n};\nvar _context;\nvar SKIP_FIELDS = _Object$fromEntries(_mapInstanceProperty(_context = ['remediation', 'context']).call(_context, function (field) {\n  return [field, !!'skip this field'];\n}));\nvar parseNonRemediations = function parseNonRemediations(authClient, idxResponse) {\n  var _context2;\n  var toPersist = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var actions = {};\n  var context = {};\n  _filterInstanceProperty(_context2 = _Object$keys(idxResponse)).call(_context2, function (field) {\n    return !SKIP_FIELDS[field];\n  }).forEach(function (field) {\n    var fieldIsObject = _typeof(idxResponse[field]) === 'object' && !!idxResponse[field];\n    if (!fieldIsObject) {\n      context[field] = idxResponse[field];\n      return;\n    }\n    if (idxResponse[field].rel) {\n      actions[idxResponse[field].name] = generateIdxAction(authClient, idxResponse[field], toPersist);\n      return;\n    }\n    var _a = idxResponse[field],\n      fieldValue = _a.value,\n      type = _a.type,\n      info = __rest(_a, [\"value\", \"type\"]);\n    context[field] = _Object$assign({\n      type: type\n    }, info);\n    if (type !== 'object') {\n      context[field].value = fieldValue;\n      return;\n    }\n    context[field].value = {};\n    _Object$entries(fieldValue).forEach(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n        subField = _ref2[0],\n        value = _ref2[1];\n      if (value.rel) {\n        var _context3;\n        actions[_concatInstanceProperty(_context3 = \"\".concat(field, \"-\")).call(_context3, subField.name || subField)] = generateIdxAction(authClient, value, toPersist);\n      } else {\n        context[field].value[subField] = value;\n      }\n    });\n  });\n  return {\n    context: context,\n    actions: actions\n  };\n};\nvar expandRelatesTo = function expandRelatesTo(idxResponse, value) {\n  _Object$keys(value).forEach(function (k) {\n    if (k === 'relatesTo') {\n      var query = Array.isArray(value[k]) ? value[k][0] : value[k];\n      if (typeof query === 'string') {\n        var result = JSONPath({\n          path: query,\n          json: idxResponse\n        })[0];\n        if (result) {\n          value[k] = result;\n          return;\n        }\n      }\n    }\n    if (Array.isArray(value[k])) {\n      value[k].forEach(function (innerValue) {\n        return expandRelatesTo(idxResponse, innerValue);\n      });\n    }\n  });\n};\nvar convertRemediationAction = function convertRemediationAction(authClient, remediation, toPersist) {\n  var remediationActions = generateRemediationFunctions(authClient, [remediation], toPersist);\n  var actionFn = remediationActions[remediation.name];\n  return _Object$assign(_Object$assign({}, remediation), {\n    action: actionFn\n  });\n};\nvar parseIdxResponse = function parseIdxResponse(authClient, idxResponse) {\n  var toPersist = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var _a;\n  var remediationData = ((_a = idxResponse.remediation) === null || _a === void 0 ? void 0 : _a.value) || [];\n  remediationData.forEach(function (remediation) {\n    return expandRelatesTo(idxResponse, remediation);\n  });\n  var remediations = _mapInstanceProperty(remediationData).call(remediationData, function (remediation) {\n    return convertRemediationAction(authClient, remediation, toPersist);\n  });\n  var _parseNonRemediations = parseNonRemediations(authClient, idxResponse, toPersist),\n    context = _parseNonRemediations.context,\n    actions = _parseNonRemediations.actions;\n  return {\n    remediations: remediations,\n    context: context,\n    actions: actions\n  };\n};\nfunction makeIdxState$1(authClient, idxResponse, toPersist, requestDidSucceed) {\n  var _a, _b, _c;\n  var rawIdxResponse = idxResponse;\n  var _parseIdxResponse = parseIdxResponse(authClient, idxResponse, toPersist),\n    remediations = _parseIdxResponse.remediations,\n    context = _parseIdxResponse.context,\n    actions = _parseIdxResponse.actions;\n  var neededToProceed = _toConsumableArray(remediations);\n  var proceed = function () {\n    var _ref = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(remediationChoice) {\n      var paramsFromUser,\n        remediationChoiceObject,\n        _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              paramsFromUser = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              remediationChoiceObject = _findInstanceProperty(remediations).call(remediations, function (remediation) {\n                return remediation.name === remediationChoice;\n              });\n              if (remediationChoiceObject) {\n                _context.next = 4;\n                break;\n              }\n              return _context.abrupt(\"return\", _Promise.reject(\"Unknown remediation choice: [\".concat(remediationChoice, \"]\")));\n            case 4:\n              return _context.abrupt(\"return\", remediationChoiceObject.action(paramsFromUser));\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return function proceed(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var findCode = function findCode(item) {\n    return item.name === 'interaction_code';\n  };\n  var interactionCode = (_c = (_b = (_a = rawIdxResponse.successWithInteractionCode) === null || _a === void 0 ? void 0 : _a.value) === null || _b === void 0 ? void 0 : _findInstanceProperty(_b).call(_b, findCode)) === null || _c === void 0 ? void 0 : _c.value;\n  return {\n    proceed: proceed,\n    neededToProceed: neededToProceed,\n    actions: actions,\n    context: context,\n    rawIdxState: rawIdxResponse,\n    interactionCode: interactionCode,\n    toPersist: toPersist,\n    requestDidSucceed: requestDidSucceed\n  };\n}\nvar v1 = {\n  makeIdxState: makeIdxState$1\n};\nvar parsersForVersion = function parsersForVersion(version) {\n  switch (version) {\n    case '1.0.0':\n      return v1;\n    case undefined:\n    case null:\n      throw new Error('Api version is required');\n    default:\n      throw new Error(\"Unknown api version: \".concat(version, \".  Use an exact semver version.\"));\n  }\n};\nfunction validateVersionConfig(version) {\n  if (!version) {\n    throw new Error('version is required');\n  }\n  var cleanVersion = (version !== null && version !== void 0 ? version : '').replace(/[^0-9a-zA-Z._-]/, '');\n  if (cleanVersion !== version || !version) {\n    throw new Error('invalid version supplied - version is required and uses semver syntax');\n  }\n  parsersForVersion(version);\n}\nfunction makeIdxState(authClient, rawIdxResponse) {\n  var toPersist = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var requestDidSucceed = arguments.length > 3 ? arguments[3] : undefined;\n  var _a;\n  var version = (_a = rawIdxResponse === null || rawIdxResponse === void 0 ? void 0 : rawIdxResponse.version) !== null && _a !== void 0 ? _a : IDX_API_VERSION;\n  validateVersionConfig(version);\n  var _parsersForVersion = parsersForVersion(version),\n    makeIdxState = _parsersForVersion.makeIdxState;\n  return makeIdxState(authClient, rawIdxResponse, toPersist, requestDidSucceed);\n}\nfunction introspect(_x) {\n  return _introspect.apply(this, arguments);\n}\nfunction _introspect() {\n  _introspect = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(authClient) {\n    var options,\n      _a,\n      rawIdxResponse,\n      requestDidSucceed,\n      savedIdxResponse,\n      version,\n      domain,\n      interactionHandle,\n      stateHandle,\n      _withCredentials,\n      url,\n      body,\n      headers,\n      withCredentials,\n      _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n            savedIdxResponse = authClient.transactionManager.loadIdxResponse(options);\n            if (savedIdxResponse) {\n              rawIdxResponse = savedIdxResponse.rawIdxResponse;\n              requestDidSucceed = savedIdxResponse.requestDidSucceed;\n            }\n            if (rawIdxResponse) {\n              _context.next = 27;\n              break;\n            }\n            version = options.version || IDX_API_VERSION;\n            domain = getOAuthDomain(authClient);\n            interactionHandle = options.interactionHandle, stateHandle = options.stateHandle;\n            _withCredentials = (_a = options.withCredentials) !== null && _a !== void 0 ? _a : true;\n            _context.prev = 8;\n            requestDidSucceed = true;\n            validateVersionConfig(version);\n            url = \"\".concat(domain, \"/idp/idx/introspect\");\n            body = stateHandle ? {\n              stateToken: stateHandle\n            } : {\n              interactionHandle: interactionHandle\n            };\n            headers = {\n              'Content-Type': \"application/ion+json; okta-version=\".concat(version),\n              Accept: \"application/ion+json; okta-version=\".concat(version)\n            };\n            _context.next = 16;\n            return httpRequest(authClient, {\n              method: 'POST',\n              url: url,\n              headers: headers,\n              withCredentials: _withCredentials,\n              args: body\n            });\n          case 16:\n            rawIdxResponse = _context.sent;\n            _context.next = 27;\n            break;\n          case 19:\n            _context.prev = 19;\n            _context.t0 = _context[\"catch\"](8);\n            if (!(isAuthApiError(_context.t0) && _context.t0.xhr && isRawIdxResponse(_context.t0.xhr.responseJSON))) {\n              _context.next = 26;\n              break;\n            }\n            rawIdxResponse = _context.t0.xhr.responseJSON;\n            requestDidSucceed = false;\n            _context.next = 27;\n            break;\n          case 26:\n            throw _context.t0;\n          case 27:\n            withCredentials = options.withCredentials;\n            return _context.abrupt(\"return\", makeIdxState(authClient, rawIdxResponse, {\n              withCredentials: withCredentials\n            }, requestDidSucceed));\n          case 29:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[8, 19]]);\n  }));\n  return _introspect.apply(this, arguments);\n}\nfunction getAllValues(idxRemediation) {\n  var _a;\n  return (_a = idxRemediation.value) === null || _a === void 0 ? void 0 : _mapInstanceProperty(_a).call(_a, function (r) {\n    return r.name;\n  });\n}\nfunction getRequiredValues(idxRemediation) {\n  var _a;\n  return (_a = idxRemediation.value) === null || _a === void 0 ? void 0 : _reduceInstanceProperty(_a).call(_a, function (required, cur) {\n    if (cur.required) {\n      required.push(cur.name);\n    }\n    return required;\n  }, []);\n}\nfunction titleCase(str) {\n  return str.charAt(0).toUpperCase() + str.substring(1);\n}\nfunction getAuthenticatorFromRemediation(remediation) {\n  var _context;\n  return _findInstanceProperty(_context = remediation.value).call(_context, function (_ref) {\n    var name = _ref.name;\n    return name === 'authenticator';\n  });\n}\nfunction _createForOfIteratorHelper$4(o, allowArrayLike) {\n  var it = typeof _Symbol !== \"undefined\" && _getIteratorMethod(o) || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$4(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _unsupportedIterableToArray$4(o, minLen) {\n  var _context;\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$4(o, minLen);\n  var n = _sliceInstanceProperty(_context = Object.prototype.toString.call(o)).call(_context, 8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return _Array$from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$4(o, minLen);\n}\nfunction _arrayLikeToArray$4(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nfunction formatAuthenticator(incoming) {\n  var authenticator;\n  if (isAuthenticator(incoming)) {\n    authenticator = incoming;\n  } else if (typeof incoming === 'string') {\n    authenticator = {\n      key: incoming\n    };\n  } else {\n    throw new Error('Invalid format for authenticator');\n  }\n  return authenticator;\n}\nfunction compareAuthenticators(auth1, auth2) {\n  if (!auth1 || !auth2) {\n    return false;\n  }\n  if (auth1.id && auth2.id) {\n    return auth1.id === auth2.id;\n  }\n  if (auth1.key && auth2.key) {\n    return auth1.key === auth2.key;\n  }\n  return false;\n}\nfunction findMatchedOption(authenticators, options) {\n  var option;\n  var _iterator = _createForOfIteratorHelper$4(authenticators),\n    _step;\n  try {\n    var _loop = function _loop() {\n      var authenticator = _step.value;\n      option = _findInstanceProperty(options).call(options, function (_ref) {\n        var relatesTo = _ref.relatesTo;\n        return relatesTo.key === authenticator.key;\n      });\n      if (option) {\n        return \"break\";\n      }\n    };\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _ret = _loop();\n      if (_ret === \"break\") break;\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return option;\n}\nfunction _createForOfIteratorHelper$3(o, allowArrayLike) {\n  var it = typeof _Symbol !== \"undefined\" && _getIteratorMethod(o) || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$3(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _unsupportedIterableToArray$3(o, minLen) {\n  var _context11;\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$3(o, minLen);\n  var n = _sliceInstanceProperty(_context11 = Object.prototype.toString.call(o)).call(_context11, 8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return _Array$from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$3(o, minLen);\n}\nfunction _arrayLikeToArray$3(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nvar Remediator = function () {\n  function Remediator(remediation) {\n    var values = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    _classCallCheck(this, Remediator);\n    this.values = _Object$assign({}, values);\n    this.options = _Object$assign({}, options);\n    this.formatAuthenticators();\n    this.remediation = remediation;\n  }\n  _createClass(Remediator, [{\n    key: \"formatAuthenticators\",\n    value: function formatAuthenticators() {\n      var _context2, _context3;\n      _valuesInstanceProperty(this).authenticators = _valuesInstanceProperty(this).authenticators || [];\n      _valuesInstanceProperty(this).authenticators = _mapInstanceProperty(_context2 = _valuesInstanceProperty(this).authenticators).call(_context2, function (authenticator) {\n        return formatAuthenticator(authenticator);\n      });\n      if (_valuesInstanceProperty(this).authenticator) {\n        var authenticator = formatAuthenticator(_valuesInstanceProperty(this).authenticator);\n        var hasAuthenticatorInList = _valuesInstanceProperty(this).authenticators.some(function (existing) {\n          return compareAuthenticators(authenticator, existing);\n        });\n        if (!hasAuthenticatorInList) {\n          _valuesInstanceProperty(this).authenticators.push(authenticator);\n        }\n      }\n      _valuesInstanceProperty(this).authenticatorsData = _reduceInstanceProperty(_context3 = _valuesInstanceProperty(this).authenticators).call(_context3, function (acc, authenticator) {\n        if (_typeof(authenticator) === 'object' && _Object$keys(authenticator).length > 1) {\n          acc.push(authenticator);\n        }\n        return acc;\n      }, _valuesInstanceProperty(this).authenticatorsData || []);\n    }\n  }, {\n    key: \"getName\",\n    value: function getName() {\n      return this.remediation.name;\n    }\n  }, {\n    key: \"canRemediate\",\n    value: function canRemediate() {\n      var _this = this;\n      var required = getRequiredValues(this.remediation);\n      var needed = _findInstanceProperty(required).call(required, function (key) {\n        return !_this.hasData(key);\n      });\n      if (needed) {\n        return false;\n      }\n      return true;\n    }\n  }, {\n    key: \"getData\",\n    value: function getData(key) {\n      var _this2 = this;\n      if (!key) {\n        var allValues = getAllValues(this.remediation);\n        var res = _reduceInstanceProperty(allValues).call(allValues, function (data, key) {\n          data[key] = _this2.getData(key);\n          return data;\n        }, {});\n        return res;\n      }\n      if (typeof this[\"map\".concat(titleCase(key))] === 'function') {\n        var _context4;\n        var val = this[\"map\".concat(titleCase(key))](_findInstanceProperty(_context4 = this.remediation.value).call(_context4, function (_ref) {\n          var name = _ref.name;\n          return name === key;\n        }));\n        if (val) {\n          return val;\n        }\n      }\n      if (_mapInstanceProperty(this) && _mapInstanceProperty(this)[key]) {\n        var entry = _mapInstanceProperty(this)[key];\n        for (var i = 0; i < entry.length; i++) {\n          var _val = _valuesInstanceProperty(this)[entry[i]];\n          if (_val) {\n            return _val;\n          }\n        }\n      }\n      return _valuesInstanceProperty(this)[key];\n    }\n  }, {\n    key: \"hasData\",\n    value: function hasData(key) {\n      return !!this.getData(key);\n    }\n  }, {\n    key: \"getNextStep\",\n    value: function getNextStep(_context) {\n      var name = this.getName();\n      var inputs = this.getInputs();\n      var authenticator = this.getAuthenticator();\n      var type = authenticator === null || authenticator === void 0 ? void 0 : authenticator.type;\n      return _Object$assign(_Object$assign({\n        name: name,\n        inputs: inputs\n      }, type && {\n        type: type\n      }), authenticator && {\n        authenticator: authenticator\n      });\n    }\n  }, {\n    key: \"getInputs\",\n    value: function getInputs() {\n      var _this3 = this;\n      var inputs = [];\n      var inputsFromRemediation = this.remediation.value || [];\n      inputsFromRemediation.forEach(function (inputFromRemediation) {\n        var input;\n        var name = inputFromRemediation.name,\n          type = inputFromRemediation.type,\n          visible = inputFromRemediation.visible,\n          messages = inputFromRemediation.messages;\n        if (visible === false) {\n          return;\n        }\n        if (typeof _this3[\"getInput\".concat(titleCase(name))] === 'function') {\n          input = _this3[\"getInput\".concat(titleCase(name))](inputFromRemediation);\n        } else if (type !== 'object') {\n          var alias;\n          var aliases = (_mapInstanceProperty(_this3) ? _mapInstanceProperty(_this3)[name] : null) || [];\n          if (aliases.length === 1) {\n            alias = aliases[0];\n          } else {\n            alias = _findInstanceProperty(aliases).call(aliases, function (name) {\n              var _context5;\n              return _includesInstanceProperty(_context5 = _Object$keys(_valuesInstanceProperty(_this3))).call(_context5, name);\n            });\n          }\n          if (alias) {\n            input = _Object$assign(_Object$assign({}, inputFromRemediation), {\n              name: alias\n            });\n          }\n        }\n        if (!input) {\n          input = inputFromRemediation;\n        }\n        if (Array.isArray(input)) {\n          input.forEach(function (i) {\n            return inputs.push(i);\n          });\n        } else {\n          if (messages) {\n            input.messages = messages;\n          }\n          inputs.push(input);\n        }\n      });\n      return inputs;\n    }\n  }, {\n    key: \"getValuesAfterProceed\",\n    value: function getValuesAfterProceed() {\n      var _context6;\n      var inputsFromRemediation = this.remediation.value || [];\n      var inputsFromRemediator = this.getInputs();\n      var inputs = _concatInstanceProperty(_context6 = []).call(_context6, _toConsumableArray(inputsFromRemediation), _toConsumableArray(inputsFromRemediator));\n      var _iterator = _createForOfIteratorHelper$3(inputs),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var input = _step.value;\n          delete _valuesInstanceProperty(this)[input.name];\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      return _valuesInstanceProperty(this);\n    }\n  }, {\n    key: \"getAuthenticator\",\n    value: function getAuthenticator() {\n      var _context7, _context8;\n      var _a, _b;\n      var relatesTo = (_a = this.remediation.relatesTo) === null || _a === void 0 ? void 0 : _a.value;\n      if (!relatesTo) {\n        return;\n      }\n      var authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation);\n      if (!authenticatorFromRemediation) {\n        return relatesTo;\n      }\n      var id = _findInstanceProperty(_context7 = authenticatorFromRemediation.form.value).call(_context7, function (_ref2) {\n        var name = _ref2.name;\n        return name === 'id';\n      }).value;\n      var enrollmentId = (_b = _findInstanceProperty(_context8 = authenticatorFromRemediation.form.value).call(_context8, function (_ref3) {\n        var name = _ref3.name;\n        return name === 'enrollmentId';\n      })) === null || _b === void 0 ? void 0 : _b.value;\n      return _Object$assign(_Object$assign({}, relatesTo), {\n        id: id,\n        enrollmentId: enrollmentId\n      });\n    }\n  }], [{\n    key: \"getMessages\",\n    value: function getMessages(remediation) {\n      var _context9;\n      var _a, _b;\n      if (!remediation.value) {\n        return;\n      }\n      return (_b = (_a = remediation.value[0]) === null || _a === void 0 ? void 0 : _a.form) === null || _b === void 0 ? void 0 : _reduceInstanceProperty(_context9 = _b.value).call(_context9, function (messages, field) {\n        if (field.messages) {\n          var _context10;\n          messages = _concatInstanceProperty(_context10 = []).call(_context10, _toConsumableArray(messages), _toConsumableArray(field.messages.value));\n        }\n        return messages;\n      }, []);\n    }\n  }]);\n  return Remediator;\n}();\nvar Authenticator = function Authenticator(authenticator) {\n  _classCallCheck(this, Authenticator);\n  this.meta = authenticator;\n};\nfunction _createSuper$s(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$s();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct$s() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar VerificationCodeAuthenticator = function (_Authenticator) {\n  _inherits(VerificationCodeAuthenticator, _Authenticator);\n  var _super = _createSuper$s(VerificationCodeAuthenticator);\n  function VerificationCodeAuthenticator() {\n    _classCallCheck(this, VerificationCodeAuthenticator);\n    return _super.apply(this, arguments);\n  }\n  _createClass(VerificationCodeAuthenticator, [{\n    key: \"canVerify\",\n    value: function canVerify(values) {\n      return !!(values.credentials || values.verificationCode || values.otp);\n    }\n  }, {\n    key: \"mapCredentials\",\n    value: function mapCredentials(values) {\n      var credentials = values.credentials,\n        verificationCode = values.verificationCode,\n        otp = values.otp;\n      if (!credentials && !verificationCode && !otp) {\n        return;\n      }\n      return credentials || {\n        passcode: verificationCode || otp\n      };\n    }\n  }, {\n    key: \"getInputs\",\n    value: function getInputs(idxRemediationValue) {\n      var _a;\n      return _Object$assign(_Object$assign({}, (_a = idxRemediationValue.form) === null || _a === void 0 ? void 0 : _a.value[0]), {\n        name: 'verificationCode',\n        type: 'string',\n        required: idxRemediationValue.required\n      });\n    }\n  }]);\n  return VerificationCodeAuthenticator;\n}(Authenticator);\nfunction _createSuper$r(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$r();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct$r() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar OktaVerifyTotp = function (_VerificationCodeAuth) {\n  _inherits(OktaVerifyTotp, _VerificationCodeAuth);\n  var _super = _createSuper$r(OktaVerifyTotp);\n  function OktaVerifyTotp() {\n    _classCallCheck(this, OktaVerifyTotp);\n    return _super.apply(this, arguments);\n  }\n  _createClass(OktaVerifyTotp, [{\n    key: \"mapCredentials\",\n    value: function mapCredentials(values) {\n      var verificationCode = values.verificationCode;\n      if (!verificationCode) {\n        return;\n      }\n      return {\n        totp: verificationCode\n      };\n    }\n  }]);\n  return OktaVerifyTotp;\n}(VerificationCodeAuthenticator);\nfunction _createSuper$q(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$q();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct$q() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar OktaPassword = function (_Authenticator) {\n  _inherits(OktaPassword, _Authenticator);\n  var _super = _createSuper$q(OktaPassword);\n  function OktaPassword() {\n    _classCallCheck(this, OktaPassword);\n    return _super.apply(this, arguments);\n  }\n  _createClass(OktaPassword, [{\n    key: \"canVerify\",\n    value: function canVerify(values) {\n      return !!(values.credentials || values.password);\n    }\n  }, {\n    key: \"mapCredentials\",\n    value: function mapCredentials(values) {\n      var credentials = values.credentials,\n        password = values.password;\n      if (!credentials && !password) {\n        return;\n      }\n      return credentials || {\n        passcode: password\n      };\n    }\n  }, {\n    key: \"getInputs\",\n    value: function getInputs(idxRemediationValue) {\n      var _a;\n      return _Object$assign(_Object$assign({}, (_a = idxRemediationValue.form) === null || _a === void 0 ? void 0 : _a.value[0]), {\n        name: 'password',\n        type: 'string',\n        required: idxRemediationValue.required\n      });\n    }\n  }]);\n  return OktaPassword;\n}(Authenticator);\nfunction _createSuper$p(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$p();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct$p() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar SecurityQuestionEnrollment = function (_Authenticator) {\n  _inherits(SecurityQuestionEnrollment, _Authenticator);\n  var _super = _createSuper$p(SecurityQuestionEnrollment);\n  function SecurityQuestionEnrollment() {\n    _classCallCheck(this, SecurityQuestionEnrollment);\n    return _super.apply(this, arguments);\n  }\n  _createClass(SecurityQuestionEnrollment, [{\n    key: \"canVerify\",\n    value: function canVerify(values) {\n      var credentials = values.credentials;\n      if (credentials && credentials.questionKey && credentials.answer) {\n        return true;\n      }\n      var questionKey = values.questionKey,\n        question = values.question,\n        answer = values.answer;\n      return !!(questionKey && answer) || !!(question && answer);\n    }\n  }, {\n    key: \"mapCredentials\",\n    value: function mapCredentials(values) {\n      var questionKey = values.questionKey,\n        question = values.question,\n        answer = values.answer;\n      if (!answer || !questionKey && !question) {\n        return;\n      }\n      return {\n        questionKey: question ? 'custom' : questionKey,\n        question: question,\n        answer: answer\n      };\n    }\n  }, {\n    key: \"getInputs\",\n    value: function getInputs() {\n      return [{\n        name: 'questionKey',\n        type: 'string',\n        required: true\n      }, {\n        name: 'question',\n        type: 'string',\n        label: 'Create a security question'\n      }, {\n        name: 'answer',\n        type: 'string',\n        label: 'Answer',\n        required: true\n      }];\n    }\n  }]);\n  return SecurityQuestionEnrollment;\n}(Authenticator);\nfunction _createSuper$o(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$o();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct$o() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar SecurityQuestionVerification = function (_Authenticator) {\n  _inherits(SecurityQuestionVerification, _Authenticator);\n  var _super = _createSuper$o(SecurityQuestionVerification);\n  function SecurityQuestionVerification() {\n    _classCallCheck(this, SecurityQuestionVerification);\n    return _super.apply(this, arguments);\n  }\n  _createClass(SecurityQuestionVerification, [{\n    key: \"canVerify\",\n    value: function canVerify(values) {\n      var credentials = values.credentials;\n      if (credentials && credentials.answer) {\n        return true;\n      }\n      var answer = values.answer;\n      return !!answer;\n    }\n  }, {\n    key: \"mapCredentials\",\n    value: function mapCredentials(values) {\n      var answer = values.answer;\n      if (!answer) {\n        return;\n      }\n      return {\n        questionKey: this.meta.contextualData.enrolledQuestion.questionKey,\n        answer: answer\n      };\n    }\n  }, {\n    key: \"getInputs\",\n    value: function getInputs() {\n      return [{\n        name: 'answer',\n        type: 'string',\n        label: 'Answer',\n        required: true\n      }];\n    }\n  }]);\n  return SecurityQuestionVerification;\n}(Authenticator);\nfunction _createSuper$n(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$n();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct$n() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar WebauthnEnrollment = function (_Authenticator) {\n  _inherits(WebauthnEnrollment, _Authenticator);\n  var _super = _createSuper$n(WebauthnEnrollment);\n  function WebauthnEnrollment() {\n    _classCallCheck(this, WebauthnEnrollment);\n    return _super.apply(this, arguments);\n  }\n  _createClass(WebauthnEnrollment, [{\n    key: \"canVerify\",\n    value: function canVerify(values) {\n      var credentials = values.credentials;\n      var obj = credentials || values;\n      var clientData = obj.clientData,\n        attestation = obj.attestation;\n      return !!(clientData && attestation);\n    }\n  }, {\n    key: \"mapCredentials\",\n    value: function mapCredentials(values) {\n      var credentials = values.credentials,\n        clientData = values.clientData,\n        attestation = values.attestation;\n      if (!credentials && !clientData && !attestation) {\n        return;\n      }\n      return credentials || {\n        clientData: clientData,\n        attestation: attestation\n      };\n    }\n  }, {\n    key: \"getInputs\",\n    value: function getInputs() {\n      return [{\n        name: 'clientData',\n        type: 'string',\n        required: true,\n        visible: false,\n        label: 'Client Data'\n      }, {\n        name: 'attestation',\n        type: 'string',\n        required: true,\n        visible: false,\n        label: 'Attestation'\n      }];\n    }\n  }]);\n  return WebauthnEnrollment;\n}(Authenticator);\nfunction _createSuper$m(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$m();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct$m() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar WebauthnVerification = function (_Authenticator) {\n  _inherits(WebauthnVerification, _Authenticator);\n  var _super = _createSuper$m(WebauthnVerification);\n  function WebauthnVerification() {\n    _classCallCheck(this, WebauthnVerification);\n    return _super.apply(this, arguments);\n  }\n  _createClass(WebauthnVerification, [{\n    key: \"canVerify\",\n    value: function canVerify(values) {\n      var credentials = values.credentials;\n      var obj = credentials || values;\n      var clientData = obj.clientData,\n        authenticatorData = obj.authenticatorData,\n        signatureData = obj.signatureData;\n      return !!(clientData && authenticatorData && signatureData);\n    }\n  }, {\n    key: \"mapCredentials\",\n    value: function mapCredentials(values) {\n      var credentials = values.credentials,\n        authenticatorData = values.authenticatorData,\n        clientData = values.clientData,\n        signatureData = values.signatureData;\n      if (!credentials && !authenticatorData && !clientData && !signatureData) {\n        return;\n      }\n      return credentials || {\n        authenticatorData: authenticatorData,\n        clientData: clientData,\n        signatureData: signatureData\n      };\n    }\n  }, {\n    key: \"getInputs\",\n    value: function getInputs() {\n      return [{\n        name: 'authenticatorData',\n        type: 'string',\n        label: 'Authenticator Data',\n        required: true,\n        visible: false\n      }, {\n        name: 'clientData',\n        type: 'string',\n        label: 'Client Data',\n        required: true,\n        visible: false\n      }, {\n        name: 'signatureData',\n        type: 'string',\n        label: 'Signature Data',\n        required: true,\n        visible: false\n      }];\n    }\n  }]);\n  return WebauthnVerification;\n}(Authenticator);\nfunction getAuthenticator(remediation) {\n  var _a, _b;\n  var relatesTo = remediation.relatesTo;\n  var value = (relatesTo === null || relatesTo === void 0 ? void 0 : relatesTo.value) || {};\n  switch (value.key) {\n    case AuthenticatorKey.OKTA_PASSWORD:\n      return new OktaPassword(value);\n    case AuthenticatorKey.SECURITY_QUESTION:\n      if ((_a = value.contextualData) === null || _a === void 0 ? void 0 : _a.enrolledQuestion) {\n        return new SecurityQuestionVerification(value);\n      } else {\n        return new SecurityQuestionEnrollment(value);\n      }\n    case AuthenticatorKey.OKTA_VERIFY:\n      return new OktaVerifyTotp(value);\n    case AuthenticatorKey.WEBAUTHN:\n      if ((_b = value.contextualData) === null || _b === void 0 ? void 0 : _b.challengeData) {\n        return new WebauthnVerification(value);\n      } else {\n        return new WebauthnEnrollment(value);\n      }\n    default:\n      return new VerificationCodeAuthenticator(value);\n  }\n}\nfunction _createSuper$l(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$l();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct$l() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar VerifyAuthenticator = function (_Remediator) {\n  _inherits(VerifyAuthenticator, _Remediator);\n  var _super = _createSuper$l(VerifyAuthenticator);\n  function VerifyAuthenticator(remediation) {\n    var _this;\n    var values = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, VerifyAuthenticator);\n    _this = _super.call(this, remediation, values);\n    _this.authenticator = getAuthenticator(remediation);\n    return _this;\n  }\n  _createClass(VerifyAuthenticator, [{\n    key: \"getNextStep\",\n    value: function getNextStep(context) {\n      var _a;\n      var nextStep = _get(_getPrototypeOf(VerifyAuthenticator.prototype), \"getNextStep\", this).call(this, context);\n      var authenticatorEnrollments = (_a = context === null || context === void 0 ? void 0 : context.authenticatorEnrollments) === null || _a === void 0 ? void 0 : _a.value;\n      return _Object$assign(_Object$assign({}, nextStep), {\n        authenticatorEnrollments: authenticatorEnrollments\n      });\n    }\n  }, {\n    key: \"canRemediate\",\n    value: function canRemediate() {\n      return this.authenticator.canVerify(_valuesInstanceProperty(this));\n    }\n  }, {\n    key: \"mapCredentials\",\n    value: function mapCredentials() {\n      return this.authenticator.mapCredentials(_valuesInstanceProperty(this));\n    }\n  }, {\n    key: \"getInputCredentials\",\n    value: function getInputCredentials(input) {\n      return this.authenticator.getInputs(input);\n    }\n  }, {\n    key: \"getValuesAfterProceed\",\n    value: function getValuesAfterProceed() {\n      var _context,\n        _this2 = this;\n      this.values = _get(_getPrototypeOf(VerifyAuthenticator.prototype), \"getValuesAfterProceed\", this).call(this);\n      var trimmedValues = _filterInstanceProperty(_context = _Object$keys(_valuesInstanceProperty(this))).call(_context, function (valueKey) {\n        return valueKey !== 'credentials';\n      });\n      return _reduceInstanceProperty(trimmedValues).call(trimmedValues, function (values, valueKey) {\n        return _Object$assign(_Object$assign({}, values), _defineProperty({}, valueKey, _valuesInstanceProperty(_this2)[valueKey]));\n      }, {});\n    }\n  }]);\n  return VerifyAuthenticator;\n}(Remediator);\nfunction _createSuper$k(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$k();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct$k() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar EnrollAuthenticator = function (_VerifyAuthenticator) {\n  _inherits(EnrollAuthenticator, _VerifyAuthenticator);\n  var _super = _createSuper$k(EnrollAuthenticator);\n  function EnrollAuthenticator() {\n    _classCallCheck(this, EnrollAuthenticator);\n    return _super.apply(this, arguments);\n  }\n  return EnrollAuthenticator;\n}(VerifyAuthenticator);\nEnrollAuthenticator.remediationName = 'enroll-authenticator';\nfunction _createSuper$j(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$j();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct$j() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar EnrollPoll = function (_Remediator) {\n  _inherits(EnrollPoll, _Remediator);\n  var _super = _createSuper$j(EnrollPoll);\n  function EnrollPoll() {\n    _classCallCheck(this, EnrollPoll);\n    return _super.apply(this, arguments);\n  }\n  _createClass(EnrollPoll, [{\n    key: \"canRemediate\",\n    value: function canRemediate() {\n      return !!_valuesInstanceProperty(this).startPolling || this.options.step === 'enroll-poll';\n    }\n  }, {\n    key: \"getNextStep\",\n    value: function getNextStep(context) {\n      var common = _get(_getPrototypeOf(EnrollPoll.prototype), \"getNextStep\", this).call(this, context);\n      var authenticator = this.getAuthenticator();\n      if (!authenticator && (context === null || context === void 0 ? void 0 : context.currentAuthenticator)) {\n        authenticator = context.currentAuthenticator.value;\n      }\n      return _Object$assign(_Object$assign({}, common), {\n        authenticator: authenticator,\n        poll: {\n          required: true,\n          refresh: this.remediation.refresh\n        }\n      });\n    }\n  }, {\n    key: \"getValuesAfterProceed\",\n    value: function getValuesAfterProceed() {\n      var _context,\n        _this = this;\n      var trimmedValues = _filterInstanceProperty(_context = _Object$keys(_valuesInstanceProperty(this))).call(_context, function (valueKey) {\n        return valueKey !== 'startPolling';\n      });\n      return _reduceInstanceProperty(trimmedValues).call(trimmedValues, function (values, valueKey) {\n        return _Object$assign(_Object$assign({}, values), _defineProperty({}, valueKey, _valuesInstanceProperty(_this)[valueKey]));\n      }, {});\n    }\n  }]);\n  return EnrollPoll;\n}(Remediator);\nEnrollPoll.remediationName = 'enroll-poll';\nfunction _createSuper$i(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$i();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct$i() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar SelectEnrollmentChannel = function (_Remediator) {\n  _inherits(SelectEnrollmentChannel, _Remediator);\n  var _super = _createSuper$i(SelectEnrollmentChannel);\n  function SelectEnrollmentChannel() {\n    _classCallCheck(this, SelectEnrollmentChannel);\n    return _super.apply(this, arguments);\n  }\n  _createClass(SelectEnrollmentChannel, [{\n    key: \"canRemediate\",\n    value: function canRemediate() {\n      return Boolean(_valuesInstanceProperty(this).channel);\n    }\n  }, {\n    key: \"getNextStep\",\n    value: function getNextStep(context) {\n      var common = _get(_getPrototypeOf(SelectEnrollmentChannel.prototype), \"getNextStep\", this).call(this);\n      var options = this.getChannels();\n      var authenticator = context.currentAuthenticator.value;\n      return _Object$assign(_Object$assign(_Object$assign({}, common), options && {\n        options: options\n      }), {\n        authenticator: authenticator\n      });\n    }\n  }, {\n    key: \"getChannels\",\n    value: function getChannels() {\n      var _context;\n      var _a;\n      var authenticator = getAuthenticatorFromRemediation(this.remediation);\n      var remediationValue = authenticator.value;\n      return (_a = _findInstanceProperty(_context = remediationValue.form.value).call(_context, function (_ref) {\n        var name = _ref.name;\n        return name === 'channel';\n      })) === null || _a === void 0 ? void 0 : _a.options;\n    }\n  }, {\n    key: \"getData\",\n    value: function getData() {\n      var remediationValue = this.remediation.value[0].value;\n      return {\n        authenticator: {\n          id: remediationValue.form.value[0].value,\n          channel: _valuesInstanceProperty(this).channel\n        },\n        stateHandle: _valuesInstanceProperty(this).stateHandle\n      };\n    }\n  }, {\n    key: \"getValuesAfterProceed\",\n    value: function getValuesAfterProceed() {\n      var _context2,\n        _this = this;\n      var trimmedValues = _filterInstanceProperty(_context2 = _Object$keys(_valuesInstanceProperty(this))).call(_context2, function (valueKey) {\n        return valueKey !== 'channel';\n      });\n      return _reduceInstanceProperty(trimmedValues).call(trimmedValues, function (values, valueKey) {\n        return _Object$assign(_Object$assign({}, values), _defineProperty({}, valueKey, _valuesInstanceProperty(_this)[valueKey]));\n      }, {});\n    }\n  }]);\n  return SelectEnrollmentChannel;\n}(Remediator);\nSelectEnrollmentChannel.remediationName = 'select-enrollment-channel';\nfunction _createSuper$h(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$h();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct$h() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar EnrollmentChannelData = function (_Remediator) {\n  _inherits(EnrollmentChannelData, _Remediator);\n  var _super = _createSuper$h(EnrollmentChannelData);\n  function EnrollmentChannelData() {\n    _classCallCheck(this, EnrollmentChannelData);\n    return _super.apply(this, arguments);\n  }\n  _createClass(EnrollmentChannelData, [{\n    key: \"getInputEmail\",\n    value: function getInputEmail() {\n      return [{\n        name: 'email',\n        type: 'string',\n        required: true,\n        label: 'Email'\n      }];\n    }\n  }, {\n    key: \"getInputPhoneNumber\",\n    value: function getInputPhoneNumber() {\n      return [{\n        name: 'phoneNumber',\n        type: 'string',\n        required: true,\n        label: 'Phone Number'\n      }];\n    }\n  }, {\n    key: \"canRemediate\",\n    value: function canRemediate() {\n      return Boolean(_valuesInstanceProperty(this).email || _valuesInstanceProperty(this).phoneNumber);\n    }\n  }, {\n    key: \"getNextStep\",\n    value: function getNextStep(context) {\n      var common = _get(_getPrototypeOf(EnrollmentChannelData.prototype), \"getNextStep\", this).call(this);\n      var authenticator = context.currentAuthenticator.value;\n      return _Object$assign(_Object$assign({}, common), {\n        authenticator: authenticator\n      });\n    }\n  }, {\n    key: \"getData\",\n    value: function getData() {\n      return {\n        stateHandle: _valuesInstanceProperty(this).stateHandle,\n        email: _valuesInstanceProperty(this).email,\n        phoneNumber: _valuesInstanceProperty(this).phoneNumber\n      };\n    }\n  }, {\n    key: \"getValuesAfterProceed\",\n    value: function getValuesAfterProceed() {\n      var _context,\n        _this = this;\n      var trimmedValues = _filterInstanceProperty(_context = _Object$keys(_valuesInstanceProperty(this))).call(_context, function (valueKey) {\n        var _context2;\n        return !_includesInstanceProperty(_context2 = ['email', 'phoneNumber']).call(_context2, valueKey);\n      });\n      return _reduceInstanceProperty(trimmedValues).call(trimmedValues, function (values, valueKey) {\n        return _Object$assign(_Object$assign({}, values), _defineProperty({}, valueKey, _valuesInstanceProperty(_this)[valueKey]));\n      }, {});\n    }\n  }]);\n  return EnrollmentChannelData;\n}(Remediator);\nEnrollmentChannelData.remediationName = 'enrollment-channel-data';\nfunction _createSuper$g(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$g();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct$g() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar ChallengeAuthenticator = function (_VerifyAuthenticator) {\n  _inherits(ChallengeAuthenticator, _VerifyAuthenticator);\n  var _super = _createSuper$g(ChallengeAuthenticator);\n  function ChallengeAuthenticator() {\n    _classCallCheck(this, ChallengeAuthenticator);\n    return _super.apply(this, arguments);\n  }\n  return ChallengeAuthenticator;\n}(VerifyAuthenticator);\nChallengeAuthenticator.remediationName = 'challenge-authenticator';\nfunction _createSuper$f(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$f();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct$f() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar ChallengePoll = function (_EnrollPoll) {\n  _inherits(ChallengePoll, _EnrollPoll);\n  var _super = _createSuper$f(ChallengePoll);\n  function ChallengePoll() {\n    _classCallCheck(this, ChallengePoll);\n    return _super.apply(this, arguments);\n  }\n  _createClass(ChallengePoll, [{\n    key: \"canRemediate\",\n    value: function canRemediate() {\n      return !!_valuesInstanceProperty(this).startPolling || this.options.step === 'challenge-poll';\n    }\n  }]);\n  return ChallengePoll;\n}(EnrollPoll);\nChallengePoll.remediationName = 'challenge-poll';\nfunction _createSuper$e(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$e();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct$e() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar ResetAuthenticator = function (_VerifyAuthenticator) {\n  _inherits(ResetAuthenticator, _VerifyAuthenticator);\n  var _super = _createSuper$e(ResetAuthenticator);\n  function ResetAuthenticator() {\n    _classCallCheck(this, ResetAuthenticator);\n    return _super.apply(this, arguments);\n  }\n  return ResetAuthenticator;\n}(VerifyAuthenticator);\nResetAuthenticator.remediationName = 'reset-authenticator';\nfunction _createSuper$d(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$d();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct$d() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar EnrollProfile = function (_Remediator) {\n  _inherits(EnrollProfile, _Remediator);\n  var _super = _createSuper$d(EnrollProfile);\n  function EnrollProfile() {\n    _classCallCheck(this, EnrollProfile);\n    return _super.apply(this, arguments);\n  }\n  _createClass(EnrollProfile, [{\n    key: \"canRemediate\",\n    value: function canRemediate() {\n      var _context, _context2;\n      var userProfileFromValues = this.getData().userProfile;\n      if (!userProfileFromValues) {\n        return false;\n      }\n      var userProfileFromRemediation = _findInstanceProperty(_context = this.remediation.value).call(_context, function (_ref) {\n        var name = _ref.name;\n        return name === 'userProfile';\n      });\n      return _reduceInstanceProperty(_context2 = userProfileFromRemediation.form.value).call(_context2, function (canRemediate, curr) {\n        if (curr.required) {\n          canRemediate = canRemediate && !!userProfileFromValues[curr.name];\n        }\n        return canRemediate;\n      }, true);\n    }\n  }, {\n    key: \"mapUserProfile\",\n    value: function mapUserProfile(_ref2) {\n      var _this = this;\n      var profileAttributes = _ref2.form.value;\n      var attributeNames = _mapInstanceProperty(profileAttributes).call(profileAttributes, function (_ref3) {\n        var name = _ref3.name;\n        return name;\n      });\n      var data = _reduceInstanceProperty(attributeNames).call(attributeNames, function (attributeValues, attributeName) {\n        return _valuesInstanceProperty(_this)[attributeName] ? _Object$assign(_Object$assign({}, attributeValues), _defineProperty({}, attributeName, _valuesInstanceProperty(_this)[attributeName])) : attributeValues;\n      }, {});\n      if (_Object$keys(data).length === 0) {\n        return;\n      }\n      return data;\n    }\n  }, {\n    key: \"getInputUserProfile\",\n    value: function getInputUserProfile(input) {\n      return _toConsumableArray(input.form.value);\n    }\n  }, {\n    key: \"getErrorMessages\",\n    value: function getErrorMessages(errorRemediation) {\n      var _context3;\n      return _reduceInstanceProperty(_context3 = errorRemediation.value[0].form.value).call(_context3, function (errors, field) {\n        if (field.messages) {\n          errors.push(field.messages.value[0].message);\n        }\n        return errors;\n      }, []);\n    }\n  }]);\n  return EnrollProfile;\n}(Remediator);\nEnrollProfile.remediationName = 'enroll-profile';\nfunction _createSuper$c(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$c();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct$c() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar Identify = function (_Remediator) {\n  _inherits(Identify, _Remediator);\n  var _super = _createSuper$c(Identify);\n  function Identify() {\n    var _this;\n    _classCallCheck(this, Identify);\n    _this = _super.apply(this, arguments);\n    _this.map = {\n      'identifier': ['username']\n    };\n    return _this;\n  }\n  _createClass(Identify, [{\n    key: \"canRemediate\",\n    value: function canRemediate() {\n      var _this$getData = this.getData(),\n        identifier = _this$getData.identifier;\n      return !!identifier;\n    }\n  }, {\n    key: \"mapCredentials\",\n    value: function mapCredentials() {\n      var _this$values = _valuesInstanceProperty(this),\n        credentials = _this$values.credentials,\n        password = _this$values.password;\n      if (!credentials && !password) {\n        return;\n      }\n      return credentials || {\n        passcode: password\n      };\n    }\n  }, {\n    key: \"getInputCredentials\",\n    value: function getInputCredentials(input) {\n      return _Object$assign(_Object$assign({}, input.form.value[0]), {\n        name: 'password',\n        required: input.required\n      });\n    }\n  }]);\n  return Identify;\n}(Remediator);\nIdentify.remediationName = 'identify';\nfunction _createSuper$b(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$b();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct$b() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar ReEnrollAuthenticator = function (_Remediator) {\n  _inherits(ReEnrollAuthenticator, _Remediator);\n  var _super = _createSuper$b(ReEnrollAuthenticator);\n  function ReEnrollAuthenticator() {\n    _classCallCheck(this, ReEnrollAuthenticator);\n    return _super.apply(this, arguments);\n  }\n  _createClass(ReEnrollAuthenticator, [{\n    key: \"mapCredentials\",\n    value: function mapCredentials() {\n      var newPassword = _valuesInstanceProperty(this).newPassword;\n      if (!newPassword) {\n        return;\n      }\n      return {\n        passcode: newPassword\n      };\n    }\n  }, {\n    key: \"getInputCredentials\",\n    value: function getInputCredentials(input) {\n      var challengeType = this.getAuthenticator().type;\n      var name = challengeType === 'password' ? 'newPassword' : 'verificationCode';\n      return _Object$assign(_Object$assign({}, input.form.value[0]), {\n        name: name\n      });\n    }\n  }]);\n  return ReEnrollAuthenticator;\n}(Remediator);\nReEnrollAuthenticator.remediationName = 'reenroll-authenticator';\nfunction _createSuper$a(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$a();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct$a() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar RedirectIdp = function (_Remediator) {\n  _inherits(RedirectIdp, _Remediator);\n  var _super = _createSuper$a(RedirectIdp);\n  function RedirectIdp() {\n    _classCallCheck(this, RedirectIdp);\n    return _super.apply(this, arguments);\n  }\n  _createClass(RedirectIdp, [{\n    key: \"canRemediate\",\n    value: function canRemediate() {\n      return false;\n    }\n  }, {\n    key: \"getNextStep\",\n    value: function getNextStep() {\n      var _this$remediation = this.remediation,\n        name = _this$remediation.name,\n        type = _this$remediation.type,\n        idp = _this$remediation.idp,\n        href = _this$remediation.href;\n      return {\n        name: name,\n        type: type,\n        idp: idp,\n        href: href\n      };\n    }\n  }]);\n  return RedirectIdp;\n}(Remediator);\nRedirectIdp.remediationName = 'redirect-idp';\nfunction _createForOfIteratorHelper$2(o, allowArrayLike) {\n  var it = typeof _Symbol !== \"undefined\" && _getIteratorMethod(o) || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$2(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _unsupportedIterableToArray$2(o, minLen) {\n  var _context4;\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$2(o, minLen);\n  var n = _sliceInstanceProperty(_context4 = Object.prototype.toString.call(o)).call(_context4, 8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return _Array$from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$2(o, minLen);\n}\nfunction _arrayLikeToArray$2(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nfunction _createSuper$9(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$9();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct$9() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar SelectAuthenticator = function (_Remediator) {\n  _inherits(SelectAuthenticator, _Remediator);\n  var _super = _createSuper$9(SelectAuthenticator);\n  function SelectAuthenticator() {\n    _classCallCheck(this, SelectAuthenticator);\n    return _super.apply(this, arguments);\n  }\n  _createClass(SelectAuthenticator, [{\n    key: \"findMatchedOption\",\n    value: function findMatchedOption(authenticators, options) {\n      var option;\n      var _iterator = _createForOfIteratorHelper$2(authenticators),\n        _step;\n      try {\n        var _loop = function _loop() {\n          var authenticator = _step.value;\n          option = _findInstanceProperty(options).call(options, function (_ref) {\n            var relatesTo = _ref.relatesTo;\n            return relatesTo.key === authenticator.key;\n          });\n          if (option) {\n            return \"break\";\n          }\n        };\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _ret = _loop();\n          if (_ret === \"break\") break;\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      return option;\n    }\n  }, {\n    key: \"canRemediate\",\n    value: function canRemediate() {\n      var _this$values = _valuesInstanceProperty(this),\n        authenticators = _this$values.authenticators,\n        authenticator = _this$values.authenticator;\n      var authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation);\n      var options = authenticatorFromRemediation.options;\n      if (!authenticators || !authenticators.length) {\n        return false;\n      }\n      if (isAuthenticator(authenticator) && authenticator.id) {\n        return true;\n      }\n      var matchedOption = this.findMatchedOption(authenticators, options);\n      if (matchedOption) {\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: \"getNextStep\",\n    value: function getNextStep() {\n      var _context;\n      var common = _get(_getPrototypeOf(SelectAuthenticator.prototype), \"getNextStep\", this).call(this);\n      var authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation);\n      var options = _mapInstanceProperty(_context = authenticatorFromRemediation.options).call(_context, function (option) {\n        var label = option.label,\n          relatesTo = option.relatesTo;\n        var key = relatesTo.key;\n        return {\n          label: label,\n          value: key\n        };\n      });\n      return _Object$assign(_Object$assign({}, common), {\n        options: options\n      });\n    }\n  }, {\n    key: \"mapAuthenticator\",\n    value: function mapAuthenticator(remediationValue) {\n      var _context2;\n      var _this$values2 = _valuesInstanceProperty(this),\n        authenticators = _this$values2.authenticators,\n        authenticator = _this$values2.authenticator;\n      if (isAuthenticator(authenticator) && authenticator.id) {\n        this.selectedAuthenticator = authenticator;\n        return authenticator;\n      }\n      var options = remediationValue.options;\n      var selectedOption = findMatchedOption(authenticators, options);\n      this.selectedAuthenticator = selectedOption.relatesTo;\n      this.selectedOption = selectedOption;\n      return {\n        id: selectedOption === null || selectedOption === void 0 ? void 0 : _findInstanceProperty(_context2 = selectedOption.value.form.value).call(_context2, function (_ref2) {\n          var name = _ref2.name;\n          return name === 'id';\n        }).value\n      };\n    }\n  }, {\n    key: \"getInputAuthenticator\",\n    value: function getInputAuthenticator() {\n      return {\n        name: 'authenticator',\n        key: 'string'\n      };\n    }\n  }, {\n    key: \"getValuesAfterProceed\",\n    value: function getValuesAfterProceed() {\n      var _context3,\n        _this = this;\n      this.values = _get(_getPrototypeOf(SelectAuthenticator.prototype), \"getValuesAfterProceed\", this).call(this);\n      var authenticators = _filterInstanceProperty(_context3 = _valuesInstanceProperty(this).authenticators).call(_context3, function (authenticator) {\n        return compareAuthenticators(authenticator, _this.selectedAuthenticator) !== true;\n      });\n      return _Object$assign(_Object$assign({}, _valuesInstanceProperty(this)), {\n        authenticators: authenticators\n      });\n    }\n  }]);\n  return SelectAuthenticator;\n}(Remediator);\nfunction _createSuper$8(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$8();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct$8() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar SelectAuthenticatorAuthenticate = function (_SelectAuthenticator) {\n  _inherits(SelectAuthenticatorAuthenticate, _SelectAuthenticator);\n  var _super = _createSuper$8(SelectAuthenticatorAuthenticate);\n  function SelectAuthenticatorAuthenticate(remediation) {\n    var _this;\n    var values = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    _classCallCheck(this, SelectAuthenticatorAuthenticate);\n    var _a;\n    _this = _super.call(this, remediation, values, options);\n    var isRecoveryFlow = _this.options.flow === 'recoverPassword';\n    var hasPasswordInOptions = (_a = getAuthenticatorFromRemediation(remediation).options) === null || _a === void 0 ? void 0 : _a.some(function (_ref) {\n      var relatesTo = _ref.relatesTo;\n      return (relatesTo === null || relatesTo === void 0 ? void 0 : relatesTo.key) === AuthenticatorKey.OKTA_PASSWORD;\n    });\n    if (hasPasswordInOptions && (isRecoveryFlow || _valuesInstanceProperty(_this).password)) {\n      var _context;\n      _valuesInstanceProperty(_this).authenticators = _concatInstanceProperty(_context = []).call(_context, _toConsumableArray(_valuesInstanceProperty(_this).authenticators || []), [{\n        key: AuthenticatorKey.OKTA_PASSWORD\n      }]);\n    }\n    return _this;\n  }\n  return SelectAuthenticatorAuthenticate;\n}(SelectAuthenticator);\nSelectAuthenticatorAuthenticate.remediationName = 'select-authenticator-authenticate';\nfunction _createSuper$7(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$7();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct$7() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar SelectAuthenticatorEnroll = function (_SelectAuthenticator) {\n  _inherits(SelectAuthenticatorEnroll, _SelectAuthenticator);\n  var _super = _createSuper$7(SelectAuthenticatorEnroll);\n  function SelectAuthenticatorEnroll() {\n    _classCallCheck(this, SelectAuthenticatorEnroll);\n    return _super.apply(this, arguments);\n  }\n  return SelectAuthenticatorEnroll;\n}(SelectAuthenticator);\nSelectAuthenticatorEnroll.remediationName = 'select-authenticator-enroll';\nfunction _createSuper$6(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$6();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct$6() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar SelectAuthenticatorUnlockAccount = function (_SelectAuthenticator) {\n  _inherits(SelectAuthenticatorUnlockAccount, _SelectAuthenticator);\n  var _super = _createSuper$6(SelectAuthenticatorUnlockAccount);\n  function SelectAuthenticatorUnlockAccount() {\n    var _this;\n    _classCallCheck(this, SelectAuthenticatorUnlockAccount);\n    _this = _super.apply(this, arguments);\n    _this.map = {\n      identifier: ['username']\n    };\n    return _this;\n  }\n  _createClass(SelectAuthenticatorUnlockAccount, [{\n    key: \"canRemediate\",\n    value: function canRemediate() {\n      var identifier = this.getData('identifier');\n      return !!identifier && _get(_getPrototypeOf(SelectAuthenticatorUnlockAccount.prototype), \"canRemediate\", this).call(this);\n    }\n  }, {\n    key: \"mapAuthenticator\",\n    value: function mapAuthenticator(remediationValue) {\n      var _context;\n      var _a, _b, _c;\n      var authenticatorMap = _get(_getPrototypeOf(SelectAuthenticatorUnlockAccount.prototype), \"mapAuthenticator\", this).call(this, remediationValue);\n      var methodTypeOption = (_a = this.selectedOption) === null || _a === void 0 ? void 0 : _findInstanceProperty(_context = _a.value.form.value).call(_context, function (_ref) {\n        var name = _ref.name;\n        return name === 'methodType';\n      });\n      var methodTypeValue = _valuesInstanceProperty(this).methodType || (methodTypeOption === null || methodTypeOption === void 0 ? void 0 : methodTypeOption.value) || ((_c = (_b = methodTypeOption === null || methodTypeOption === void 0 ? void 0 : methodTypeOption.options) === null || _b === void 0 ? void 0 : _b[0]) === null || _c === void 0 ? void 0 : _c.value);\n      if (methodTypeValue) {\n        return _Object$assign(_Object$assign({}, authenticatorMap), {\n          methodType: methodTypeValue\n        });\n      }\n      return authenticatorMap;\n    }\n  }, {\n    key: \"getInputUsername\",\n    value: function getInputUsername() {\n      return {\n        name: 'username',\n        key: 'string'\n      };\n    }\n  }]);\n  return SelectAuthenticatorUnlockAccount;\n}(SelectAuthenticator);\nSelectAuthenticatorUnlockAccount.remediationName = 'select-authenticator-unlock-account';\nfunction _createSuper$5(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$5();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct$5() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar SelectEnrollProfile = function (_Remediator) {\n  _inherits(SelectEnrollProfile, _Remediator);\n  var _super = _createSuper$5(SelectEnrollProfile);\n  function SelectEnrollProfile() {\n    _classCallCheck(this, SelectEnrollProfile);\n    return _super.apply(this, arguments);\n  }\n  _createClass(SelectEnrollProfile, [{\n    key: \"canRemediate\",\n    value: function canRemediate() {\n      return true;\n    }\n  }]);\n  return SelectEnrollProfile;\n}(Remediator);\nSelectEnrollProfile.remediationName = 'select-enroll-profile';\nfunction _createSuper$4(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$4();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct$4() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar AuthenticatorData = function (_Remediator) {\n  _inherits(AuthenticatorData, _Remediator);\n  var _super = _createSuper$4(AuthenticatorData);\n  function AuthenticatorData(remediation) {\n    var _this;\n    var values = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, AuthenticatorData);\n    _this = _super.call(this, remediation, values);\n    _this.authenticator = _this.getAuthenticator();\n    _this.formatAuthenticatorData();\n    return _this;\n  }\n  _createClass(AuthenticatorData, [{\n    key: \"formatAuthenticatorData\",\n    value: function formatAuthenticatorData() {\n      var _this2 = this;\n      var authenticatorData = this.getAuthenticatorData();\n      if (authenticatorData) {\n        var _context;\n        _valuesInstanceProperty(this).authenticatorsData = _mapInstanceProperty(_context = _valuesInstanceProperty(this).authenticatorsData).call(_context, function (data) {\n          if (compareAuthenticators(_this2.authenticator, data)) {\n            return _this2.mapAuthenticatorDataFromValues(data);\n          }\n          return data;\n        });\n      } else {\n        var data = this.mapAuthenticatorDataFromValues();\n        if (data) {\n          _valuesInstanceProperty(this).authenticatorsData.push(data);\n        }\n      }\n    }\n  }, {\n    key: \"getAuthenticatorData\",\n    value: function getAuthenticatorData() {\n      var _context2,\n        _this3 = this;\n      return _findInstanceProperty(_context2 = _valuesInstanceProperty(this).authenticatorsData).call(_context2, function (data) {\n        return compareAuthenticators(_this3.authenticator, data);\n      });\n    }\n  }, {\n    key: \"canRemediate\",\n    value: function canRemediate() {\n      var _this4 = this;\n      return _valuesInstanceProperty(this).authenticatorsData.some(function (data) {\n        return compareAuthenticators(_this4.authenticator, data);\n      });\n    }\n  }, {\n    key: \"getNextStep\",\n    value: function getNextStep() {\n      var common = _get(_getPrototypeOf(AuthenticatorData.prototype), \"getNextStep\", this).call(this);\n      var options = this.getMethodTypes();\n      return _Object$assign(_Object$assign({}, common), options && {\n        options: options\n      });\n    }\n  }, {\n    key: \"mapAuthenticatorDataFromValues\",\n    value: function mapAuthenticatorDataFromValues(authenticatorData) {\n      var _this$values = _valuesInstanceProperty(this),\n        methodType = _this$values.methodType,\n        authenticator = _this$values.authenticator;\n      if (!methodType && isAuthenticator(authenticator)) {\n        methodType = authenticator === null || authenticator === void 0 ? void 0 : authenticator.methodType;\n      }\n      var _this$authenticator = this.authenticator,\n        id = _this$authenticator.id,\n        enrollmentId = _this$authenticator.enrollmentId;\n      var data = _Object$assign(_Object$assign({\n        id: id,\n        enrollmentId: enrollmentId\n      }, authenticatorData && authenticatorData), methodType && {\n        methodType: methodType\n      });\n      return data.methodType ? data : null;\n    }\n  }, {\n    key: \"getAuthenticatorFromRemediation\",\n    value: function getAuthenticatorFromRemediation() {\n      var _context3;\n      var authenticator = _findInstanceProperty(_context3 = this.remediation.value).call(_context3, function (_ref) {\n        var name = _ref.name;\n        return name === 'authenticator';\n      });\n      return authenticator;\n    }\n  }, {\n    key: \"getMethodTypes\",\n    value: function getMethodTypes() {\n      var _context4;\n      var _a;\n      var authenticator = this.getAuthenticatorFromRemediation();\n      return (_a = _findInstanceProperty(_context4 = authenticator.form.value).call(_context4, function (_ref2) {\n        var name = _ref2.name;\n        return name === 'methodType';\n      })) === null || _a === void 0 ? void 0 : _a.options;\n    }\n  }, {\n    key: \"getValuesAfterProceed\",\n    value: function getValuesAfterProceed() {\n      var _context5,\n        _this5 = this;\n      this.values = _get(_getPrototypeOf(AuthenticatorData.prototype), \"getValuesAfterProceed\", this).call(this);\n      var authenticatorsData = _filterInstanceProperty(_context5 = _valuesInstanceProperty(this).authenticatorsData).call(_context5, function (data) {\n        return compareAuthenticators(_this5.authenticator, data) !== true;\n      });\n      return _Object$assign(_Object$assign({}, _valuesInstanceProperty(this)), {\n        authenticatorsData: authenticatorsData\n      });\n    }\n  }]);\n  return AuthenticatorData;\n}(Remediator);\nfunction _createSuper$3(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$3();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct$3() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar AuthenticatorVerificationData = function (_AuthenticatorData) {\n  _inherits(AuthenticatorVerificationData, _AuthenticatorData);\n  var _super = _createSuper$3(AuthenticatorVerificationData);\n  function AuthenticatorVerificationData(remediation) {\n    var _this;\n    var values = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    _classCallCheck(this, AuthenticatorVerificationData);\n    _this = _super.call(this, remediation, values);\n    _this.shouldProceedWithEmailAuthenticator = options.shouldProceedWithEmailAuthenticator !== false && _this.authenticator.methods.length === 1 && _this.authenticator.methods[0].type === 'email';\n    return _this;\n  }\n  _createClass(AuthenticatorVerificationData, [{\n    key: \"canRemediate\",\n    value: function canRemediate() {\n      if (this.shouldProceedWithEmailAuthenticator !== false) {\n        return true;\n      }\n      return _get(_getPrototypeOf(AuthenticatorVerificationData.prototype), \"canRemediate\", this).call(this);\n    }\n  }, {\n    key: \"mapAuthenticator\",\n    value: function mapAuthenticator() {\n      var _a;\n      if (this.shouldProceedWithEmailAuthenticator !== false) {\n        var _context;\n        var authenticatorFromRemediation = this.getAuthenticatorFromRemediation();\n        return (_a = authenticatorFromRemediation.form) === null || _a === void 0 ? void 0 : _reduceInstanceProperty(_context = _a.value).call(_context, function (acc, curr) {\n          if (curr.value) {\n            acc[curr.name] = curr.value;\n          } else if (curr.options) {\n            acc[curr.name] = curr.options[0].value;\n          } else {\n            throw new AuthSdkError(\"Unsupported authenticator data type: \".concat(curr));\n          }\n          return acc;\n        }, {});\n      }\n      return this.getAuthenticatorData();\n    }\n  }, {\n    key: \"getInputAuthenticator\",\n    value: function getInputAuthenticator() {\n      var _context2;\n      var authenticator = this.getAuthenticatorFromRemediation();\n      var methodType = _findInstanceProperty(_context2 = authenticator.form.value).call(_context2, function (_ref) {\n        var name = _ref.name;\n        return name === 'methodType';\n      });\n      if (methodType && methodType.options) {\n        return {\n          name: 'methodType',\n          type: 'string',\n          required: true\n        };\n      }\n      var inputs = _toConsumableArray(authenticator.form.value);\n      return inputs;\n    }\n  }, {\n    key: \"getValuesAfterProceed\",\n    value: function getValuesAfterProceed() {\n      var _context3,\n        _this2 = this;\n      this.values = _get(_getPrototypeOf(AuthenticatorVerificationData.prototype), \"getValuesAfterProceed\", this).call(this);\n      var trimmedValues = _filterInstanceProperty(_context3 = _Object$keys(_valuesInstanceProperty(this))).call(_context3, function (valueKey) {\n        return valueKey !== 'authenticator';\n      });\n      return _reduceInstanceProperty(trimmedValues).call(trimmedValues, function (values, valueKey) {\n        return _Object$assign(_Object$assign({}, values), _defineProperty({}, valueKey, _valuesInstanceProperty(_this2)[valueKey]));\n      }, {});\n    }\n  }]);\n  return AuthenticatorVerificationData;\n}(AuthenticatorData);\nAuthenticatorVerificationData.remediationName = 'authenticator-verification-data';\nfunction _createSuper$2(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$2();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct$2() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar AuthenticatorEnrollmentData = function (_AuthenticatorData) {\n  _inherits(AuthenticatorEnrollmentData, _AuthenticatorData);\n  var _super = _createSuper$2(AuthenticatorEnrollmentData);\n  function AuthenticatorEnrollmentData() {\n    _classCallCheck(this, AuthenticatorEnrollmentData);\n    return _super.apply(this, arguments);\n  }\n  _createClass(AuthenticatorEnrollmentData, [{\n    key: \"mapAuthenticator\",\n    value: function mapAuthenticator() {\n      var _context;\n      var authenticatorData = this.getAuthenticatorData();\n      var authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation);\n      return {\n        id: _findInstanceProperty(_context = authenticatorFromRemediation.form.value).call(_context, function (_ref) {\n          var name = _ref.name;\n          return name === 'id';\n        }).value,\n        methodType: authenticatorData.methodType,\n        phoneNumber: authenticatorData.phoneNumber\n      };\n    }\n  }, {\n    key: \"getInputAuthenticator\",\n    value: function getInputAuthenticator() {\n      return [{\n        name: 'methodType',\n        type: 'string',\n        required: true\n      }, {\n        name: 'phoneNumber',\n        type: 'string',\n        required: true,\n        label: 'Phone Number'\n      }];\n    }\n  }, {\n    key: \"mapAuthenticatorDataFromValues\",\n    value: function mapAuthenticatorDataFromValues(data) {\n      data = _get(_getPrototypeOf(AuthenticatorEnrollmentData.prototype), \"mapAuthenticatorDataFromValues\", this).call(this, data);\n      var phoneNumber = _valuesInstanceProperty(this).phoneNumber;\n      if (!data && !phoneNumber) {\n        return;\n      }\n      return _Object$assign(_Object$assign({}, data && data), phoneNumber && {\n        phoneNumber: phoneNumber\n      });\n    }\n  }]);\n  return AuthenticatorEnrollmentData;\n}(AuthenticatorData);\nAuthenticatorEnrollmentData.remediationName = 'authenticator-enrollment-data';\nfunction _createSuper$1(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$1();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct$1() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar Skip = function (_Remediator) {\n  _inherits(Skip, _Remediator);\n  var _super = _createSuper$1(Skip);\n  function Skip() {\n    _classCallCheck(this, Skip);\n    return _super.apply(this, arguments);\n  }\n  _createClass(Skip, [{\n    key: \"canRemediate\",\n    value: function canRemediate() {\n      return !!_valuesInstanceProperty(this).skip || this.options.step === 'skip';\n    }\n  }]);\n  return Skip;\n}(Remediator);\nSkip.remediationName = 'skip';\nvar remediators = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Remediator: Remediator,\n  EnrollAuthenticator: EnrollAuthenticator,\n  EnrollPoll: EnrollPoll,\n  SelectEnrollmentChannel: SelectEnrollmentChannel,\n  EnrollmentChannelData: EnrollmentChannelData,\n  ChallengeAuthenticator: ChallengeAuthenticator,\n  ChallengePoll: ChallengePoll,\n  ResetAuthenticator: ResetAuthenticator,\n  EnrollProfile: EnrollProfile,\n  Identify: Identify,\n  ReEnrollAuthenticator: ReEnrollAuthenticator,\n  RedirectIdp: RedirectIdp,\n  SelectAuthenticatorAuthenticate: SelectAuthenticatorAuthenticate,\n  SelectAuthenticatorEnroll: SelectAuthenticatorEnroll,\n  SelectAuthenticatorUnlockAccount: SelectAuthenticatorUnlockAccount,\n  SelectEnrollProfile: SelectEnrollProfile,\n  AuthenticatorVerificationData: AuthenticatorVerificationData,\n  AuthenticatorEnrollmentData: AuthenticatorEnrollmentData,\n  Skip: Skip\n});\nfunction _createForOfIteratorHelper$1(o, allowArrayLike) {\n  var it = typeof _Symbol !== \"undefined\" && _getIteratorMethod(o) || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$1(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _unsupportedIterableToArray$1(o, minLen) {\n  var _context12;\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$1(o, minLen);\n  var n = _sliceInstanceProperty(_context12 = Object.prototype.toString.call(o)).call(_context12, 8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return _Array$from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$1(o, minLen);\n}\nfunction _arrayLikeToArray$1(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nfunction isTerminalResponse(idxResponse) {\n  var neededToProceed = idxResponse.neededToProceed,\n    interactionCode = idxResponse.interactionCode;\n  return !neededToProceed.length && !interactionCode;\n}\nfunction canSkipFn(idxResponse) {\n  return idxResponse.neededToProceed.some(function (_ref) {\n    var name = _ref.name;\n    return name === 'skip';\n  });\n}\nfunction canResendFn(idxResponse) {\n  return _Object$keys(idxResponse.actions).some(function (actionName) {\n    return _includesInstanceProperty(actionName).call(actionName, 'resend');\n  });\n}\nfunction getMessagesFromIdxRemediationValue(value) {\n  if (!value || !Array.isArray(value)) {\n    return;\n  }\n  return _reduceInstanceProperty(value).call(value, function (messages, value) {\n    if (value.messages) {\n      var _context;\n      messages = _concatInstanceProperty(_context = []).call(_context, _toConsumableArray(messages), _toConsumableArray(value.messages.value));\n    }\n    if (value.form) {\n      var _context2;\n      var messagesFromForm = getMessagesFromIdxRemediationValue(value.form.value) || [];\n      messages = _concatInstanceProperty(_context2 = []).call(_context2, _toConsumableArray(messages), _toConsumableArray(messagesFromForm));\n    }\n    if (value.options) {\n      var _context4;\n      var optionValues = [];\n      value.options.forEach(function (option) {\n        var _context3;\n        if (!option.value || typeof option.value === 'string') {\n          return;\n        }\n        optionValues = _concatInstanceProperty(_context3 = []).call(_context3, _toConsumableArray(optionValues), [option.value]);\n      });\n      var messagesFromOptions = getMessagesFromIdxRemediationValue(optionValues) || [];\n      messages = _concatInstanceProperty(_context4 = []).call(_context4, _toConsumableArray(messages), _toConsumableArray(messagesFromOptions));\n    }\n    return messages;\n  }, []);\n}\nfunction getMessagesFromResponse(idxResponse) {\n  var _context5;\n  var _a;\n  var messages = [];\n  var rawIdxState = idxResponse.rawIdxState,\n    neededToProceed = idxResponse.neededToProceed;\n  var globalMessages = (_a = rawIdxState.messages) === null || _a === void 0 ? void 0 : _mapInstanceProperty(_context5 = _a.value).call(_context5, function (message) {\n    return message;\n  });\n  if (globalMessages) {\n    var _context6;\n    messages = _concatInstanceProperty(_context6 = []).call(_context6, _toConsumableArray(messages), _toConsumableArray(globalMessages));\n  }\n  var _iterator = _createForOfIteratorHelper$1(neededToProceed),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var remediation = _step.value;\n      var fieldMessages = getMessagesFromIdxRemediationValue(remediation.value);\n      if (fieldMessages) {\n        var _context8;\n        messages = _concatInstanceProperty(_context8 = []).call(_context8, _toConsumableArray(messages), _toConsumableArray(fieldMessages));\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  var seen = {};\n  messages = _reduceInstanceProperty(messages).call(messages, function (filtered, message) {\n    var _context7;\n    var _a;\n    var key = (_a = message.i18n) === null || _a === void 0 ? void 0 : _a.key;\n    if (key && seen[key]) {\n      return filtered;\n    }\n    seen[key] = message;\n    filtered = _concatInstanceProperty(_context7 = []).call(_context7, _toConsumableArray(filtered), [message]);\n    return filtered;\n  }, []);\n  return messages;\n}\nfunction getEnabledFeatures(idxResponse) {\n  var res = [];\n  var actions = idxResponse.actions,\n    neededToProceed = idxResponse.neededToProceed;\n  if (actions['currentAuthenticator-recover']) {\n    res.push(IdxFeature.PASSWORD_RECOVERY);\n  }\n  if (neededToProceed.some(function (_ref2) {\n    var name = _ref2.name;\n    return name === 'select-enroll-profile';\n  })) {\n    res.push(IdxFeature.REGISTRATION);\n  }\n  if (neededToProceed.some(function (_ref3) {\n    var name = _ref3.name;\n    return name === 'redirect-idp';\n  })) {\n    res.push(IdxFeature.SOCIAL_IDP);\n  }\n  if (neededToProceed.some(function (_ref4) {\n    var name = _ref4.name;\n    return name === 'unlock-account';\n  })) {\n    res.push(IdxFeature.ACCOUNT_UNLOCK);\n  }\n  return res;\n}\nfunction getAvailableSteps(idxResponse) {\n  var _context9;\n  var res = [];\n  var remediatorMap = _reduceInstanceProperty(_context9 = _Object$values(remediators)).call(_context9, function (map, remediatorClass) {\n    if (remediatorClass.remediationName) {\n      map[remediatorClass.remediationName] = remediatorClass;\n    }\n    return map;\n  }, {});\n  var _iterator2 = _createForOfIteratorHelper$1(idxResponse.neededToProceed),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var remediation = _step2.value;\n      var T = remediatorMap[remediation.name];\n      if (T) {\n        var remediator = new T(remediation);\n        res.push(remediator.getNextStep(idxResponse.context));\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n  return res;\n}\nfunction filterValuesForRemediation(idxResponse, remediationName, values) {\n  var _context10;\n  var remediations = idxResponse.neededToProceed || [];\n  var remediation = _findInstanceProperty(remediations).call(remediations, function (r) {\n    return r.name === remediationName;\n  });\n  if (!remediation) {\n    warn(\"filterValuesForRemediation: \\\"\".concat(remediationName, \"\\\" did not match any remediations\"));\n    return values;\n  }\n  var valuesForRemediation = _reduceInstanceProperty(_context10 = remediation.value).call(_context10, function (res, entry) {\n    var name = entry.name,\n      value = entry.value;\n    if (name === 'stateHandle') {\n      res[name] = value;\n    } else {\n      res[name] = values[name];\n    }\n    return res;\n  }, {});\n  return valuesForRemediation;\n}\nfunction getRemediator(idxRemediations, values, options) {\n  var remediators = options.remediators;\n  var remediator;\n  if (options.step) {\n    var remediation = _findInstanceProperty(idxRemediations).call(idxRemediations, function (_ref5) {\n      var name = _ref5.name;\n      return name === options.step;\n    });\n    if (remediation) {\n      var T = remediation ? remediators[remediation.name] : undefined;\n      return T ? new T(remediation, values, options) : undefined;\n    } else {\n      warn(\"step \\\"\".concat(options.step, \"\\\" did not match any remediations\"));\n      return;\n    }\n  }\n  var remediatorCandidates = [];\n  var _iterator3 = _createForOfIteratorHelper$1(idxRemediations),\n    _step3;\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var _context11;\n      var _remediation = _step3.value;\n      var isRemeditionInFlow = _includesInstanceProperty(_context11 = _Object$keys(remediators)).call(_context11, _remediation.name);\n      if (!isRemeditionInFlow) {\n        continue;\n      }\n      var _T = remediators[_remediation.name];\n      remediator = new _T(_remediation, values, options);\n      if (remediator.canRemediate()) {\n        return remediator;\n      }\n      remediatorCandidates.push(remediator);\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n  return remediatorCandidates[0];\n}\nfunction getNextStep(remediator, idxResponse) {\n  var nextStep = remediator.getNextStep(idxResponse.context);\n  var canSkip = canSkipFn(idxResponse);\n  var canResend = canResendFn(idxResponse);\n  return _Object$assign(_Object$assign(_Object$assign({}, nextStep), canSkip && {\n    canSkip: canSkip\n  }), canResend && {\n    canResend: canResend\n  });\n}\nfunction handleIdxError(e, remediator) {\n  var idxResponse = isIdxResponse(e) ? e : null;\n  if (!idxResponse) {\n    throw e;\n  }\n  idxResponse = _Object$assign(_Object$assign({}, idxResponse), {\n    requestDidSucceed: false\n  });\n  var terminal = isTerminalResponse(idxResponse);\n  var messages = getMessagesFromResponse(idxResponse);\n  if (terminal) {\n    return {\n      idxResponse: idxResponse,\n      terminal: terminal,\n      messages: messages\n    };\n  } else {\n    var nextStep = remediator && getNextStep(remediator, idxResponse);\n    return _Object$assign({\n      idxResponse: idxResponse,\n      messages: messages\n    }, nextStep && {\n      nextStep: nextStep\n    });\n  }\n}\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof _Symbol !== \"undefined\" && _getIteratorMethod(o) || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  var _context5;\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = _sliceInstanceProperty(_context5 = Object.prototype.toString.call(o)).call(_context5, 8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return _Array$from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nfunction getActionFromValues(values, idxResponse) {\n  var _context;\n  return _findInstanceProperty(_context = _Object$keys(idxResponse.actions)).call(_context, function (action) {\n    return !!values.resend && _includesInstanceProperty(action).call(action, '-resend');\n  });\n}\nfunction removeActionFromValues(values) {\n  return _Object$assign(_Object$assign({}, values), {\n    resend: undefined\n  });\n}\nfunction removeActionFromOptions(options, actionName) {\n  var actions = options.actions || [];\n  actions = _filterInstanceProperty(actions).call(actions, function (entry) {\n    if (typeof entry === 'string') {\n      return entry !== actionName;\n    }\n    return entry.name !== actionName;\n  });\n  return _Object$assign(_Object$assign({}, options), {\n    actions: actions\n  });\n}\nfunction remediate(_x, _x2, _x3) {\n  return _remediate.apply(this, arguments);\n}\nfunction _remediate() {\n  _remediate = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(idxResponse, values, options) {\n    var _context2;\n    var _idxResponse, neededToProceed, interactionCode, _options, flow, remediator, actionFromValues, actionFromOptions, actions, _iterator, _step, _loop, _ret, terminal, messages, nextStep, name, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _idxResponse = idxResponse, neededToProceed = _idxResponse.neededToProceed, interactionCode = _idxResponse.interactionCode;\n            _options = options, flow = _options.flow;\n            if (!interactionCode) {\n              _context4.next = 4;\n              break;\n            }\n            return _context4.abrupt(\"return\", {\n              idxResponse: idxResponse\n            });\n          case 4:\n            remediator = getRemediator(neededToProceed, values, options);\n            actionFromValues = getActionFromValues(values, idxResponse);\n            actionFromOptions = options.actions || [];\n            actions = _concatInstanceProperty(_context2 = []).call(_context2, _toConsumableArray(actionFromOptions), _toConsumableArray(actionFromValues && [actionFromValues] || []));\n            if (!actions) {\n              _context4.next = 28;\n              break;\n            }\n            _iterator = _createForOfIteratorHelper(actions);\n            _context4.prev = 10;\n            _loop = _regeneratorRuntime.mark(function _loop() {\n              var action, params, valuesWithoutExecutedAction, optionsWithoutExecutedAction, remediationAction;\n              return _regeneratorRuntime.wrap(function _loop$(_context3) {\n                while (1) {\n                  switch (_context3.prev = _context3.next) {\n                    case 0:\n                      action = _step.value;\n                      params = {};\n                      if (typeof action !== 'string') {\n                        params = action.params || {};\n                        action = action.name;\n                      }\n                      valuesWithoutExecutedAction = removeActionFromValues(values);\n                      optionsWithoutExecutedAction = removeActionFromOptions(options, action);\n                      if (!(typeof idxResponse.actions[action] === 'function')) {\n                        _context3.next = 19;\n                        break;\n                      }\n                      _context3.prev = 6;\n                      _context3.next = 9;\n                      return idxResponse.actions[action](params);\n                    case 9:\n                      idxResponse = _context3.sent;\n                      idxResponse = _Object$assign(_Object$assign({}, idxResponse), {\n                        requestDidSucceed: true\n                      });\n                      _context3.next = 16;\n                      break;\n                    case 13:\n                      _context3.prev = 13;\n                      _context3.t0 = _context3[\"catch\"](6);\n                      return _context3.abrupt(\"return\", {\n                        v: handleIdxError(_context3.t0, remediator)\n                      });\n                    case 16:\n                      if (!(action === 'cancel')) {\n                        _context3.next = 18;\n                        break;\n                      }\n                      return _context3.abrupt(\"return\", {\n                        v: {\n                          idxResponse: idxResponse,\n                          canceled: true\n                        }\n                      });\n                    case 18:\n                      return _context3.abrupt(\"return\", {\n                        v: remediate(idxResponse, valuesWithoutExecutedAction, optionsWithoutExecutedAction)\n                      });\n                    case 19:\n                      remediationAction = _findInstanceProperty(neededToProceed).call(neededToProceed, function (_ref) {\n                        var name = _ref.name;\n                        return name === action;\n                      });\n                      if (!remediationAction) {\n                        _context3.next = 32;\n                        break;\n                      }\n                      _context3.prev = 21;\n                      _context3.next = 24;\n                      return idxResponse.proceed(action, params);\n                    case 24:\n                      idxResponse = _context3.sent;\n                      idxResponse = _Object$assign(_Object$assign({}, idxResponse), {\n                        requestDidSucceed: true\n                      });\n                      _context3.next = 31;\n                      break;\n                    case 28:\n                      _context3.prev = 28;\n                      _context3.t1 = _context3[\"catch\"](21);\n                      return _context3.abrupt(\"return\", {\n                        v: handleIdxError(_context3.t1, remediator)\n                      });\n                    case 31:\n                      return _context3.abrupt(\"return\", {\n                        v: remediate(idxResponse, values, optionsWithoutExecutedAction)\n                      });\n                    case 32:\n                    case \"end\":\n                      return _context3.stop();\n                  }\n                }\n              }, _loop, null, [[6, 13], [21, 28]]);\n            });\n            _iterator.s();\n          case 13:\n            if ((_step = _iterator.n()).done) {\n              _context4.next = 20;\n              break;\n            }\n            return _context4.delegateYield(_loop(), \"t0\", 15);\n          case 15:\n            _ret = _context4.t0;\n            if (!(_typeof(_ret) === \"object\")) {\n              _context4.next = 18;\n              break;\n            }\n            return _context4.abrupt(\"return\", _ret.v);\n          case 18:\n            _context4.next = 13;\n            break;\n          case 20:\n            _context4.next = 25;\n            break;\n          case 22:\n            _context4.prev = 22;\n            _context4.t1 = _context4[\"catch\"](10);\n            _iterator.e(_context4.t1);\n          case 25:\n            _context4.prev = 25;\n            _iterator.f();\n            return _context4.finish(25);\n          case 28:\n            terminal = isTerminalResponse(idxResponse);\n            messages = getMessagesFromResponse(idxResponse);\n            if (!terminal) {\n              _context4.next = 32;\n              break;\n            }\n            return _context4.abrupt(\"return\", {\n              idxResponse: idxResponse,\n              terminal: terminal,\n              messages: messages\n            });\n          case 32:\n            if (remediator) {\n              _context4.next = 49;\n              break;\n            }\n            if (!options.step) {\n              _context4.next = 46;\n              break;\n            }\n            values = filterValuesForRemediation(idxResponse, options.step, values);\n            _context4.prev = 35;\n            _context4.next = 38;\n            return idxResponse.proceed(options.step, values);\n          case 38:\n            idxResponse = _context4.sent;\n            idxResponse = _Object$assign(_Object$assign({}, idxResponse), {\n              requestDidSucceed: true\n            });\n            return _context4.abrupt(\"return\", {\n              idxResponse: idxResponse\n            });\n          case 43:\n            _context4.prev = 43;\n            _context4.t2 = _context4[\"catch\"](35);\n            return _context4.abrupt(\"return\", handleIdxError(_context4.t2));\n          case 46:\n            if (!(flow === 'default')) {\n              _context4.next = 48;\n              break;\n            }\n            return _context4.abrupt(\"return\", {\n              idxResponse: idxResponse\n            });\n          case 48:\n            throw new AuthSdkError(\"\\n      No remediation can match current flow, check policy settings in your org.\\n      Remediations: [\".concat(_reduceInstanceProperty(neededToProceed).call(neededToProceed, function (acc, curr) {\n              return acc ? acc + ' ,' + curr.name : curr.name;\n            }, ''), \"]\\n    \"));\n          case 49:\n            if (remediator.canRemediate()) {\n              _context4.next = 52;\n              break;\n            }\n            nextStep = getNextStep(remediator, idxResponse);\n            return _context4.abrupt(\"return\", {\n              idxResponse: idxResponse,\n              nextStep: nextStep,\n              messages: messages.length ? messages : undefined\n            });\n          case 52:\n            name = remediator.getName();\n            data = remediator.getData();\n            _context4.prev = 54;\n            _context4.next = 57;\n            return idxResponse.proceed(name, data);\n          case 57:\n            idxResponse = _context4.sent;\n            idxResponse = _Object$assign(_Object$assign({}, idxResponse), {\n              requestDidSucceed: true\n            });\n            values = remediator.getValuesAfterProceed();\n            options = _Object$assign(_Object$assign({}, options), {\n              step: undefined\n            });\n            return _context4.abrupt(\"return\", remediate(idxResponse, values, options));\n          case 64:\n            _context4.prev = 64;\n            _context4.t3 = _context4[\"catch\"](54);\n            return _context4.abrupt(\"return\", handleIdxError(_context4.t3, remediator));\n          case 67:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee, null, [[10, 22, 25, 28], [35, 43], [54, 64]]);\n  }));\n  return _remediate.apply(this, arguments);\n}\nvar AuthenticationFlow = {\n  'identify': Identify,\n  'select-authenticator-authenticate': SelectAuthenticatorAuthenticate,\n  'select-authenticator-enroll': SelectAuthenticatorEnroll,\n  'authenticator-enrollment-data': AuthenticatorEnrollmentData,\n  'authenticator-verification-data': AuthenticatorVerificationData,\n  'enroll-authenticator': EnrollAuthenticator,\n  'challenge-authenticator': ChallengeAuthenticator,\n  'challenge-poll': ChallengePoll,\n  'reenroll-authenticator': ReEnrollAuthenticator,\n  'enroll-poll': EnrollPoll,\n  'redirect-idp': RedirectIdp,\n  'skip': Skip\n};\nvar PasswordRecoveryFlow = {\n  'identify': Identify,\n  'identify-recovery': Identify,\n  'select-authenticator-authenticate': SelectAuthenticatorAuthenticate,\n  'select-authenticator-enroll': SelectAuthenticatorEnroll,\n  'challenge-authenticator': ChallengeAuthenticator,\n  'authenticator-verification-data': AuthenticatorVerificationData,\n  'authenticator-enrollment-data': AuthenticatorEnrollmentData,\n  'reset-authenticator': ResetAuthenticator,\n  'reenroll-authenticator': ReEnrollAuthenticator,\n  'enroll-poll': EnrollPoll\n};\nvar RegistrationFlow = {\n  'select-enroll-profile': SelectEnrollProfile,\n  'enroll-profile': EnrollProfile,\n  'authenticator-enrollment-data': AuthenticatorEnrollmentData,\n  'select-authenticator-enroll': SelectAuthenticatorEnroll,\n  'enroll-poll': EnrollPoll,\n  'select-enrollment-channel': SelectEnrollmentChannel,\n  'enrollment-channel-data': EnrollmentChannelData,\n  'enroll-authenticator': EnrollAuthenticator,\n  'skip': Skip\n};\nvar AccountUnlockFlow = {\n  'identify': Identify,\n  'select-authenticator-unlock-account': SelectAuthenticatorUnlockAccount,\n  'select-authenticator-authenticate': SelectAuthenticatorAuthenticate,\n  'challenge-authenticator': ChallengeAuthenticator,\n  'challenge-poll': ChallengePoll,\n  'authenticator-verification-data': AuthenticatorVerificationData\n};\nfunction getFlowSpecification(oktaAuth) {\n  var flow = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n  var remediators,\n    actions,\n    withCredentials = true;\n  switch (flow) {\n    case 'register':\n    case 'signup':\n    case 'enrollProfile':\n      remediators = RegistrationFlow;\n      withCredentials = false;\n      break;\n    case 'recoverPassword':\n    case 'resetPassword':\n      remediators = PasswordRecoveryFlow;\n      actions = ['currentAuthenticator-recover', 'currentAuthenticatorEnrollment-recover'];\n      withCredentials = false;\n      break;\n    case 'unlockAccount':\n      remediators = AccountUnlockFlow;\n      withCredentials = false;\n      actions = ['unlock-account'];\n      break;\n    case 'authenticate':\n    case 'login':\n    case 'signin':\n      remediators = AuthenticationFlow;\n      break;\n    default:\n      remediators = AuthenticationFlow;\n      break;\n  }\n  return {\n    flow: flow,\n    remediators: remediators,\n    actions: actions,\n    withCredentials: withCredentials\n  };\n}\nfunction initializeValues(options) {\n  var knownOptions = ['flow', 'remediators', 'actions', 'withCredentials', 'step', 'shouldProceedWithEmailAuthenticator'];\n  var values = _Object$assign({}, options);\n  knownOptions.forEach(function (option) {\n    delete values[option];\n  });\n  return values;\n}\nfunction initializeData(authClient, data) {\n  var options = data.options;\n  var flow = options.flow,\n    withCredentials = options.withCredentials,\n    remediators = options.remediators,\n    actions = options.actions;\n  var status = IdxStatus.PENDING;\n  flow = flow || authClient.idx.getFlow() || 'default';\n  if (flow) {\n    authClient.idx.setFlow(flow);\n    var flowSpec = getFlowSpecification(authClient, flow);\n    withCredentials = typeof withCredentials !== 'undefined' ? withCredentials : flowSpec.withCredentials;\n    remediators = remediators || flowSpec.remediators;\n    actions = actions || flowSpec.actions;\n  }\n  return _Object$assign(_Object$assign({}, data), {\n    options: _Object$assign(_Object$assign({}, options), {\n      flow: flow,\n      withCredentials: withCredentials,\n      remediators: remediators,\n      actions: actions\n    }),\n    status: status\n  });\n}\nfunction getDataFromIntrospect(_x, _x2) {\n  return _getDataFromIntrospect.apply(this, arguments);\n}\nfunction _getDataFromIntrospect() {\n  _getDataFromIntrospect = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(authClient, data) {\n    var options, stateHandle, withCredentials, version, state, scopes, recoveryToken, activationToken, idxResponse, meta, interactionHandle, interactResponse;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            options = data.options;\n            stateHandle = options.stateHandle, withCredentials = options.withCredentials, version = options.version, state = options.state, scopes = options.scopes, recoveryToken = options.recoveryToken, activationToken = options.activationToken;\n            meta = getSavedTransactionMeta(authClient, {\n              state: state,\n              recoveryToken: recoveryToken,\n              activationToken: activationToken\n            });\n            if (!stateHandle) {\n              _context.next = 9;\n              break;\n            }\n            _context.next = 6;\n            return introspect(authClient, {\n              withCredentials: withCredentials,\n              version: version,\n              stateHandle: stateHandle\n            });\n          case 6:\n            idxResponse = _context.sent;\n            _context.next = 20;\n            break;\n          case 9:\n            interactionHandle = meta === null || meta === void 0 ? void 0 : meta.interactionHandle;\n            if (interactionHandle) {\n              _context.next = 17;\n              break;\n            }\n            authClient.transactionManager.clear();\n            _context.next = 14;\n            return interact(authClient, {\n              withCredentials: withCredentials,\n              state: state,\n              scopes: scopes,\n              activationToken: activationToken,\n              recoveryToken: recoveryToken\n            });\n          case 14:\n            interactResponse = _context.sent;\n            interactionHandle = interactResponse.interactionHandle;\n            meta = interactResponse.meta;\n          case 17:\n            _context.next = 19;\n            return introspect(authClient, {\n              withCredentials: withCredentials,\n              version: version,\n              interactionHandle: interactionHandle\n            });\n          case 19:\n            idxResponse = _context.sent;\n          case 20:\n            return _context.abrupt(\"return\", _Object$assign(_Object$assign({}, data), {\n              idxResponse: idxResponse,\n              meta: meta\n            }));\n          case 21:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getDataFromIntrospect.apply(this, arguments);\n}\nfunction getDataFromRemediate(_x3) {\n  return _getDataFromRemediate.apply(this, arguments);\n}\nfunction _getDataFromRemediate() {\n  _getDataFromRemediate = _asyncToGenerator(_regeneratorRuntime.mark(function _callee2(data) {\n    var idxResponse, options, values, autoRemediate, remediators, actions, flow, step, shouldProceedWithEmailAuthenticator, shouldRemediate, _yield$remediate, idxResponseFromRemediation, nextStep, canceled;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            idxResponse = data.idxResponse, options = data.options, values = _valuesInstanceProperty(data);\n            autoRemediate = options.autoRemediate, remediators = options.remediators, actions = options.actions, flow = options.flow, step = options.step, shouldProceedWithEmailAuthenticator = options.shouldProceedWithEmailAuthenticator;\n            shouldRemediate = autoRemediate !== false && (remediators || actions || step);\n            if (shouldRemediate) {\n              _context2.next = 5;\n              break;\n            }\n            return _context2.abrupt(\"return\", data);\n          case 5:\n            values = _Object$assign(_Object$assign({}, values), {\n              stateHandle: idxResponse.rawIdxState.stateHandle\n            });\n            _context2.next = 8;\n            return remediate(idxResponse, values, {\n              remediators: remediators,\n              actions: actions,\n              flow: flow,\n              step: step,\n              shouldProceedWithEmailAuthenticator: shouldProceedWithEmailAuthenticator\n            });\n          case 8:\n            _yield$remediate = _context2.sent;\n            idxResponseFromRemediation = _yield$remediate.idxResponse;\n            nextStep = _yield$remediate.nextStep;\n            canceled = _yield$remediate.canceled;\n            idxResponse = idxResponseFromRemediation;\n            return _context2.abrupt(\"return\", _Object$assign(_Object$assign({}, data), {\n              idxResponse: idxResponse,\n              nextStep: nextStep,\n              canceled: canceled\n            }));\n          case 14:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getDataFromRemediate.apply(this, arguments);\n}\nfunction getTokens(_x4, _x5) {\n  return _getTokens.apply(this, arguments);\n}\nfunction _getTokens() {\n  _getTokens = _asyncToGenerator(_regeneratorRuntime.mark(function _callee3(authClient, data) {\n    var meta, idxResponse, interactionCode, clientId, codeVerifier, ignoreSignature, redirectUri, urls, scopes, tokenResponse;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            meta = data.meta, idxResponse = data.idxResponse;\n            interactionCode = idxResponse.interactionCode;\n            clientId = meta.clientId, codeVerifier = meta.codeVerifier, ignoreSignature = meta.ignoreSignature, redirectUri = meta.redirectUri, urls = meta.urls, scopes = meta.scopes;\n            _context3.next = 5;\n            return authClient.token.exchangeCodeForTokens({\n              interactionCode: interactionCode,\n              clientId: clientId,\n              codeVerifier: codeVerifier,\n              ignoreSignature: ignoreSignature,\n              redirectUri: redirectUri,\n              scopes: scopes\n            }, urls);\n          case 5:\n            tokenResponse = _context3.sent;\n            return _context3.abrupt(\"return\", tokenResponse.tokens);\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _getTokens.apply(this, arguments);\n}\nfunction finalizeData(_x6, _x7) {\n  return _finalizeData.apply(this, arguments);\n}\nfunction _finalizeData() {\n  _finalizeData = _asyncToGenerator(_regeneratorRuntime.mark(function _callee4(authClient, data) {\n    var options, idxResponse, canceled, status, exchangeCodeForTokens, shouldSaveResponse, shouldClearTransaction, clearSharedStorage, interactionCode, tokens, enabledFeatures, availableSteps, messages, terminal, hasActions, hasErrors, isTerminalSuccess;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            options = data.options, idxResponse = data.idxResponse, canceled = data.canceled, status = data.status;\n            exchangeCodeForTokens = options.exchangeCodeForTokens;\n            shouldSaveResponse = false;\n            shouldClearTransaction = false;\n            clearSharedStorage = true;\n            if (idxResponse) {\n              shouldSaveResponse = !!(idxResponse.requestDidSucceed || idxResponse.stepUp);\n              enabledFeatures = getEnabledFeatures(idxResponse);\n              availableSteps = getAvailableSteps(idxResponse);\n              messages = getMessagesFromResponse(idxResponse);\n              terminal = isTerminalResponse(idxResponse);\n            }\n            if (!terminal) {\n              _context4.next = 15;\n              break;\n            }\n            status = IdxStatus.TERMINAL;\n            hasActions = _Object$keys(idxResponse.actions).length > 0;\n            hasErrors = !!_findInstanceProperty(messages).call(messages, function (msg) {\n              return msg.class === 'ERROR';\n            });\n            isTerminalSuccess = !hasActions && !hasErrors && idxResponse.requestDidSucceed === true;\n            if (isTerminalSuccess) {\n              shouldClearTransaction = true;\n            } else {\n              shouldSaveResponse = shouldSaveResponse && hasActions;\n            }\n            clearSharedStorage = false;\n            _context4.next = 32;\n            break;\n          case 15:\n            if (!canceled) {\n              _context4.next = 20;\n              break;\n            }\n            status = IdxStatus.CANCELED;\n            shouldClearTransaction = true;\n            _context4.next = 32;\n            break;\n          case 20:\n            if (!(idxResponse === null || idxResponse === void 0 ? void 0 : idxResponse.interactionCode)) {\n              _context4.next = 32;\n              break;\n            }\n            interactionCode = idxResponse.interactionCode;\n            if (!(exchangeCodeForTokens === false)) {\n              _context4.next = 27;\n              break;\n            }\n            status = IdxStatus.SUCCESS;\n            shouldClearTransaction = false;\n            _context4.next = 32;\n            break;\n          case 27:\n            _context4.next = 29;\n            return getTokens(authClient, data);\n          case 29:\n            tokens = _context4.sent;\n            status = IdxStatus.SUCCESS;\n            shouldClearTransaction = true;\n          case 32:\n            return _context4.abrupt(\"return\", _Object$assign(_Object$assign({}, data), {\n              status: status,\n              interactionCode: interactionCode,\n              tokens: tokens,\n              shouldSaveResponse: shouldSaveResponse,\n              shouldClearTransaction: shouldClearTransaction,\n              clearSharedStorage: clearSharedStorage,\n              enabledFeatures: enabledFeatures,\n              availableSteps: availableSteps,\n              messages: messages,\n              terminal: terminal\n            }));\n          case 33:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _finalizeData.apply(this, arguments);\n}\nfunction handleError(err, data) {\n  var error = data.error,\n    status = data.status,\n    shouldClearTransaction = data.shouldClearTransaction;\n  if (isIdxResponse(err)) {\n    error = err;\n    status = IdxStatus.FAILURE;\n    shouldClearTransaction = true;\n  } else {\n    throw err;\n  }\n  return _Object$assign(_Object$assign({}, data), {\n    error: error,\n    status: status,\n    shouldClearTransaction: shouldClearTransaction\n  });\n}\nfunction run(_x8) {\n  return _run.apply(this, arguments);\n}\nfunction _run() {\n  _run = _asyncToGenerator(_regeneratorRuntime.mark(function _callee5(authClient) {\n    var options,\n      _a,\n      data,\n      _data,\n      idxResponse,\n      meta,\n      shouldSaveResponse,\n      shouldClearTransaction,\n      clearSharedStorage,\n      status,\n      enabledFeatures,\n      availableSteps,\n      tokens,\n      nextStep,\n      messages,\n      error,\n      interactionCode,\n      rawIdxResponse,\n      _requestDidSucceed,\n      _ref,\n      actions,\n      context,\n      neededToProceed,\n      proceed,\n      rawIdxState,\n      requestDidSucceed,\n      stepUp,\n      _args5 = arguments;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            options = _args5.length > 1 && _args5[1] !== undefined ? _args5[1] : {};\n            data = {\n              options: options,\n              values: initializeValues(options)\n            };\n            data = initializeData(authClient, data);\n            _context5.prev = 3;\n            _context5.next = 6;\n            return getDataFromIntrospect(authClient, data);\n          case 6:\n            data = _context5.sent;\n            _context5.next = 9;\n            return getDataFromRemediate(data);\n          case 9:\n            data = _context5.sent;\n            _context5.next = 15;\n            break;\n          case 12:\n            _context5.prev = 12;\n            _context5.t0 = _context5[\"catch\"](3);\n            data = handleError(_context5.t0, data);\n          case 15:\n            _context5.next = 17;\n            return finalizeData(authClient, data);\n          case 17:\n            data = _context5.sent;\n            _data = data, idxResponse = _data.idxResponse, meta = _data.meta, shouldSaveResponse = _data.shouldSaveResponse, shouldClearTransaction = _data.shouldClearTransaction, clearSharedStorage = _data.clearSharedStorage, status = _data.status, enabledFeatures = _data.enabledFeatures, availableSteps = _data.availableSteps, tokens = _data.tokens, nextStep = _data.nextStep, messages = _data.messages, error = _data.error, interactionCode = _data.interactionCode;\n            if (shouldClearTransaction) {\n              authClient.transactionManager.clear({\n                clearSharedStorage: clearSharedStorage\n              });\n            } else {\n              saveTransactionMeta(authClient, _Object$assign({}, meta));\n              if (shouldSaveResponse) {\n                rawIdxResponse = idxResponse.rawIdxState, _requestDidSucceed = idxResponse.requestDidSucceed;\n                authClient.transactionManager.saveIdxResponse({\n                  rawIdxResponse: rawIdxResponse,\n                  requestDidSucceed: _requestDidSucceed,\n                  stateHandle: (_a = idxResponse.context) === null || _a === void 0 ? void 0 : _a.stateHandle,\n                  interactionHandle: meta === null || meta === void 0 ? void 0 : meta.interactionHandle\n                });\n              }\n            }\n            _ref = idxResponse || {}, actions = _ref.actions, context = _ref.context, neededToProceed = _ref.neededToProceed, proceed = _ref.proceed, rawIdxState = _ref.rawIdxState, requestDidSucceed = _ref.requestDidSucceed, stepUp = _ref.stepUp;\n            return _context5.abrupt(\"return\", _Object$assign(_Object$assign(_Object$assign(_Object$assign(_Object$assign(_Object$assign(_Object$assign(_Object$assign(_Object$assign({\n              status: status\n            }, meta && {\n              meta: meta\n            }), enabledFeatures && {\n              enabledFeatures: enabledFeatures\n            }), availableSteps && {\n              availableSteps: availableSteps\n            }), tokens && {\n              tokens: tokens\n            }), nextStep && {\n              nextStep: nextStep\n            }), messages && messages.length && {\n              messages: messages\n            }), error && {\n              error: error\n            }), stepUp && {\n              stepUp: stepUp\n            }), {\n              interactionCode: interactionCode,\n              actions: actions,\n              context: context,\n              neededToProceed: neededToProceed,\n              proceed: proceed,\n              rawIdxState: rawIdxState,\n              requestDidSucceed: requestDidSucceed\n            }));\n          case 22:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[3, 12]]);\n  }));\n  return _run.apply(this, arguments);\n}\nfunction authenticate(_x) {\n  return _authenticate.apply(this, arguments);\n}\nfunction _authenticate() {\n  _authenticate = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(authClient) {\n    var options,\n      _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n            if (options.password && !options.authenticator) {\n              options.authenticator = AuthenticatorKey.OKTA_PASSWORD;\n            }\n            return _context.abrupt(\"return\", run(authClient, _Object$assign(_Object$assign({}, options), {\n              flow: 'authenticate'\n            })));\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _authenticate.apply(this, arguments);\n}\nfunction cancel(_x, _x2) {\n  return _cancel.apply(this, arguments);\n}\nfunction _cancel() {\n  _cancel = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(authClient, options) {\n    var meta, flowSpec;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            meta = authClient.transactionManager.load();\n            flowSpec = getFlowSpecification(authClient, meta.flow);\n            return _context.abrupt(\"return\", run(authClient, _Object$assign(_Object$assign(_Object$assign({}, options), flowSpec), {\n              actions: ['cancel']\n            })));\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _cancel.apply(this, arguments);\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar EmailVerifyCallbackError = function (_CustomError) {\n  _inherits(EmailVerifyCallbackError, _CustomError);\n  var _super = _createSuper(EmailVerifyCallbackError);\n  function EmailVerifyCallbackError(state, otp) {\n    var _this;\n    _classCallCheck(this, EmailVerifyCallbackError);\n    _this = _super.call(this, \"Enter the OTP code in the originating client: \".concat(otp));\n    _this.name = 'EmailVerifyCallbackError';\n    _this.state = state;\n    _this.otp = otp;\n    return _this;\n  }\n  return EmailVerifyCallbackError;\n}(CustomError);\nfunction isEmailVerifyCallbackError(error) {\n  return error.name === 'EmailVerifyCallbackError';\n}\nfunction isEmailVerifyCallback(urlPath) {\n  return /(otp=)/i.test(urlPath) && /(state=)/i.test(urlPath);\n}\nfunction parseEmailVerifyCallback(urlPath) {\n  return urlParamsToObject(urlPath);\n}\nfunction handleEmailVerifyCallback(_x, _x2) {\n  return _handleEmailVerifyCallback.apply(this, arguments);\n}\nfunction _handleEmailVerifyCallback() {\n  _handleEmailVerifyCallback = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(authClient, search) {\n    var _parseEmailVerifyCall, state, otp;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!isEmailVerifyCallback(search)) {\n              _context.next = 9;\n              break;\n            }\n            _parseEmailVerifyCall = parseEmailVerifyCallback(search), state = _parseEmailVerifyCall.state, otp = _parseEmailVerifyCall.otp;\n            if (!authClient.idx.canProceed({\n              state: state\n            })) {\n              _context.next = 8;\n              break;\n            }\n            _context.next = 5;\n            return authClient.idx.proceed({\n              state: state,\n              otp: otp\n            });\n          case 5:\n            return _context.abrupt(\"return\", _context.sent);\n          case 8:\n            throw new EmailVerifyCallbackError(state, otp);\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _handleEmailVerifyCallback.apply(this, arguments);\n}\nfunction canProceed(authClient) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var meta = getSavedTransactionMeta(authClient, options);\n  return !!(meta || options.stateHandle);\n}\nfunction proceed(_x) {\n  return _proceed.apply(this, arguments);\n}\nfunction _proceed() {\n  _proceed = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(authClient) {\n    var options,\n      flow,\n      state,\n      meta,\n      _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n            if (canProceed(authClient, options)) {\n              _context.next = 3;\n              break;\n            }\n            throw new AuthSdkError('Unable to proceed: saved transaction could not be loaded');\n          case 3:\n            flow = options.flow, state = options.state;\n            if (!flow) {\n              meta = getSavedTransactionMeta(authClient, {\n                state: state\n              });\n              flow = meta === null || meta === void 0 ? void 0 : meta.flow;\n            }\n            return _context.abrupt(\"return\", run(authClient, _Object$assign(_Object$assign({}, options), {\n              flow: flow\n            })));\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _proceed.apply(this, arguments);\n}\nfunction poll(_x) {\n  return _poll.apply(this, arguments);\n}\nfunction _poll() {\n  _poll = _asyncToGenerator(_regeneratorRuntime.mark(function _callee2(authClient) {\n    var options,\n      _a,\n      transaction,\n      meta,\n      availablePollingRemeditaions,\n      _args2 = arguments;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            options = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : {};\n            _context2.next = 3;\n            return proceed(authClient, {\n              startPolling: true\n            });\n          case 3:\n            transaction = _context2.sent;\n            meta = getSavedTransactionMeta(authClient);\n            availablePollingRemeditaions = (_a = meta === null || meta === void 0 ? void 0 : meta.remediations) === null || _a === void 0 ? void 0 : _findInstanceProperty(_a).call(_a, function (remediation) {\n              return _includesInstanceProperty(remediation).call(remediation, 'poll');\n            });\n            if (!(availablePollingRemeditaions === null || availablePollingRemeditaions === void 0 ? void 0 : availablePollingRemeditaions.length)) {\n              warn('No polling remediations available at the current IDX flow stage');\n            }\n            if (!_Number$isInteger(options.refresh)) {\n              _context2.next = 9;\n              break;\n            }\n            return _context2.abrupt(\"return\", new _Promise(function (resolve, reject) {\n              setTimeout(_asyncToGenerator(_regeneratorRuntime.mark(function _callee() {\n                var _a, _b, refresh;\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        try {\n                          refresh = (_b = (_a = transaction.nextStep) === null || _a === void 0 ? void 0 : _a.poll) === null || _b === void 0 ? void 0 : _b.refresh;\n                          if (refresh) {\n                            resolve(poll(authClient, {\n                              refresh: refresh\n                            }));\n                          } else {\n                            resolve(transaction);\n                          }\n                        } catch (err) {\n                          reject(err);\n                        }\n                      case 1:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              })), options.refresh);\n            }));\n          case 9:\n            return _context2.abrupt(\"return\", transaction);\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _poll.apply(this, arguments);\n}\nfunction startTransaction(_x) {\n  return _startTransaction.apply(this, arguments);\n}\nfunction _startTransaction() {\n  _startTransaction = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(authClient) {\n    var options,\n      _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n            authClient.transactionManager.clear();\n            return _context.abrupt(\"return\", run(authClient, _Object$assign({\n              exchangeCodeForTokens: false\n            }, options)));\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _startTransaction.apply(this, arguments);\n}\nfunction register(_x) {\n  return _register.apply(this, arguments);\n}\nfunction _register() {\n  _register = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(authClient) {\n    var options,\n      _yield$startTransacti,\n      enabledFeatures,\n      availableSteps,\n      error,\n      _error,\n      _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n            if (hasSavedInteractionHandle(authClient)) {\n              _context.next = 13;\n              break;\n            }\n            _context.next = 4;\n            return startTransaction(authClient, _Object$assign(_Object$assign({}, options), {\n              flow: 'register',\n              autoRemediate: false\n            }));\n          case 4:\n            _yield$startTransacti = _context.sent;\n            enabledFeatures = _yield$startTransacti.enabledFeatures;\n            availableSteps = _yield$startTransacti.availableSteps;\n            if (!(!options.activationToken && enabledFeatures && !_includesInstanceProperty(enabledFeatures).call(enabledFeatures, IdxFeature.REGISTRATION))) {\n              _context.next = 10;\n              break;\n            }\n            error = new AuthSdkError('Registration is not supported based on your current org configuration.');\n            throw error;\n          case 10:\n            if (!(options.activationToken && (availableSteps === null || availableSteps === void 0 ? void 0 : availableSteps.some(function (_ref) {\n              var name = _ref.name;\n              return name === 'identify';\n            })))) {\n              _context.next = 13;\n              break;\n            }\n            _error = new AuthSdkError('activationToken is not supported based on your current org configuration.');\n            throw _error;\n          case 13:\n            return _context.abrupt(\"return\", run(authClient, _Object$assign(_Object$assign({}, options), {\n              flow: 'register'\n            })));\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _register.apply(this, arguments);\n}\nfunction recoverPassword(_x) {\n  return _recoverPassword.apply(this, arguments);\n}\nfunction _recoverPassword() {\n  _recoverPassword = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(authClient) {\n    var options,\n      flowSpec,\n      _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n            flowSpec = getFlowSpecification(authClient, 'recoverPassword');\n            return _context.abrupt(\"return\", run(authClient, _Object$assign(_Object$assign({}, options), flowSpec)));\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _recoverPassword.apply(this, arguments);\n}\nfunction handleInteractionCodeRedirect(_x, _x2) {\n  return _handleInteractionCodeRedirect.apply(this, arguments);\n}\nfunction _handleInteractionCodeRedirect() {\n  _handleInteractionCodeRedirect = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(authClient, url) {\n    var meta, codeVerifier, savedState, _URL, searchParams, state, interactionCode, error, _yield$authClient$tok, tokens;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            meta = authClient.transactionManager.load();\n            if (meta) {\n              _context.next = 3;\n              break;\n            }\n            throw new AuthSdkError('No transaction data was found in storage');\n          case 3:\n            codeVerifier = meta.codeVerifier, savedState = meta.state;\n            _URL = new _URL2(url), searchParams = _URL.searchParams;\n            state = searchParams.get('state');\n            interactionCode = searchParams.get('interaction_code');\n            error = searchParams.get('error');\n            if (!error) {\n              _context.next = 10;\n              break;\n            }\n            throw new OAuthError(error, searchParams.get('error_description'));\n          case 10:\n            if (!(state !== savedState)) {\n              _context.next = 12;\n              break;\n            }\n            throw new AuthSdkError('State in redirect uri does not match with transaction state');\n          case 12:\n            if (interactionCode) {\n              _context.next = 14;\n              break;\n            }\n            throw new AuthSdkError('Unable to parse interaction_code from the url');\n          case 14:\n            _context.next = 16;\n            return authClient.token.exchangeCodeForTokens({\n              interactionCode: interactionCode,\n              codeVerifier: codeVerifier\n            });\n          case 16:\n            _yield$authClient$tok = _context.sent;\n            tokens = _yield$authClient$tok.tokens;\n            authClient.tokenManager.setTokens(tokens);\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _handleInteractionCodeRedirect.apply(this, arguments);\n}\nfunction unlockAccount(_x) {\n  return _unlockAccount.apply(this, arguments);\n}\nfunction _unlockAccount() {\n  _unlockAccount = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(authClient) {\n    var options,\n      _yield$startTransacti,\n      enabledFeatures,\n      _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n            options.flow = 'unlockAccount';\n            if (hasSavedInteractionHandle(authClient)) {\n              _context.next = 9;\n              break;\n            }\n            _context.next = 5;\n            return startTransaction(authClient, _Object$assign(_Object$assign({}, options), {\n              autoRemediate: false\n            }));\n          case 5:\n            _yield$startTransacti = _context.sent;\n            enabledFeatures = _yield$startTransacti.enabledFeatures;\n            if (!(enabledFeatures && !_includesInstanceProperty(enabledFeatures).call(enabledFeatures, IdxFeature.ACCOUNT_UNLOCK))) {\n              _context.next = 9;\n              break;\n            }\n            throw new AuthSdkError('Self Service Account Unlock is not supported based on your current org configuration.');\n          case 9:\n            return _context.abrupt(\"return\", run(authClient, _Object$assign({}, options)));\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _unlockAccount.apply(this, arguments);\n}\nvar OktaUserAgent = function () {\n  function OktaUserAgent() {\n    _classCallCheck(this, OktaUserAgent);\n    this.environments = [\"okta-auth-js/\".concat(\"6.4.5\")];\n  }\n  _createClass(OktaUserAgent, [{\n    key: \"addEnvironment\",\n    value: function addEnvironment(env) {\n      this.environments.push(env);\n    }\n  }, {\n    key: \"getHttpHeader\",\n    value: function getHttpHeader() {\n      this.maybeAddNodeEnvironment();\n      return {\n        'X-Okta-User-Agent-Extended': this.environments.join(' ')\n      };\n    }\n  }, {\n    key: \"getVersion\",\n    value: function getVersion() {\n      return \"6.4.5\";\n    }\n  }, {\n    key: \"maybeAddNodeEnvironment\",\n    value: function maybeAddNodeEnvironment() {\n      if (isBrowser() || !process || !process.versions) {\n        return;\n      }\n      var version = process.versions.node;\n      this.environments.push(\"nodejs/\".concat(version));\n    }\n  }]);\n  return OktaUserAgent;\n}();\nvar OktaAuth = function () {\n  function OktaAuth(args) {\n    var _this = this;\n    _classCallCheck(this, OktaAuth);\n    this.features = features;\n    var options = this.options = buildOptions(args);\n    this.storageManager = new StorageManager(options.storageManager, options.cookies, options.storageUtil);\n    this.transactionManager = new TransactionManager(_Object$assign({\n      storageManager: this.storageManager\n    }, options.transactionManager));\n    this._oktaUserAgent = new OktaUserAgent();\n    this.tx = {\n      status: transactionStatus.bind(null, this),\n      resume: resumeTransaction.bind(null, this),\n      exists: _Object$assign(transactionExists.bind(null, this), {\n        _get: function _get(name) {\n          var storage = options.storageUtil.storage;\n          return storage.get(name);\n        }\n      }),\n      introspect: introspectAuthn.bind(null, this)\n    };\n    this.pkce = {\n      DEFAULT_CODE_CHALLENGE_METHOD: PKCE.DEFAULT_CODE_CHALLENGE_METHOD,\n      generateVerifier: PKCE.generateVerifier,\n      computeChallenge: PKCE.computeChallenge\n    };\n    _Object$assign(this.options.storageUtil, {\n      getPKCEStorage: this.storageManager.getLegacyPKCEStorage.bind(this.storageManager),\n      getHttpCache: this.storageManager.getHttpCache.bind(this.storageManager)\n    });\n    this._pending = {\n      handleLogin: false\n    };\n    if (isBrowser()) {\n      this.options = _Object$assign(this.options, {\n        redirectUri: toAbsoluteUrl(args.redirectUri, window.location.origin)\n      });\n    }\n    if (!args.maxClockSkew && args.maxClockSkew !== 0) {\n      this.options.maxClockSkew = DEFAULT_MAX_CLOCK_SKEW;\n    } else {\n      this.options.maxClockSkew = args.maxClockSkew;\n    }\n    this.options.ignoreLifetime = !!args.ignoreLifetime;\n    this.session = {\n      close: closeSession.bind(null, this),\n      exists: sessionExists.bind(null, this),\n      get: getSession.bind(null, this),\n      refresh: refreshSession.bind(null, this),\n      setCookieAndRedirect: setCookieAndRedirect.bind(null, this)\n    };\n    this._tokenQueue = new PromiseQueue();\n    var useQueue = function useQueue(method) {\n      return PromiseQueue.prototype.push.bind(_this._tokenQueue, method, null);\n    };\n    var getWithRedirectFn = useQueue(getWithRedirect.bind(null, this));\n    var getWithRedirectApi = _Object$assign(getWithRedirectFn, {\n      _setLocation: function _setLocation(url) {\n        window.location = url;\n      }\n    });\n    var parseFromUrlFn = useQueue(parseFromUrl.bind(null, this));\n    var parseFromUrlApi = _Object$assign(parseFromUrlFn, {\n      _getHistory: function _getHistory() {\n        return window.history;\n      },\n      _getLocation: function _getLocation() {\n        return window.location;\n      },\n      _getDocument: function _getDocument() {\n        return window.document;\n      }\n    });\n    this.token = {\n      prepareTokenParams: prepareTokenParams.bind(null, this),\n      exchangeCodeForTokens: exchangeCodeForTokens.bind(null, this),\n      getWithoutPrompt: getWithoutPrompt.bind(null, this),\n      getWithPopup: getWithPopup.bind(null, this),\n      getWithRedirect: getWithRedirectApi,\n      parseFromUrl: parseFromUrlApi,\n      decode: decodeToken,\n      revoke: revokeToken.bind(null, this),\n      renew: renewToken.bind(null, this),\n      renewTokensWithRefresh: renewTokensWithRefresh.bind(null, this),\n      renewTokens: renewTokens.bind(null, this),\n      getUserInfo: getUserInfo.bind(null, this),\n      verify: verifyToken.bind(null, this),\n      isLoginRedirect: isLoginRedirect.bind(null, this)\n    };\n    var syncMethods = ['decode', 'isLoginRedirect', 'getWithRedirect', 'parseFromUrl'];\n    _Object$keys(this.token).forEach(function (key) {\n      if (_indexOfInstanceProperty(syncMethods).call(syncMethods, key) >= 0) {\n        return;\n      }\n      var method = _this.token[key];\n      _this.token[key] = PromiseQueue.prototype.push.bind(_this._tokenQueue, method, null);\n    });\n    var boundStartTransaction = startTransaction.bind(null, this);\n    this.idx = {\n      interact: interact.bind(null, this),\n      introspect: introspect.bind(null, this),\n      authenticate: authenticate.bind(null, this),\n      register: register.bind(null, this),\n      start: boundStartTransaction,\n      startTransaction: boundStartTransaction,\n      poll: poll.bind(null, this),\n      proceed: proceed.bind(null, this),\n      cancel: cancel.bind(null, this),\n      recoverPassword: recoverPassword.bind(null, this),\n      handleInteractionCodeRedirect: handleInteractionCodeRedirect.bind(null, this),\n      isInteractionRequired: isInteractionRequired.bind(null, this),\n      isInteractionRequiredError: isInteractionRequiredError,\n      handleEmailVerifyCallback: handleEmailVerifyCallback.bind(null, this),\n      isEmailVerifyCallback: isEmailVerifyCallback,\n      parseEmailVerifyCallback: parseEmailVerifyCallback,\n      isEmailVerifyCallbackError: isEmailVerifyCallbackError,\n      getSavedTransactionMeta: getSavedTransactionMeta.bind(null, this),\n      createTransactionMeta: createTransactionMeta.bind(null, this),\n      getTransactionMeta: getTransactionMeta.bind(null, this),\n      saveTransactionMeta: saveTransactionMeta.bind(null, this),\n      clearTransactionMeta: clearTransactionMeta.bind(null, this),\n      isTransactionMetaValid: isTransactionMetaValid,\n      setFlow: function setFlow(flow) {\n        _this.options.flow = flow;\n      },\n      getFlow: function getFlow() {\n        return _this.options.flow;\n      },\n      canProceed: canProceed.bind(null, this),\n      unlockAccount: unlockAccount.bind(null, this)\n    };\n    this.http = {\n      setRequestHeader: setRequestHeader.bind(null, this)\n    };\n    this.fingerprint = fingerprint.bind(null, this);\n    this.emitter = new Emitter();\n    this.tokenManager = new TokenManager(this, args.tokenManager);\n    this.authStateManager = new AuthStateManager(this);\n    this.serviceManager = new ServiceManager(this, args.services);\n  }\n  _createClass(OktaAuth, [{\n    key: \"start\",\n    value: function start() {\n      this.tokenManager.start();\n      if (!this.token.isLoginRedirect()) {\n        this.authStateManager.updateAuthState();\n      }\n      this.serviceManager.start();\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.tokenManager.stop();\n      this.serviceManager.stop();\n    }\n  }, {\n    key: \"setHeaders\",\n    value: function setHeaders(headers) {\n      this.options.headers = _Object$assign({}, this.options.headers, headers);\n    }\n  }, {\n    key: \"signIn\",\n    value: function () {\n      var _signIn = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(opts) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", this.signInWithCredentials(opts));\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function signIn(_x) {\n        return _signIn.apply(this, arguments);\n      }\n      return signIn;\n    }()\n  }, {\n    key: \"signInWithCredentials\",\n    value: function () {\n      var _signInWithCredentials = _asyncToGenerator(_regeneratorRuntime.mark(function _callee2(opts) {\n        var _this2 = this;\n        var _postToTransaction;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                opts = clone(opts || {});\n                _postToTransaction = function _postToTransaction(options) {\n                  delete opts.sendFingerprint;\n                  return postToTransaction(_this2, '/api/v1/authn', opts, options);\n                };\n                if (opts.sendFingerprint) {\n                  _context2.next = 4;\n                  break;\n                }\n                return _context2.abrupt(\"return\", _postToTransaction());\n              case 4:\n                return _context2.abrupt(\"return\", this.fingerprint().then(function (fingerprint) {\n                  return _postToTransaction({\n                    headers: {\n                      'X-Device-Fingerprint': fingerprint\n                    }\n                  });\n                }));\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n      function signInWithCredentials(_x2) {\n        return _signInWithCredentials.apply(this, arguments);\n      }\n      return signInWithCredentials;\n    }()\n  }, {\n    key: \"signInWithRedirect\",\n    value: function () {\n      var _signInWithRedirect = _asyncToGenerator(_regeneratorRuntime.mark(function _callee3() {\n        var opts,\n          originalUri,\n          additionalParams,\n          params,\n          _args3 = arguments;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                opts = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : {};\n                originalUri = opts.originalUri, additionalParams = __rest(opts, [\"originalUri\"]);\n                if (!this._pending.handleLogin) {\n                  _context3.next = 4;\n                  break;\n                }\n                return _context3.abrupt(\"return\");\n              case 4:\n                this._pending.handleLogin = true;\n                _context3.prev = 5;\n                if (originalUri) {\n                  this.setOriginalUri(originalUri);\n                }\n                params = _Object$assign({\n                  scopes: this.options.scopes || ['openid', 'email', 'profile']\n                }, additionalParams);\n                _context3.next = 10;\n                return this.token.getWithRedirect(params);\n              case 10:\n                _context3.prev = 10;\n                this._pending.handleLogin = false;\n                return _context3.finish(10);\n              case 13:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[5,, 10, 13]]);\n      }));\n      function signInWithRedirect() {\n        return _signInWithRedirect.apply(this, arguments);\n      }\n      return signInWithRedirect;\n    }()\n  }, {\n    key: \"closeSession\",\n    value: function closeSession() {\n      var _this3 = this;\n      return this.session.close().then(_asyncToGenerator(_regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _this3.tokenManager.clear();\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }))).catch(function (e) {\n        if (e.name === 'AuthApiError' && e.errorCode === 'E0000007') {\n          return null;\n        }\n        throw e;\n      });\n    }\n  }, {\n    key: \"revokeAccessToken\",\n    value: function () {\n      var _revokeAccessToken = _asyncToGenerator(_regeneratorRuntime.mark(function _callee5(accessToken) {\n        var accessTokenKey;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (accessToken) {\n                  _context5.next = 6;\n                  break;\n                }\n                _context5.next = 3;\n                return this.tokenManager.getTokens();\n              case 3:\n                accessToken = _context5.sent.accessToken;\n                accessTokenKey = this.tokenManager.getStorageKeyByType('accessToken');\n                this.tokenManager.remove(accessTokenKey);\n              case 6:\n                if (accessToken) {\n                  _context5.next = 8;\n                  break;\n                }\n                return _context5.abrupt(\"return\", _Promise.resolve(null));\n              case 8:\n                return _context5.abrupt(\"return\", this.token.revoke(accessToken));\n              case 9:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n      function revokeAccessToken(_x3) {\n        return _revokeAccessToken.apply(this, arguments);\n      }\n      return revokeAccessToken;\n    }()\n  }, {\n    key: \"revokeRefreshToken\",\n    value: function () {\n      var _revokeRefreshToken = _asyncToGenerator(_regeneratorRuntime.mark(function _callee6(refreshToken) {\n        var refreshTokenKey;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                if (refreshToken) {\n                  _context6.next = 6;\n                  break;\n                }\n                _context6.next = 3;\n                return this.tokenManager.getTokens();\n              case 3:\n                refreshToken = _context6.sent.refreshToken;\n                refreshTokenKey = this.tokenManager.getStorageKeyByType('refreshToken');\n                this.tokenManager.remove(refreshTokenKey);\n              case 6:\n                if (refreshToken) {\n                  _context6.next = 8;\n                  break;\n                }\n                return _context6.abrupt(\"return\", _Promise.resolve(null));\n              case 8:\n                return _context6.abrupt(\"return\", this.token.revoke(refreshToken));\n              case 9:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n      function revokeRefreshToken(_x4) {\n        return _revokeRefreshToken.apply(this, arguments);\n      }\n      return revokeRefreshToken;\n    }()\n  }, {\n    key: \"getSignOutRedirectUrl\",\n    value: function getSignOutRedirectUrl() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var idToken = options.idToken,\n        postLogoutRedirectUri = options.postLogoutRedirectUri,\n        state = options.state;\n      if (!idToken) {\n        idToken = this.tokenManager.getTokensSync().idToken;\n      }\n      if (!idToken) {\n        return '';\n      }\n      if (!postLogoutRedirectUri) {\n        postLogoutRedirectUri = this.options.postLogoutRedirectUri;\n      }\n      var logoutUrl = getOAuthUrls(this).logoutUrl;\n      var idTokenHint = idToken.idToken;\n      var logoutUri = logoutUrl + '?id_token_hint=' + encodeURIComponent(idTokenHint);\n      if (postLogoutRedirectUri) {\n        logoutUri += '&post_logout_redirect_uri=' + encodeURIComponent(postLogoutRedirectUri);\n      }\n      if (state) {\n        logoutUri += '&state=' + encodeURIComponent(state);\n      }\n      return logoutUri;\n    }\n  }, {\n    key: \"signOut\",\n    value: function () {\n      var _signOut = _asyncToGenerator(_regeneratorRuntime.mark(function _callee7(options) {\n        var defaultUri, currentUri, postLogoutRedirectUri, accessToken, refreshToken, revokeAccessToken, revokeRefreshToken, logoutUri;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                options = _Object$assign({}, options);\n                defaultUri = window.location.origin;\n                currentUri = window.location.href;\n                postLogoutRedirectUri = options.postLogoutRedirectUri || this.options.postLogoutRedirectUri || defaultUri;\n                accessToken = options.accessToken;\n                refreshToken = options.refreshToken;\n                revokeAccessToken = options.revokeAccessToken !== false;\n                revokeRefreshToken = options.revokeRefreshToken !== false;\n                if (revokeRefreshToken && typeof refreshToken === 'undefined') {\n                  refreshToken = this.tokenManager.getTokensSync().refreshToken;\n                }\n                if (revokeAccessToken && typeof accessToken === 'undefined') {\n                  accessToken = this.tokenManager.getTokensSync().accessToken;\n                }\n                if (!options.idToken) {\n                  options.idToken = this.tokenManager.getTokensSync().idToken;\n                }\n                if (!(revokeRefreshToken && refreshToken)) {\n                  _context7.next = 14;\n                  break;\n                }\n                _context7.next = 14;\n                return this.revokeRefreshToken(refreshToken);\n              case 14:\n                if (!(revokeAccessToken && accessToken)) {\n                  _context7.next = 17;\n                  break;\n                }\n                _context7.next = 17;\n                return this.revokeAccessToken(accessToken);\n              case 17:\n                logoutUri = this.getSignOutRedirectUrl(_Object$assign(_Object$assign({}, options), {\n                  postLogoutRedirectUri: postLogoutRedirectUri\n                }));\n                if (logoutUri) {\n                  _context7.next = 22;\n                  break;\n                }\n                return _context7.abrupt(\"return\", this.closeSession().then(function () {\n                  if (postLogoutRedirectUri === currentUri) {\n                    window.location.reload();\n                  } else {\n                    window.location.assign(postLogoutRedirectUri);\n                  }\n                }));\n              case 22:\n                if (options.clearTokensBeforeRedirect) {\n                  this.tokenManager.clear();\n                } else {\n                  this.tokenManager.addPendingRemoveFlags();\n                }\n                window.location.assign(logoutUri);\n              case 24:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n      function signOut(_x5) {\n        return _signOut.apply(this, arguments);\n      }\n      return signOut;\n    }()\n  }, {\n    key: \"webfinger\",\n    value: function webfinger(opts) {\n      var url = '/.well-known/webfinger' + toQueryString(opts);\n      var options = {\n        headers: {\n          'Accept': 'application/jrd+json'\n        }\n      };\n      return get(this, url, options);\n    }\n  }, {\n    key: \"isAuthenticated\",\n    value: function () {\n      var _isAuthenticated = _asyncToGenerator(_regeneratorRuntime.mark(function _callee8() {\n        var options,\n          _this$tokenManager$ge,\n          autoRenew,\n          autoRemove,\n          shouldRenew,\n          shouldRemove,\n          _this$tokenManager$ge2,\n          accessToken,\n          _this$tokenManager$ge3,\n          idToken,\n          _args8 = arguments;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                options = _args8.length > 0 && _args8[0] !== undefined ? _args8[0] : {};\n                _this$tokenManager$ge = this.tokenManager.getOptions(), autoRenew = _this$tokenManager$ge.autoRenew, autoRemove = _this$tokenManager$ge.autoRemove;\n                shouldRenew = options.onExpiredToken ? options.onExpiredToken === 'renew' : autoRenew;\n                shouldRemove = options.onExpiredToken ? options.onExpiredToken === 'remove' : autoRemove;\n                _this$tokenManager$ge2 = this.tokenManager.getTokensSync(), accessToken = _this$tokenManager$ge2.accessToken;\n                if (!(accessToken && this.tokenManager.hasExpired(accessToken))) {\n                  _context8.next = 19;\n                  break;\n                }\n                accessToken = undefined;\n                if (!shouldRenew) {\n                  _context8.next = 18;\n                  break;\n                }\n                _context8.prev = 8;\n                _context8.next = 11;\n                return this.tokenManager.renew('accessToken');\n              case 11:\n                accessToken = _context8.sent;\n                _context8.next = 16;\n                break;\n              case 14:\n                _context8.prev = 14;\n                _context8.t0 = _context8[\"catch\"](8);\n              case 16:\n                _context8.next = 19;\n                break;\n              case 18:\n                if (shouldRemove) {\n                  this.tokenManager.remove('accessToken');\n                }\n              case 19:\n                _this$tokenManager$ge3 = this.tokenManager.getTokensSync(), idToken = _this$tokenManager$ge3.idToken;\n                if (!(idToken && this.tokenManager.hasExpired(idToken))) {\n                  _context8.next = 34;\n                  break;\n                }\n                idToken = undefined;\n                if (!shouldRenew) {\n                  _context8.next = 33;\n                  break;\n                }\n                _context8.prev = 23;\n                _context8.next = 26;\n                return this.tokenManager.renew('idToken');\n              case 26:\n                idToken = _context8.sent;\n                _context8.next = 31;\n                break;\n              case 29:\n                _context8.prev = 29;\n                _context8.t1 = _context8[\"catch\"](23);\n              case 31:\n                _context8.next = 34;\n                break;\n              case 33:\n                if (shouldRemove) {\n                  this.tokenManager.remove('idToken');\n                }\n              case 34:\n                return _context8.abrupt(\"return\", !!(accessToken && idToken));\n              case 35:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this, [[8, 14], [23, 29]]);\n      }));\n      function isAuthenticated() {\n        return _isAuthenticated.apply(this, arguments);\n      }\n      return isAuthenticated;\n    }()\n  }, {\n    key: \"getUser\",\n    value: function () {\n      var _getUser = _asyncToGenerator(_regeneratorRuntime.mark(function _callee9() {\n        var _this$tokenManager$ge4, idToken, accessToken;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _this$tokenManager$ge4 = this.tokenManager.getTokensSync(), idToken = _this$tokenManager$ge4.idToken, accessToken = _this$tokenManager$ge4.accessToken;\n                return _context9.abrupt(\"return\", this.token.getUserInfo(accessToken, idToken));\n              case 2:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n      function getUser() {\n        return _getUser.apply(this, arguments);\n      }\n      return getUser;\n    }()\n  }, {\n    key: \"getIdToken\",\n    value: function getIdToken() {\n      var _this$tokenManager$ge5 = this.tokenManager.getTokensSync(),\n        idToken = _this$tokenManager$ge5.idToken;\n      return idToken ? idToken.idToken : undefined;\n    }\n  }, {\n    key: \"getAccessToken\",\n    value: function getAccessToken() {\n      var _this$tokenManager$ge6 = this.tokenManager.getTokensSync(),\n        accessToken = _this$tokenManager$ge6.accessToken;\n      return accessToken ? accessToken.accessToken : undefined;\n    }\n  }, {\n    key: \"getRefreshToken\",\n    value: function getRefreshToken() {\n      var _this$tokenManager$ge7 = this.tokenManager.getTokensSync(),\n        refreshToken = _this$tokenManager$ge7.refreshToken;\n      return refreshToken ? refreshToken.refreshToken : undefined;\n    }\n  }, {\n    key: \"storeTokensFromRedirect\",\n    value: function () {\n      var _storeTokensFromRedirect = _asyncToGenerator(_regeneratorRuntime.mark(function _callee10() {\n        var _yield$this$token$par, tokens;\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.next = 2;\n                return this.token.parseFromUrl();\n              case 2:\n                _yield$this$token$par = _context10.sent;\n                tokens = _yield$this$token$par.tokens;\n                this.tokenManager.setTokens(tokens);\n              case 5:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n      function storeTokensFromRedirect() {\n        return _storeTokensFromRedirect.apply(this, arguments);\n      }\n      return storeTokensFromRedirect;\n    }()\n  }, {\n    key: \"setOriginalUri\",\n    value: function setOriginalUri(originalUri, state) {\n      var sessionStorage = storageUtil.getSessionStorage();\n      sessionStorage.setItem(REFERRER_PATH_STORAGE_KEY, originalUri);\n      state = state || this.options.state;\n      if (state) {\n        var sharedStorage = this.storageManager.getOriginalUriStorage();\n        sharedStorage.setItem(state, originalUri);\n      }\n    }\n  }, {\n    key: \"getOriginalUri\",\n    value: function getOriginalUri(state) {\n      state = state || this.options.state;\n      if (state) {\n        var sharedStorage = this.storageManager.getOriginalUriStorage();\n        var originalUri = sharedStorage.getItem(state);\n        if (originalUri) {\n          return originalUri;\n        }\n      }\n      var storage = storageUtil.getSessionStorage();\n      return storage ? storage.getItem(REFERRER_PATH_STORAGE_KEY) || undefined : undefined;\n    }\n  }, {\n    key: \"removeOriginalUri\",\n    value: function removeOriginalUri(state) {\n      var storage = storageUtil.getSessionStorage();\n      storage.removeItem(REFERRER_PATH_STORAGE_KEY);\n      state = state || this.options.state;\n      if (state) {\n        var sharedStorage = this.storageManager.getOriginalUriStorage();\n        sharedStorage.removeItem && sharedStorage.removeItem(state);\n      }\n    }\n  }, {\n    key: \"isLoginRedirect\",\n    value: function isLoginRedirect$1() {\n      return isLoginRedirect(this);\n    }\n  }, {\n    key: \"handleLoginRedirect\",\n    value: function () {\n      var _handleLoginRedirect = _asyncToGenerator(_regeneratorRuntime.mark(function _callee11(tokens, originalUri) {\n        var state, oAuthResponse, restoreOriginalUri;\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                state = this.options.state;\n                if (!tokens) {\n                  _context11.next = 6;\n                  break;\n                }\n                this.tokenManager.setTokens(tokens);\n                originalUri = originalUri || this.getOriginalUri(this.options.state);\n                _context11.next = 25;\n                break;\n              case 6:\n                if (!this.isLoginRedirect()) {\n                  _context11.next = 24;\n                  break;\n                }\n                _context11.prev = 7;\n                _context11.next = 10;\n                return parseOAuthResponseFromUrl(this, {});\n              case 10:\n                oAuthResponse = _context11.sent;\n                state = oAuthResponse.state;\n                originalUri = originalUri || this.getOriginalUri(state);\n                _context11.next = 15;\n                return this.storeTokensFromRedirect();\n              case 15:\n                _context11.next = 22;\n                break;\n              case 17:\n                _context11.prev = 17;\n                _context11.t0 = _context11[\"catch\"](7);\n                _context11.next = 21;\n                return this.authStateManager.updateAuthState();\n              case 21:\n                throw _context11.t0;\n              case 22:\n                _context11.next = 25;\n                break;\n              case 24:\n                return _context11.abrupt(\"return\");\n              case 25:\n                _context11.next = 27;\n                return this.authStateManager.updateAuthState();\n              case 27:\n                this.removeOriginalUri(state);\n                restoreOriginalUri = this.options.restoreOriginalUri;\n                if (!restoreOriginalUri) {\n                  _context11.next = 34;\n                  break;\n                }\n                _context11.next = 32;\n                return restoreOriginalUri(this, originalUri);\n              case 32:\n                _context11.next = 35;\n                break;\n              case 34:\n                if (originalUri) {\n                  window.location.replace(originalUri);\n                }\n              case 35:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this, [[7, 17]]);\n      }));\n      function handleLoginRedirect(_x6, _x7) {\n        return _handleLoginRedirect.apply(this, arguments);\n      }\n      return handleLoginRedirect;\n    }()\n  }, {\n    key: \"isPKCE\",\n    value: function isPKCE() {\n      return !!this.options.pkce;\n    }\n  }, {\n    key: \"hasResponseType\",\n    value: function hasResponseType(responseType) {\n      var hasResponseType = false;\n      if (Array.isArray(this.options.responseType) && this.options.responseType.length) {\n        var _context12;\n        hasResponseType = _indexOfInstanceProperty(_context12 = this.options.responseType).call(_context12, responseType) >= 0;\n      } else {\n        hasResponseType = this.options.responseType === responseType;\n      }\n      return hasResponseType;\n    }\n  }, {\n    key: \"isAuthorizationCodeFlow\",\n    value: function isAuthorizationCodeFlow() {\n      return this.hasResponseType('code');\n    }\n  }, {\n    key: \"getIssuerOrigin\",\n    value: function getIssuerOrigin() {\n      return this.options.issuer.split('/oauth2/')[0];\n    }\n  }, {\n    key: \"forgotPassword\",\n    value: function forgotPassword(opts) {\n      return postToTransaction(this, '/api/v1/authn/recovery/password', opts);\n    }\n  }, {\n    key: \"unlockAccount\",\n    value: function unlockAccount(opts) {\n      return postToTransaction(this, '/api/v1/authn/recovery/unlock', opts);\n    }\n  }, {\n    key: \"verifyRecoveryToken\",\n    value: function verifyRecoveryToken(opts) {\n      return postToTransaction(this, '/api/v1/authn/recovery/token', opts);\n    }\n  }, {\n    key: \"invokeApiMethod\",\n    value: function () {\n      var _invokeApiMethod = _asyncToGenerator(_regeneratorRuntime.mark(function _callee12(options) {\n        var accessToken;\n        return _regeneratorRuntime.wrap(function _callee12$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                if (options.accessToken) {\n                  _context13.next = 5;\n                  break;\n                }\n                _context13.next = 3;\n                return this.tokenManager.getTokens();\n              case 3:\n                accessToken = _context13.sent.accessToken;\n                options.accessToken = accessToken === null || accessToken === void 0 ? void 0 : accessToken.accessToken;\n              case 5:\n                return _context13.abrupt(\"return\", httpRequest(this, options));\n              case 6:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n      function invokeApiMethod(_x8) {\n        return _invokeApiMethod.apply(this, arguments);\n      }\n      return invokeApiMethod;\n    }()\n  }]);\n  return OktaAuth;\n}();\nOktaAuth.features = features;\nOktaAuth.crypto = crypto$1;\nOktaAuth.webauthn = webauthn;\nOktaAuth.features = OktaAuth.prototype.features = features;\n_Object$assign(OktaAuth, {\n  constants: constants\n});\nexport { ACCESS_TOKEN_STORAGE_KEY, AuthApiError, AuthPollStopError, AuthSdkError, AuthStateManager, AuthTransaction, AuthenticatorKey, CACHE_STORAGE_NAME, DEFAULT_CACHE_DURATION, DEFAULT_CODE_CHALLENGE_METHOD, DEFAULT_MAX_CLOCK_SKEW, DEFAULT_POLLING_DELAY, EVENT_ADDED, EVENT_ERROR, EVENT_EXPIRED, EVENT_REMOVED, EVENT_RENEWED, IDX_API_VERSION, IDX_RESPONSE_STORAGE_NAME, ID_TOKEN_STORAGE_KEY, INITIAL_AUTH_STATE, IdxFeature, IdxStatus, MAX_VERIFIER_LENGTH, MIN_VERIFIER_LENGTH, OAuthError, ORIGINAL_URI_STORAGE_NAME, OktaAuth, PKCE_STORAGE_NAME, REDIRECT_NONCE_COOKIE_NAME, REDIRECT_OAUTH_PARAMS_NAME, REDIRECT_STATE_COOKIE_NAME, REFERRER_PATH_STORAGE_KEY, REFRESH_TOKEN_STORAGE_KEY, SHARED_TRANSACTION_STORAGE_NAME, STATE_TOKEN_KEY_NAME, StorageManager, TOKEN_STORAGE_NAME, TRANSACTION_STORAGE_NAME, TokenManager, addListener, addPostMessageListener, addStateToken, assertPKCESupport, authenticate, bind, buildAuthorizeParams, canProceed, cancel, clearTransactionMeta, clone, convertTokenParamsToOAuthParams, createOAuthMeta, createTransactionMeta, crypto$1 as crypto, decodeToken, delay, deprecate, deprecateWrap, exchangeCodeForTokens, extend, find, genRandomString, generateNonce, generateState, getConsole, getDefaultTokenParams, getHashOrSearch, getKey, getLink, getNativeConsole, getOAuthBaseUrl, getOAuthDomain, getOAuthUrls, getPollFn, getSavedTransactionMeta, getStateToken, getToken, getTransactionMeta, getUserInfo, getWellKnown, getWithPopup, getWithRedirect, getWithoutPrompt, handleEmailVerifyCallback, handleInteractionCodeRedirect, handleOAuthResponse, hasAuthorizationCode, hasErrorInUrl, hasInteractionCode, hasSavedInteractionHandle, hasTokensInHash, interact, introspect, introspectAuthn, isAbsoluteUrl, isAccessToken, isAuthApiError, isAuthenticator, isAuthorizationCodeError, isCodeFlow, isCustomAuthTransactionMeta, isEmailVerifyCallback, isEmailVerifyCallbackError, isFunction, isIDToken, isIdxTransactionMeta, isInteractionRequired, isInteractionRequiredError, isLoginRedirect, isNumber, isOAuthTransactionMeta, isObject, isPKCETransactionMeta, isPromise, isRedirectUri, isRefreshToken, isRefreshTokenError, isSameRefreshToken, isString, isToken, isTransactionMeta, isTransactionMetaValid, isTransactionMetaValidForFlow, isTransactionMetaValidForOptions, isoToUTCString, loadFrame, loadPopup, omit, parseEmailVerifyCallback, parseFromUrl, PKCE as pkce, poll, postRefreshToken, postToTokenEndpoint, postToTransaction, preparePKCE, prepareTokenParams, proceed, recoverPassword, register, removeListener, removeNils, removeTrailingSlash, renewToken, renewTokens, renewTokensWithRefresh, resumeTransaction, revokeToken, saveTransactionMeta, startTransaction, toAbsoluteUrl, toQueryString, toRelativeUrl, transactionExists, transactionStatus, transactionStep, unlockAccount, urlParamsToObject, validateClaims, validateCodeChallengeMethod, validateToken, verifyToken, warn };","map":{"version":3,"names":["CustomError","_Error","message","_this","_super","call","_Object$setPrototypeOf","_assertThisInitialized","constructor","prototype","Error","AuthApiError","_CustomError","err","xhr","errorSummary","name","errorCode","errorLink","errorId","errorCauses","AuthPollStopError","AuthSdkError","msg","OAuthError","summary","error","error_description","isAuthApiError","obj","a","str","atob","b","btoa","c","crypto","stringToBase64Url","b64","base64ToBase64Url","replace","base64UrlToBase64","b64u","base64UrlToString","length","utf8","decodeURIComponent","escape","e","stringToBuffer","buffer","Uint8Array","i","charCodeAt","base64UrlDecode","base64UrlToBuffer","from","bufferToBase64Url","bin","_reduceInstanceProperty","_context","s","byte","String","fromCharCode","getOidcHash","TextEncoder","encode","subtle","digest","then","arrayBuffer","intBuffer","firstHalf","_sliceInstanceProperty","hash","apply","getNativeConsole","window","console","undefined","getConsole","nativeConsole","log","warn","group","groupEnd","text","deprecate","deprecateWrap","fn","arguments","isoToUTCString","parts","match","isoTime","Date","UTC","isoDate","toUTCString","genRandomString","randomCharset","random","cl","Math","floor","delay","ms","_Promise","resolve","setTimeout","bind","ctx","additionalArgs","Array","args","_concatInstanceProperty","extend","obj1","objArray","forEach","prop","Object","hasOwnProperty","removeNils","cleaned","value","clone","_JSON$stringify","JSON","parse","omit","newobj","props","_len","_key","p","_indexOfInstanceProperty","find","collection","searchParams","item","found","getLink","linkName","altName","_links","link","isString","toString","isObject","isNumber","isFunction","isPromise","finally","isAbsoluteUrl","url","test","toAbsoluteUrl","baseUrl","removeTrailingSlash","concat","_context2","toRelativeUrl","substring","toQueryString","key","push","encodeURIComponent","join","path","trimmed","verifyToken$1","idToken","format","algo","extractable","usages","use","importKey","cryptoKey","jwt","split","payload","b64Signature","signature","verify","STATE_TOKEN_KEY_NAME","DEFAULT_POLLING_DELAY","DEFAULT_MAX_CLOCK_SKEW","DEFAULT_CACHE_DURATION","REDIRECT_OAUTH_PARAMS_NAME","REDIRECT_STATE_COOKIE_NAME","REDIRECT_NONCE_COOKIE_NAME","TOKEN_STORAGE_NAME","CACHE_STORAGE_NAME","PKCE_STORAGE_NAME","TRANSACTION_STORAGE_NAME","SHARED_TRANSACTION_STORAGE_NAME","ORIGINAL_URI_STORAGE_NAME","IDX_RESPONSE_STORAGE_NAME","ACCESS_TOKEN_STORAGE_KEY","ID_TOKEN_STORAGE_KEY","REFRESH_TOKEN_STORAGE_KEY","REFERRER_PATH_STORAGE_KEY","MIN_VERIFIER_LENGTH","MAX_VERIFIER_LENGTH","DEFAULT_CODE_CHALLENGE_METHOD","IDX_API_VERSION","setRequestHeader","authClient","headerName","headerValue","options","headers","httpRequest","sdk","method","saveAuthnState","accessToken","withCredentials","storageUtil","storage","httpCache","storageManager","getHttpCache","cookies","cacheResponse","cacheContents","getStorage","cachedResponse","now","expiresAt","response","oktaUserAgentHeader","_oktaUserAgent","getHttpHeader","_Object$assign","ajaxOptions","data","res","httpRequestClient","resp","responseText","_typeof","stateToken","delete","set","updateStorage","catch","serverErr","status","transformErrorXHR","get","getIssuerOrigin","getOptions","post","postOptions","addStateToken","builtArgs","getStateToken","getPollFn","ref","delay$1","rememberDevice","autoPush","transactionCallBack","pollLink","pollFn","opts","reject","href","isPolling","retryCount","recursivePoll","pollRes","factorResult","AuthTransaction","delayLength","pow","interactionHandle","flattenEmbedded","cancel","link2fn","isArray","lk","hints","allow","factorType","provider","params","profile","updatePhone","postToTransaction","links2fns","fns","type","poll","objArr","o","ol","embedded","_embedded","transactionStatus","resumeTransaction","tx","exists","_get","introspectAuthn","transactionStep","transactionExists","dec2hex","dec","substr","getRandomString","ceil","getRandomValues","_Array$from","generateVerifier","prefix","verifier","computeChallenge","PKCE","sessionExists","session","getSession","refresh","user","closeSession","refreshSession","setCookieAndRedirect","sessionToken","redirectUrl","location","assign","checkAccountSetupComplete","token","convertTokenParamsToOAuthParams","tokenParams","clientId","responseType","oauthParams","codeChallenge","codeChallengeMethod","display","idp","idpScope","loginHint","maxAge","nonce","prompt","redirectUri","responseMode","state","mayBeArray","_context3","scopes","scope","buildAuthorizeParams","oauthQueryParams","extraParams","validateOptions","authorizationCode","interactionCode","codeVerifier","getPostData","code","clientSecret","postToTokenEndpoint","urls","tokenUrl","postRefreshToken","refreshToken","_mapInstanceProperty","_Object$entries","client_id","grant_type","refresh_token","_ref","_ref2","getWellKnown","issuer","authServerUri","getKey","kid","wellKnown","jwksUri","cachedKey","_keysInstanceProperty","clearStorage","addListener","eventTarget","addEventListener","attachEvent","removeListener","removeEventListener","detachEvent","loadFrame","src","iframe","document","createElement","style","body","appendChild","loadPopup","title","popupTitle","appearance","open","addPostMessageListener","timeout","responseHandler","timeoutId","msgReceivedOrTimeout","origin","clearTimeout","generateState","generateNonce","getIssuer","getOAuthBaseUrl","getOAuthDomain","domain","getOAuthUrls","authorizeUrl","userinfoUrl","logoutUrl","revokeUrl","isWindowsPhone","isBrowser","isIE11OrLess","documentMode","getUserAgent","navigator","userAgent","isFingerprintSupported","agent","isPopupPostMessageSupported","isIE8or9","postMessage","isTokenVerifySupported","hasTextEncoder","isPKCESupported","isHTTPS","protocol","isLocalhost","hostname","getDefaultTokenParams","_sdk$options","pkce","ignoreSignature","defaultRedirectUri","isInteractionRequiredError","oauthError","isAuthorizationCodeError","authApiError","errorResponse","responseJSON","hasTokensInHash","hasAuthorizationCode","hashOrSearch","hasInteractionCode","hasErrorInUrl","isRedirectUri","uri","authParams","isCodeFlow","getHashOrSearch","codeFlow","useQuery","search","isLoginRedirect","hasCode","isInteractionRequired","createOAuthMeta","oauthMeta","pkceMeta","assertPKCESupport","features","errorMessage","validateCodeChallengeMethod","_x","_x2","_validateCodeChallengeMethod","_callee","wellKnownResponse","methods","_regeneratorRuntime","wrap","_callee$","prev","next","sent","abrupt","stop","preparePKCE","_x3","_x4","_preparePKCE","_callee2","_tokenParams","_callee2$","prepareTokenParams","_x5","_prepareTokenParams","_callee3","defaults","_args3","_callee3$","isSameRefreshToken","isRefreshTokenError","urlParamsToObject","plus2space","paramSplit","fragment","charAt","param","exec","validateClaims","claims","validationParams","aud","iss","iat","exp","ignoreLifetime","maxClockSkew","isObjectWithProperties","_Object$values","isOAuthTransactionMeta","isPKCETransactionMeta","isIdxTransactionMeta","isCustomAuthTransactionMeta","isAllStringValues","_findInstanceProperty","isTransactionMeta","IdxStatus","AuthenticatorKey","IdxFeature","isAuthenticator","id","isToken","isAccessToken","isIDToken","isRefreshToken","validateToken","decodeToken","decodedToken","header","revokeToken","_revokeToken","creds","token_type_hint","exchangeCodeForTokens","getTokenOptions","handleResponseOptions","handleOAuthResponse","transactionManager","clear","verifyToken","_verifyToken","configuredIssuer","_yield$getWellKnown","validationOptions","valid","at_hash","validateResponse","_handleOAuthResponse","tokenDict","expiresIn","tokenType","accessJwt","idJwt","idTokenObj","interaction_code","expires_in","token_type","access_token","id_token","decode","Number","tokens","getToken","popupWindow","sessionTokenOverrides","idpOverrides","requestUrl","endpoint","flowType","iframePromise","iframeEl","contains","_a","parentElement","removeChild","oauthPromise","popupPromise","closePoller","setInterval","closed","clearInterval","close","getWithoutPrompt","renewTokensWithRefresh","_renewTokensWithRefresh","refreshTokenObject","renewTokenParams","tokenResponse","_yield$handleOAuthRes","tokenManager","updateRefreshToken","throwInvalidTokenError","getSingleToken","originalToken","renewToken","_renewToken","getTokensSync","renewTokens","_renewTokens","_getDefaultTokenParam","getUserInfo","_getUserInfo","accessTokenObject","idTokenObject","getTokens","userInfo","sub","authenticateHeader","getResponseHeader","errorMatches","errorDescriptionMatches","errorDescription","getWithPopup","getWithRedirect","_getWithRedirect","meta","_args","save","oauth","_setLocation","removeHash","nativeHistory","parseFromUrl","_getHistory","nativeDoc","_getDocument","nativeLoc","_getLocation","replaceState","pathname","removeSearch","getResponseMode","defaultResponseMode","parseOAuthResponseFromUrl","paramStr","cleanOAuthResponseFromUrl","_parseFromUrl","load","getEnrolledCredentials","authenticatorEnrollments","credentials","enrollement","credentialId","buildCredentialCreationOptions","activationData","publicKey","rp","displayName","challenge","pubKeyCredParams","attestation","authenticatorSelection","excludeCredentials","buildCredentialRequestOptions","challengeData","userVerification","allowCredentials","getAttestation","credential","clientData","clientDataJSON","attestationObject","getAssertion","authenticatorData","signatureData","getPKCEStorage","browserHasLocalStorage","getLocalStorage","testStorage","browserHasSessionStorage","getSessionStorage","testStorageType","storageType","supported","getStorageByType","storageProvider","getCookieStorage","getInMemoryStorage","findStorageType","types","curType","nextType","shift","localStorage","sessionStorage","secure","sameSite","sessionCookie","getItem","setItem","removeItem","useSeparateCookies","_Object$keys","k","existingValues","storageKey","valueToStore","inMemoryStore","_this2","cookieOptions","expires","Cookies","_delete","remove","SdkClock","localOffset","_parseInt","create","DEFAULT_OPTIONS","autoRenew","autoRemove","syncStorage","clearPendingRemoveTokens","expireEarlySeconds","_storageEventDelay","EVENT_EXPIRED","EVENT_RENEWED","EVENT_ADDED","EVENT_REMOVED","EVENT_ERROR","defaultState","expireTimeouts","renewPromise","TokenManager","emitter","storageOptions","getTokenStorage","clock","on","off","_createClass","start","setExpireEventTimeoutAll","clearExpireEventTimeoutAll","getExpireTime","expireTime","hasExpired","emitExpired","emit","emitRenewed","freshToken","oldToken","emitAdded","emitRemoved","emitError","emitEventsForCrossTabsStorageUpdate","newValue","oldValue","oldTokens","getTokensFromStorageValue","newTokens","newToken","clearExpireEventTimeout","setExpireEventTimeout","expireEventWait","max","expireEventTimeout","tokenStorage","resetExpireEventTimeoutAll","add","setStorage","getSync","_asyncToGenerator","mark","_getTokens","getStorageKeyByType","_filterInstanceProperty","getTokenType","setTokens","accessTokenCb","idTokenCb","refreshTokenCb","handleTokenCallback","_this3","handleAdded","handleRenewed","handleRemoved","existingTokens","existingToken","removedToken","_context4","renew","validateToken$1","_this4","tokenKey","pendingRemove","_this5","addPendingRemoveFlags","AutoRenewService","started","renewTimeQueue","onTokenExpiredHandler","shouldThrottleRenew","firstTime","lastTime","requiresLeadership","canStart","isStarted","SyncStorageService","storageListener","handleCrossTabsStorageChange","syncTimeout","ServiceManager","_sdk$tokenManager$get","defaultOptions","services","_Map","onLeaderDuplicate","onLeader","knownServices","svc","createService","startServices","isLeader","elector","hasLeader","isLeaderRequired","_toConsumableArray","_valuesInstanceProperty","some","srv","startElector","stopElector","stopServices","getService","_iterator","_step","n","done","_iterator2","_step2","canUseLeaderElection","channel","broadcastChannelName","BroadcastChannel","createLeaderElection","onduplicate","awaitLeadership","die","_b","service","PromiseQueue","quiet","queue","running","thisObject","run","queueItem","fingerprint","listener","promise","source","INITIAL_AUTH_STATE","DEFAULT_PENDING","updateAuthStatePromise","canceledTimes","EVENT_AUTH_STATE_CHANGE","MAX_PROMISE_CANCEL_TIMES","isSameAuthState","prevState","isAuthenticated","AuthStateManager","_sdk","_pending","_authState","_logOptions","_prevAuthState","_transformQueue","_setLogOptions","event","updateAuthState","getAuthState","getPreviousAuthState","_updateAuthState","_this$_sdk$options","transformAuthState","devMode","emitAuthStateChange","finalPromise","cancelablePromise","_this2$_logOptions","authState","origPromise","curPromise","PCancelable","_","onCancel","shouldReject","emitAndResolve","isCanceled","_this2$_sdk$tokenMana","subscribe","handler","unsubscribe","SavedObject","storageName","storageString","logServerSideMemoryStorageWarning","StorageManager","storageManagerOptions","getOptionsForSection","sectionName","overrideOptions","_options","storageTypes","idx","getTransactionStorage","getSharedTansactionStorage","getOriginalUriStorage","getIdxResponseStorage","transactionStorage","transaction","val","getLegacyPKCEStorage","getLegacyOAuthParamsStorage","isRawIdxResponse","version","isIdxResponse","rawIdxState","MAX_ENTRY_LIFETIME","pruneSharedStorage","sharedStorage","entries","entry","age","dateCreated","saveTransactionToSharedStorage","loadTransactionFromSharedStorage","clearTransactionFromSharedStorage","TransactionManager","legacyWidgetSupport","saveNonceCookie","saveStateCookie","saveParamsCookie","enableSharedStorage","saveLastResponse","clearSharedStorage","clearIdxResponse","clearLegacyOAuthParams","clearLegacyPKCE","muteWarning","cookieStorage","loadLegacyOAuthParams","loadLegacyPKCE","saveIdxResponse","loadIdxResponse","storedValue","rawIdxResponse","stateHandle","assertValidConfig","isUrlRegex","RegExp","appJsonContentTypeRegex","readData","toLowerCase","json","formatResult","_entriesInstanceProperty","pair","result","fetchRequest","contentType","_slicedToArray","fetch","crossFetch","fetchPromise","ok","storageUtil$1","STORAGE_MANAGER_OPTIONS","cache","getCookieSettings","cookieSettings","getDefaultOptions","mergeOptions","buildOptions","postLogoutRedirectUri","useInteractionCodeFlow","restoreOriginalUri","flow","recoveryToken","activationToken","createTransactionMeta","_createTransactionMeta","_Object$assign2","_Object$assign2$flow","_Object$assign2$withC","_Object$assign2$activ","_Object$assign2$recov","hasSavedInteractionHandle","savedMeta","getSavedTransactionMeta","isTransactionMetaValid","getTransactionMeta","_getTransactionMeta","validExistingMeta","saveTransactionMeta","clearTransactionMeta","keys","isTransactionMetaValidForOptions","isTransactionMetaValidForFlow","shouldValidateFlow","mismatch","getResponse","interact","_interact","_meta","newMeta","redirect_uri","code_challenge","code_challenge_method","activation_token","recovery_token","client_secret","interaction_handle","isFieldMutable","field","mutable","divideSingleActionParamsByMutability","action","defaultParamsForAction","neededParamsForAction","immutableParamsForAction","divideActionParamsByMutability","actionList","neededParams","defaultParams","immutableParams","_divideSingleActionPa","generateDirectFetch","actionDefinition","_ref$defaultParamsFor","_ref$immutableParamsF","toPersist","_ref$toPersist","target","_response","wwwAuthHeader","idxResponse","accepts","makeIdxState$1","t0","stepUp","generateIdxAction","generator","_divideActionParamsBy","generateRemediationFunctions","remediationValue","_Object$fromEntries","remediation","SKIP_FIELDS","parseNonRemediations","actions","context","fieldIsObject","rel","fieldValue","info","__rest","subField","expandRelatesTo","query","JSONPath","innerValue","convertRemediationAction","remediationActions","actionFn","parseIdxResponse","remediationData","remediations","_parseNonRemediations","requestDidSucceed","_parseIdxResponse","neededToProceed","proceed","remediationChoice","paramsFromUser","remediationChoiceObject","findCode","_c","successWithInteractionCode","v1","makeIdxState","parsersForVersion","validateVersionConfig","cleanVersion","_parsersForVersion","introspect","_introspect","savedIdxResponse","_withCredentials","Accept","getAllValues","idxRemediation","r","getRequiredValues","required","cur","titleCase","toUpperCase","getAuthenticatorFromRemediation","formatAuthenticator","incoming","authenticator","compareAuthenticators","auth1","auth2","findMatchedOption","authenticators","option","relatesTo","_ret","_loop","Remediator","values","formatAuthenticators","hasAuthenticatorInList","existing","authenticatorsData","acc","getName","canRemediate","needed","hasData","getData","allValues","_val","getNextStep","inputs","getInputs","getAuthenticator","inputsFromRemediation","inputFromRemediation","input","visible","messages","alias","aliases","_context5","_includesInstanceProperty","getValuesAfterProceed","inputsFromRemediator","_context6","authenticatorFromRemediation","_context7","form","enrollmentId","_context8","_ref3","getMessages","_context9","_context10","Authenticator","VerificationCodeAuthenticator","_Authenticator","_inherits","_createSuper$s","_classCallCheck","canVerify","verificationCode","otp","mapCredentials","passcode","idxRemediationValue","OktaVerifyTotp","_VerificationCodeAuth","_createSuper$r","totp","OktaPassword","_createSuper$q","password","SecurityQuestionEnrollment","_createSuper$p","questionKey","answer","question","label","SecurityQuestionVerification","_createSuper$o","contextualData","enrolledQuestion","WebauthnEnrollment","_createSuper$n","WebauthnVerification","_createSuper$m","OKTA_PASSWORD","SECURITY_QUESTION","OKTA_VERIFY","WEBAUTHN","VerifyAuthenticator","_Remediator","_createSuper$l","nextStep","_getPrototypeOf","getInputCredentials","trimmedValues","valueKey","_defineProperty","EnrollAuthenticator","_VerifyAuthenticator","_createSuper$k","remediationName","EnrollPoll","_createSuper$j","startPolling","step","common","currentAuthenticator","SelectEnrollmentChannel","_createSuper$i","Boolean","getChannels","EnrollmentChannelData","_createSuper$h","getInputEmail","getInputPhoneNumber","email","phoneNumber","ChallengeAuthenticator","_createSuper$g","ChallengePoll","_EnrollPoll","_createSuper$f","ResetAuthenticator","_createSuper$e","EnrollProfile","_createSuper$d","userProfileFromValues","userProfile","userProfileFromRemediation","curr","mapUserProfile","profileAttributes","attributeNames","attributeValues","attributeName","getInputUserProfile","getErrorMessages","errorRemediation","errors","Identify","_createSuper$c","map","_this$getData","identifier","_this$values","ReEnrollAuthenticator","_createSuper$b","newPassword","challengeType","RedirectIdp","_createSuper$a","_this$remediation","SelectAuthenticator","_createSuper$9","matchedOption","mapAuthenticator","_this$values2","selectedAuthenticator","selectedOption","getInputAuthenticator","SelectAuthenticatorAuthenticate","_SelectAuthenticator","_createSuper$8","isRecoveryFlow","hasPasswordInOptions","SelectAuthenticatorEnroll","_createSuper$7","SelectAuthenticatorUnlockAccount","_createSuper$6","authenticatorMap","methodTypeOption","methodTypeValue","methodType","getInputUsername","SelectEnrollProfile","_createSuper$5","AuthenticatorData","_createSuper$4","formatAuthenticatorData","getAuthenticatorData","mapAuthenticatorDataFromValues","getMethodTypes","_this$authenticator","AuthenticatorVerificationData","_AuthenticatorData","_createSuper$3","shouldProceedWithEmailAuthenticator","AuthenticatorEnrollmentData","_createSuper$2","Skip","_createSuper$1","skip","isTerminalResponse","canSkipFn","canResendFn","actionName","getMessagesFromIdxRemediationValue","messagesFromForm","optionValues","messagesFromOptions","getMessagesFromResponse","globalMessages","fieldMessages","seen","filtered","i18n","getEnabledFeatures","PASSWORD_RECOVERY","REGISTRATION","SOCIAL_IDP","_ref4","ACCOUNT_UNLOCK","getAvailableSteps","remediatorMap","remediators","remediatorClass","T","remediator","filterValuesForRemediation","valuesForRemediation","getRemediator","idxRemediations","_ref5","remediatorCandidates","_iterator3","_step3","_context11","_remediation","isRemeditionInFlow","_T","canSkip","canResend","handleIdxError","terminal","getActionFromValues","resend","removeActionFromValues","removeActionFromOptions","remediate","_remediate","_idxResponse","actionFromValues","actionFromOptions","_createForOfIteratorHelper","valuesWithoutExecutedAction","optionsWithoutExecutedAction","remediationAction","_loop$","v","canceled","t1","delegateYield","f","finish","t2","t3","AuthenticationFlow","PasswordRecoveryFlow","RegistrationFlow","AccountUnlockFlow","getFlowSpecification","oktaAuth","initializeValues","knownOptions","initializeData","PENDING","getFlow","setFlow","flowSpec","getDataFromIntrospect","interactResponse","getDataFromRemediate","autoRemediate","shouldRemediate","_yield$remediate","idxResponseFromRemediation","finalizeData","_x6","_x7","_callee4","shouldSaveResponse","shouldClearTransaction","enabledFeatures","availableSteps","hasActions","hasErrors","isTerminalSuccess","_callee4$","TERMINAL","class","CANCELED","SUCCESS","handleError","FAILURE","_x8","_run","_callee5","_data","_requestDidSucceed","_args5","_callee5$","authenticate","_authenticate","_cancel","EmailVerifyCallbackError","_createSuper","isEmailVerifyCallbackError","isEmailVerifyCallback","urlPath","parseEmailVerifyCallback","handleEmailVerifyCallback","_handleEmailVerifyCallback","_parseEmailVerifyCall","canProceed","_proceed","_poll","availablePollingRemeditaions","_args2","_Number$isInteger","startTransaction","_startTransaction","register","_register","_yield$startTransacti","_error","recoverPassword","_recoverPassword","handleInteractionCodeRedirect","_handleInteractionCodeRedirect","savedState","_URL","_yield$authClient$tok","_URL2","unlockAccount","_unlockAccount","OktaUserAgent","environments","addEnvironment","env","maybeAddNodeEnvironment","getVersion","process","versions","node","OktaAuth","resume","handleLogin","_tokenQueue","useQueue","getWithRedirectFn","getWithRedirectApi","parseFromUrlFn","parseFromUrlApi","history","revoke","syncMethods","boundStartTransaction","http","Emitter","authStateManager","serviceManager","setHeaders","signInWithCredentials","_postToTransaction","sendFingerprint","originalUri","additionalParams","setOriginalUri","accessTokenKey","_callee6","refreshTokenKey","_callee6$","getSignOutRedirectUrl","idTokenHint","logoutUri","_callee7","defaultUri","currentUri","revokeAccessToken","revokeRefreshToken","_callee7$","reload","clearTokensBeforeRedirect","webfinger","_callee8","_this$tokenManager$ge","shouldRenew","shouldRemove","_this$tokenManager$ge2","_this$tokenManager$ge3","_args8","_callee8$","onExpiredToken","_callee9","_this$tokenManager$ge4","_callee9$","getIdToken","_this$tokenManager$ge5","getAccessToken","_this$tokenManager$ge6","getRefreshToken","_this$tokenManager$ge7","_callee10","_yield$this$token$par","_callee10$","getOriginalUri","removeOriginalUri","isLoginRedirect$1","_callee11","oAuthResponse","_callee11$","storeTokensFromRedirect","isPKCE","hasResponseType","_context12","isAuthorizationCodeFlow","forgotPassword","verifyRecoveryToken","_callee12","_callee12$","_context13","crypto$1","webauthn","constants"],"sources":["C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\errors\\CustomError.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\errors\\AuthApiError.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\errors\\AuthPollStopError.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\errors\\AuthSdkError.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\errors\\OAuthError.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\errors\\index.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\crypto\\browser.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\crypto\\base64.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\crypto\\oidcHash.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\util\\console.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\util\\misc.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\util\\object.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\util\\types.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\util\\url.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\crypto\\verifyToken.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\constants.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\http\\headers.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\http\\request.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\tx\\util.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\tx\\poll.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\tx\\AuthTransaction.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\tx\\api.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\oidc\\util\\pkce.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\session.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\oidc\\endpoints\\authorize.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\oidc\\endpoints\\token.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\oidc\\endpoints\\well-known.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\oidc\\util\\browser.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\oidc\\util\\oauth.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\features.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\oidc\\util\\defaultTokenParams.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\oidc\\util\\errors.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\oidc\\util\\loginRedirect.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\oidc\\util\\oauthMeta.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\oidc\\util\\prepareTokenParams.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\oidc\\util\\refreshToken.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\oidc\\util\\urlParams.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\oidc\\util\\validateClaims.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\types\\Transaction.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\types\\api.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\types\\Token.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\oidc\\util\\validateToken.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\oidc\\decodeToken.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\oidc\\revokeToken.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\oidc\\exchangeCodeForTokens.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\oidc\\verifyToken.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\oidc\\handleOAuthResponse.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\oidc\\getToken.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\oidc\\getWithoutPrompt.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\oidc\\renewTokensWithRefresh.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\oidc\\renewToken.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\oidc\\renewTokens.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\oidc\\getUserInfo.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\oidc\\getWithPopup.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\oidc\\getWithRedirect.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\oidc\\parseFromUrl.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\crypto\\webauthn.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\browser\\browserStorage.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\clock.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\TokenManager.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\services\\AutoRenewService.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\services\\SyncStorageService.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\ServiceManager.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\PromiseQueue.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\browser\\fingerprint.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\AuthStateManager.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\SavedObject.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\StorageManager.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\types\\idx-js.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\util\\sharedStorage.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\TransactionManager.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\builderUtil.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\fetch\\fetchRequest.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\options\\browser.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\options\\index.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\transactionMeta.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\interact.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\idxState\\v1\\actionParser.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\idxState\\v1\\generateIdxAction.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\idxState\\v1\\remediationParser.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\idxState\\v1\\idxResponseParser.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\idxState\\v1\\makeIdxState.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\idxState\\v1\\parsers.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\idxState\\index.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\introspect.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\remediators\\util.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\authenticator\\util.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\remediators\\Base\\Remediator.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\authenticator\\Authenticator.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\authenticator\\VerificationCodeAuthenticator.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\authenticator\\OktaVerifyTotp.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\authenticator\\OktaPassword.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\authenticator\\SecurityQuestionEnrollment.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\authenticator\\SecurityQuestionVerification.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\authenticator\\WebauthnEnrollment.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\authenticator\\WebauthnVerification.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\authenticator\\getAuthenticator.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\remediators\\Base\\VerifyAuthenticator.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\remediators\\EnrollAuthenticator.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\remediators\\EnrollPoll.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\remediators\\SelectEnrollmentChannel.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\remediators\\EnrollmentChannelData.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\remediators\\ChallengeAuthenticator.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\remediators\\ChallengePoll.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\remediators\\ResetAuthenticator.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\remediators\\EnrollProfile.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\remediators\\Identify.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\remediators\\ReEnrollAuthenticator.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\remediators\\RedirectIdp.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\remediators\\Base\\SelectAuthenticator.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\remediators\\SelectAuthenticatorAuthenticate.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\remediators\\SelectAuthenticatorEnroll.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\remediators\\SelectAuthenticatorUnlockAccount.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\remediators\\SelectEnrollProfile.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\remediators\\Base\\AuthenticatorData.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\remediators\\AuthenticatorVerificationData.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\remediators\\AuthenticatorEnrollmentData.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\remediators\\Skip.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\util.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\remediate.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\flow\\AuthenticationFlow.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\flow\\PasswordRecoveryFlow.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\flow\\RegistrationFlow.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\flow\\AccountUnlockFlow.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\flow\\FlowSpecification.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\run.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\authenticate.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\cancel.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\emailVerify.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\proceed.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\poll.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\startTransaction.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\register.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\recoverPassword.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\handleInteractionCodeRedirect.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\idx\\unlockAccount.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\OktaUserAgent.ts","C:\\Users\\User\\Desktop\\full-stack\\full-stack-projects\\library-app\\frontend\\react-library\\node_modules\\@okta\\lib\\OktaAuth.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport default class CustomError extends Error {\n  constructor(message: string) {\n    // https://stackoverflow.com/questions/41102060/typescript-extending-error-class\n    super(message); // 'Error' breaks prototype chain here\n    Object.setPrototypeOf(this, new.target.prototype); // restore prototype chain\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport CustomError from './CustomError';\nimport { APIError, FieldError, HttpResponse } from '../types';\n\nexport default class AuthApiError extends CustomError implements APIError {\n  errorSummary: string;\n  errorCode?: string;\n  errorLink?: string;\n  errorId?: string;\n  errorCauses?: Array<FieldError>;\n  xhr?: HttpResponse;\n\n  constructor(err: APIError, xhr?: HttpResponse) {\n    const message = err.errorSummary;\n    super(message);\n\n    this.name = 'AuthApiError';\n    this.errorSummary = err.errorSummary;\n    this.errorCode = err.errorCode;\n    this.errorLink = err.errorLink;\n    this.errorId = err.errorId;\n    this.errorCauses = err.errorCauses;\n\n    if (xhr) {\n      this.xhr = xhr;\n    }\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport CustomError from './CustomError';\n\nexport default class AuthPollStopError extends CustomError {\n  constructor() {\n    const message = 'The poll was stopped by the sdk';\n    super(message);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport CustomError from './CustomError';\nimport { APIError, FieldError } from '../types';\n\nexport default class AuthSdkError extends CustomError implements APIError {\n  errorSummary: string;\n  errorCode: string;\n  errorLink: string;\n  errorId: string;\n  errorCauses: Array<FieldError>;\n  xhr?: XMLHttpRequest;\n\n  constructor(msg: string, xhr?: XMLHttpRequest) {\n    super(msg);\n    this.name = 'AuthSdkError';\n    this.errorCode = 'INTERNAL';\n    this.errorSummary = msg;\n    this.errorLink = 'INTERNAL';\n    this.errorId = 'INTERNAL';\n    this.errorCauses = [];\n    if (xhr) {\n      this.xhr = xhr;\n    }\n  }\n}\n","/* eslint-disable camelcase */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport CustomError from './CustomError';\n\nexport default class OAuthError extends CustomError {\n  errorCode: string;\n  errorSummary: string;\n\n  // for widget / idx-js backward compatibility\n  error: string;\n  error_description: string;\n\n  constructor(errorCode: string, summary: string) {\n    super(summary);\n\n    this.name = 'OAuthError';\n    this.errorCode = errorCode;\n    this.errorSummary = summary;\n\n    // for widget / idx-js backward compatibility\n    this.error = errorCode;\n    this.error_description = summary;\n  }\n}\n\n","\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport AuthApiError from './AuthApiError';\nimport AuthPollStopError from './AuthPollStopError';\nimport AuthSdkError from './AuthSdkError';\nimport OAuthError from './OAuthError';\n\nfunction isAuthApiError(obj: any): obj is AuthApiError {\n  return (obj instanceof AuthApiError);\n}\n\nexport {\n  isAuthApiError,\n  AuthApiError,\n  AuthPollStopError,\n  AuthSdkError,\n  OAuthError\n};\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n/* global atob, btoa, crypto */\nconst a = function(str) { return atob(str); };\nconst b = function (str) { return btoa(str); };\nconst c = typeof crypto === 'undefined' ? null : crypto;\n\nexport { a as atob, b as btoa, c as webcrypto };\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { AuthSdkError } from '../errors';\nimport { atob, btoa } from './webcrypto';\n\n// converts a string to base64 (url/filename safe variant)\nexport function stringToBase64Url(str) {\n  var b64 = btoa(str);\n  return base64ToBase64Url(b64);\n}\n\n// converts a standard base64-encoded string to a \"url/filename safe\" variant\nexport function base64ToBase64Url(b64) {\n  return b64.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n}\n\n// converts a \"url/filename safe\" base64 string to a \"standard\" base64 string\nexport function base64UrlToBase64(b64u) {\n  return b64u.replace(/-/g, '+').replace(/_/g, '/');\n}\n\nexport function base64UrlToString(b64u) {\n  var b64 = base64UrlToBase64(b64u);\n  switch (b64.length % 4) {\n    case 0:\n      break;\n    case 2:\n      b64 += '==';\n      break;\n    case 3:\n      b64 += '=';\n      break;\n    default:\n      throw new AuthSdkError('Not a valid Base64Url');\n  }\n  var utf8 = atob(b64);\n  try {\n    return decodeURIComponent(escape(utf8));\n  } catch (e) {\n    return utf8;\n  }\n}\n\nexport function stringToBuffer(str) {\n  var buffer = new Uint8Array(str.length);\n  for (var i = 0; i < str.length; i++) {\n    buffer[i] = str.charCodeAt(i);\n  }\n  return buffer;\n}\n\nexport function base64UrlDecode(str) {\n  return atob(base64UrlToBase64(str));\n}\n\n// Converts base64 string to binary data view\nexport function base64UrlToBuffer(b64u) {\n  return Uint8Array.from(base64UrlDecode(b64u), (c: string) => c.charCodeAt(0));\n}\n\n// Converts an ArrayBuffer object that contains binary data to base64 encoded string\nexport function bufferToBase64Url(bin) {\n  return btoa(new Uint8Array(bin).reduce((s, byte) => s + String.fromCharCode(byte), ''));\n}\n\n\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* global TextEncoder */\nimport { stringToBase64Url } from './base64';\nimport { webcrypto } from './webcrypto';\n\nexport function getOidcHash(str) {  \n  var buffer = new TextEncoder().encode(str);\n  return webcrypto.subtle.digest('SHA-256', buffer).then(function(arrayBuffer) {\n    var intBuffer = new Uint8Array(arrayBuffer);\n    var firstHalf = intBuffer.slice(0, 16);\n    var hash = String.fromCharCode.apply(null, firstHalf as unknown as number[]);\n    var b64u = stringToBase64Url(hash); // url-safe base64 variant\n    return b64u;\n  });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n/* global window */\n\nexport function getNativeConsole() {\n  if (typeof window !== 'undefined') {\n    return window.console;\n  } else if (typeof console !== 'undefined') {\n    return console;\n  } else {\n    return undefined;\n  }\n}\n\nexport function getConsole() {\n  var nativeConsole = getNativeConsole();\n  if (nativeConsole && nativeConsole.log) {\n    return nativeConsole;\n  }\n  return {\n    log: function() {},\n    warn: function() {},\n    group: function() {},\n    groupEnd: function() {}\n  };\n}\n\nexport function warn(text) {\n  /* eslint-disable no-console */\n  getConsole().warn('[okta-auth-sdk] WARN: ' + text);\n  /* eslint-enable */\n}\n\nexport function deprecate(text) {\n  /* eslint-disable no-console */\n  getConsole().warn('[okta-auth-sdk] DEPRECATION: ' + text);\n  /* eslint-enable */\n}\n\nexport function deprecateWrap(text, fn) {\n  return function() {\n    deprecate(text);\n    return fn.apply(null, arguments);\n  };\n}\n\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport function isoToUTCString(str) {\n  var parts = str.match(/\\d+/g),\n      isoTime = Date.UTC(parts[0], parts[1] - 1, parts[2], parts[3], parts[4], parts[5]),\n      isoDate = new Date(isoTime);\n\n  return isoDate.toUTCString();\n}\n\nexport function genRandomString(length) {\n  var randomCharset = 'abcdefghijklnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  var random = '';\n  for (var c = 0, cl = randomCharset.length; c < length; ++c) {\n    random += randomCharset[Math.floor(Math.random() * cl)];\n  }\n  return random;\n}\n\nexport function delay(ms) {\n  return new Promise(function(resolve) {\n    setTimeout(resolve, ms);\n  });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport function bind(fn, ctx) {\n  var additionalArgs = Array.prototype.slice.call(arguments, 2);\n  return function() {\n    var args = Array.prototype.slice.call(arguments);\n    args = additionalArgs.concat(args);\n    return fn.apply(ctx, args);\n  };\n}\n\n// TODO: replace all references with `Object.assign` then remove this function\nexport function extend() {\n  // First object will be modified!\n  var obj1 = arguments[0];\n  // Properties from other objects will be copied over\n  var objArray = [].slice.call(arguments, 1);\n  objArray.forEach(function(obj) {\n    for (var prop in obj) {\n      // copy over all properties with defined values\n      if (Object.prototype.hasOwnProperty.call(obj, prop) && obj[prop] !== undefined) {\n        obj1[prop] = obj[prop];\n      }\n    }\n  });\n  return obj1; // return the modified object\n}\n\nexport function removeNils(obj) {\n  var cleaned = {};\n  for (var prop in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n      var value = obj[prop];\n      if (value !== null && value !== undefined) {\n        cleaned[prop] = value;\n      }\n    }\n  }\n  return cleaned;\n}\n\nexport function clone(obj) {\n  if (obj) {\n    var str = JSON.stringify(obj);\n    if (str) {\n      return JSON.parse(str);\n    }\n  }\n  return obj;\n}\n\n// Analogous to _.omit\nexport function omit(obj, ...props: any[]) {\n  // var props = Array.prototype.slice.call(arguments, 1);\n  var newobj = {};\n  for (var p in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, p) && props.indexOf(p) == -1) {\n      newobj[p] = obj[p];\n    }\n  }\n  return clone(newobj);\n}\n\nexport function find(collection, searchParams) {\n  var c = collection.length;\n  while (c--) {\n    var item = collection[c];\n    var found = true;\n    for (var prop in searchParams) {\n      if (!Object.prototype.hasOwnProperty.call(searchParams, prop)) {\n        continue;\n      }\n      if (item[prop] !== searchParams[prop]) {\n        found = false;\n        break;\n      }\n    }\n    if (found) {\n      return item;\n    }\n  }\n}\n\nexport function getLink(obj, linkName, altName?) {\n  if (!obj || !obj._links) {\n    return;\n  }\n\n  var link = clone(obj._links[linkName]);\n\n  // If a link has a name and we have an altName, return if they match\n  if (link && link.name && altName) {\n    if (link.name === altName) {\n      return link;\n    }\n  } else {\n    return link;\n  }\n}\n\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport function isString(obj: any): obj is string {\n  return Object.prototype.toString.call(obj) === '[object String]';\n}\n\nexport function isObject(obj: any): obj is object {\n  return Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function isNumber(obj: any): obj is number {\n  return Object.prototype.toString.call(obj) === '[object Number]';\n}\n\nexport function isFunction(fn: any): fn is (...any: any[]) => any {\n  return !!fn && {}.toString.call(fn) === '[object Function]';\n}\n\nexport function isPromise(obj) {\n  return obj && obj.finally && (typeof obj.finally === 'function');\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport function isAbsoluteUrl(url) {\n  return /^(?:[a-z]+:)?\\/\\//i.test(url);\n}\n\nexport function toAbsoluteUrl(url = '', baseUrl) {\n  if (isAbsoluteUrl(url)) {\n    return url;\n  }\n  baseUrl = removeTrailingSlash(baseUrl);\n  return url[0] === '/' ? `${baseUrl}${url}` : `${baseUrl}/${url}`;\n}\n\nexport function toRelativeUrl(url = '', baseUrl) {\n  if (isAbsoluteUrl(url)) {\n    url = url.substring(baseUrl.length);\n  }\n\n  return url[0] === '/' ? url : `/${url}`;\n}\n\nexport function toQueryString(obj) {\n  var str = [];\n  if (obj !== null) {\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key) &&\n          obj[key] !== undefined &&\n          obj[key] !== null) {\n        str.push(key + '=' + encodeURIComponent(obj[key]) as never);\n      }\n    }\n  }\n  if (str.length) {\n    return '?' + str.join('&');\n  } else {\n    return '';\n  }\n}\n\nexport function removeTrailingSlash(path) {\n  if (!path) {\n    return;\n  }\n  // Remove any whitespace before or after string\n  var trimmed = path.replace(/^\\s+|\\s+$/gm,'');\n  // Remove trailing slash(es)\n  trimmed = trimmed.replace(/\\/+$/, '');\n\n  return trimmed;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { clone } from '../util';\nimport { stringToBuffer, base64UrlDecode } from './base64';\nimport { webcrypto } from './webcrypto';\n\nexport function verifyToken(idToken, key) {\n  key = clone(key);\n\n  var format = 'jwk';\n  var algo = {\n    name: 'RSASSA-PKCS1-v1_5',\n    hash: { name: 'SHA-256' }\n  };\n  var extractable = true;\n  var usages = ['verify'];\n\n  // https://connect.microsoft.com/IE/feedback/details/2242108/webcryptoapi-importing-jwk-with-use-field-fails\n  // This is a metadata tag that specifies the intent of how the key should be used.\n  // It's not necessary to properly verify the jwt's signature.\n  delete key.use;\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  return webcrypto.subtle.importKey(\n    format,\n    key,\n    algo,\n    extractable,\n    usages\n  )\n  .then(function(cryptoKey) {\n    var jwt = idToken.split('.');\n    var payload = stringToBuffer(jwt[0] + '.' + jwt[1]);\n    var b64Signature = base64UrlDecode(jwt[2]);\n    var signature = stringToBuffer(b64Signature);\n\n    return webcrypto.subtle.verify(\n      algo,\n      cryptoKey,\n      signature,\n      payload\n    );\n  });\n}\n\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport const STATE_TOKEN_KEY_NAME = 'oktaStateToken';\nexport const DEFAULT_POLLING_DELAY = 500;\nexport const DEFAULT_MAX_CLOCK_SKEW = 300;\nexport const DEFAULT_CACHE_DURATION = 86400;\nexport const REDIRECT_OAUTH_PARAMS_NAME = 'okta-oauth-redirect-params';\nexport const REDIRECT_STATE_COOKIE_NAME = 'okta-oauth-state';\nexport const REDIRECT_NONCE_COOKIE_NAME = 'okta-oauth-nonce';\nexport const TOKEN_STORAGE_NAME = 'okta-token-storage';\nexport const CACHE_STORAGE_NAME = 'okta-cache-storage';\nexport const PKCE_STORAGE_NAME = 'okta-pkce-storage';\nexport const TRANSACTION_STORAGE_NAME = 'okta-transaction-storage';\nexport const SHARED_TRANSACTION_STORAGE_NAME = 'okta-shared-transaction-storage';\nexport const ORIGINAL_URI_STORAGE_NAME = 'okta-original-uri-storage';\nexport const IDX_RESPONSE_STORAGE_NAME = 'okta-idx-response-storage';\nexport const ACCESS_TOKEN_STORAGE_KEY = 'accessToken';\nexport const ID_TOKEN_STORAGE_KEY =  'idToken';\nexport const REFRESH_TOKEN_STORAGE_KEY =  'refreshToken';\nexport const REFERRER_PATH_STORAGE_KEY = 'referrerPath';\n\n// Code verifier: Random URL-safe string with a minimum length of 43 characters.\n// Code challenge: Base64 URL-encoded SHA-256 hash of the code verifier.\nexport const MIN_VERIFIER_LENGTH = 43;\nexport const MAX_VERIFIER_LENGTH = 128;\nexport const DEFAULT_CODE_CHALLENGE_METHOD = 'S256';\n\nexport const IDX_API_VERSION = '1.0.0';","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { OktaAuthInterface } from '../types';\n\nexport function setRequestHeader(authClient: OktaAuthInterface, headerName, headerValue) {\n  authClient.options.headers = authClient.options.headers || {};\n  authClient.options.headers[headerName] = headerValue;\n}","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n/* eslint-disable complexity */\nimport { isString, clone, isAbsoluteUrl, removeNils } from '../util';\nimport { STATE_TOKEN_KEY_NAME, DEFAULT_CACHE_DURATION } from '../constants';\nimport { OktaAuthInterface, RequestOptions, FetchOptions, RequestData } from '../types';\nimport { AuthApiError, OAuthError } from '../errors';\n\nexport function httpRequest(sdk: OktaAuthInterface, options: RequestOptions): Promise<any> {\n  options = options || {};\n  var url = options.url,\n      method = options.method,\n      args = options.args,\n      saveAuthnState = options.saveAuthnState,\n      accessToken = options.accessToken,\n      withCredentials = options.withCredentials === true, // default value is false\n      storageUtil = sdk.options.storageUtil,\n      storage = storageUtil!.storage,\n      httpCache = sdk.storageManager.getHttpCache(sdk.options.cookies);\n\n  if (options.cacheResponse) {\n    var cacheContents = httpCache.getStorage();\n    var cachedResponse = cacheContents[url as string];\n    if (cachedResponse && Date.now()/1000 < cachedResponse.expiresAt) {\n      return Promise.resolve(cachedResponse.response);\n    }\n  }\n\n  var oktaUserAgentHeader = sdk._oktaUserAgent.getHttpHeader();\n  var headers: HeadersInit = {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n    ...oktaUserAgentHeader\n  };\n  Object.assign(headers, sdk.options.headers, options.headers);\n  headers = removeNils(headers) as HeadersInit;\n\n  if (accessToken && isString(accessToken)) {\n    headers['Authorization'] = 'Bearer ' + accessToken;\n  }\n\n  var ajaxOptions: FetchOptions = {\n    headers,\n    data: args || undefined,\n    withCredentials\n  };\n\n  var err, res;\n  return sdk.options.httpRequestClient!(method!, url!, ajaxOptions)\n    .then(function(resp) {\n      res = resp.responseText;\n      if (res && isString(res)) {\n        res = JSON.parse(res);\n        if (res && typeof res === 'object' && !res.headers) {\n          res.headers = resp.headers;\n        }\n      }\n\n      if (saveAuthnState) {\n        if (!res.stateToken) {\n          storage.delete(STATE_TOKEN_KEY_NAME);\n        }\n      }\n\n      if (res && res.stateToken && res.expiresAt) {\n        storage.set(STATE_TOKEN_KEY_NAME, res.stateToken, res.expiresAt, sdk.options.cookies!);\n      }\n\n      if (res && options.cacheResponse) {\n        httpCache.updateStorage(url!, {\n          expiresAt: Math.floor(Date.now()/1000) + DEFAULT_CACHE_DURATION,\n          response: res\n        });\n      }\n\n      return res;\n    })\n    .catch(function(resp) {\n      var serverErr = resp.responseText || {};\n      if (isString(serverErr)) {\n        try {\n          serverErr = JSON.parse(serverErr);\n        } catch (e) {\n          serverErr = {\n            errorSummary: 'Unknown error'\n          };\n        }\n      }\n\n      if (resp.status >= 500) {\n        serverErr.errorSummary = 'Unknown error';\n      }\n\n      if (sdk.options.transformErrorXHR) {\n        resp = sdk.options.transformErrorXHR(clone(resp));\n      }\n\n      if (serverErr.error && serverErr.error_description) {\n        err = new OAuthError(serverErr.error, serverErr.error_description);\n      } else {\n        err = new AuthApiError(serverErr, resp);\n      }\n\n      if (err.errorCode === 'E0000011') {\n        storage.delete(STATE_TOKEN_KEY_NAME);\n      }\n\n      throw err;\n    });\n}\n\nexport function get(sdk: OktaAuthInterface, url: string, options?: RequestOptions) {\n  url = isAbsoluteUrl(url) ? url : sdk.getIssuerOrigin() + url;\n  var getOptions = {\n    url: url,\n    method: 'GET'\n  };\n  Object.assign(getOptions, options);\n  return httpRequest(sdk, getOptions);\n}\n\nexport function post(sdk: OktaAuthInterface, url: string, args?: RequestData, options?: RequestOptions) {\n  url = isAbsoluteUrl(url) ? url : sdk.getIssuerOrigin() + url;\n  var postOptions = {\n    url: url,\n    method: 'POST',\n    args: args,\n    saveAuthnState: true\n  };\n  Object.assign(postOptions, options);\n  return httpRequest(sdk, postOptions);\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n\nimport { TransactionState } from './TransactionState';\n\nexport function addStateToken(res, options?) {\n  var builtArgs = {} as TransactionState;\n  Object.assign(builtArgs, options);\n\n  // Add the stateToken if one isn't passed and we have one\n  if (!builtArgs.stateToken && res.stateToken) {\n    builtArgs.stateToken = res.stateToken;\n  }\n\n  return builtArgs;\n}\n\nexport function getStateToken(res) {\n  return addStateToken(res);\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { post } from '../http';\nimport { isNumber, isObject, getLink, toQueryString, delay as delayFn } from '../util';\nimport { DEFAULT_POLLING_DELAY } from '../constants';\nimport AuthSdkError from '../errors/AuthSdkError';\nimport AuthPollStopError from '../errors/AuthPollStopError';\nimport { TransactionState } from './TransactionState';\nimport { AuthTransaction } from './AuthTransaction';\nimport { getStateToken } from './util';\n\nexport interface PollOptions {\n  delay?: number;\n  rememberDevice?: boolean;\n  autoPush?: boolean;\n  transactionCallBack?: (TransactionState) => void;\n}\n\nexport function getPollFn(sdk, res: TransactionState, ref) {\n  return function (options: PollOptions | number) {\n    var delay;\n    var rememberDevice;\n    var autoPush;\n    var transactionCallBack;\n\n    if (isNumber(options)) {\n      delay = options;\n    } else if (isObject(options)) {\n      options = options as PollOptions;\n      delay = options.delay;\n      rememberDevice = options.rememberDevice;\n      autoPush = options.autoPush;\n      transactionCallBack = options.transactionCallBack;\n    }\n\n    if (!delay && delay !== 0) {\n      delay = DEFAULT_POLLING_DELAY;\n    }\n\n    // Get the poll function\n    var pollLink = getLink(res, 'next', 'poll');\n    // eslint-disable-next-line complexity\n    function pollFn() {\n      var opts = {} as PollOptions;\n      if (typeof autoPush === 'function') {\n        try {\n          opts.autoPush = !!autoPush();\n        }\n        catch (e) {\n          return Promise.reject(new AuthSdkError('AutoPush resulted in an error.'));\n        }\n      }\n      else if (autoPush !== undefined && autoPush !== null) {\n        opts.autoPush = !!autoPush;\n      }\n      if (typeof rememberDevice === 'function') {\n        try {\n          opts.rememberDevice = !!rememberDevice();\n        }\n        catch (e) {\n          return Promise.reject(new AuthSdkError('RememberDevice resulted in an error.'));\n        }\n      }\n      else if (rememberDevice !== undefined && rememberDevice !== null) {\n        opts.rememberDevice = !!rememberDevice;\n      }\n\n      var href = pollLink.href + toQueryString(opts);\n      return post(sdk, href, getStateToken(res), {\n        saveAuthnState: false,\n        withCredentials: true\n      });\n    }\n\n    ref.isPolling = true;\n\n    var retryCount = 0;\n    var recursivePoll = function () {\n      // If the poll was manually stopped during the delay\n      if (!ref.isPolling) {\n        return Promise.reject(new AuthPollStopError());\n      }\n      return pollFn()\n        .then(function (pollRes) {\n          // Reset our retry counter on success\n          retryCount = 0;\n\n          // If we're still waiting\n          if (pollRes.factorResult && pollRes.factorResult === 'WAITING') {\n\n            // If the poll was manually stopped while the pollFn was called\n            if (!ref.isPolling) {\n              throw new AuthPollStopError();\n            }\n\n            if (typeof transactionCallBack === 'function') {\n              transactionCallBack(pollRes);\n            }\n\n            // Continue poll\n            return delayFn(delay).then(recursivePoll);\n\n          } else {\n            // Any non-waiting result, even if polling was stopped\n            // during a request, will return\n            ref.isPolling = false;\n            return new AuthTransaction(sdk, pollRes);\n          }\n        })\n        .catch(function(err) {\n          // Exponential backoff, up to 16 seconds\n          if (err.xhr &&\n              (err.xhr.status === 0 || err.xhr.status === 429) &&\n              retryCount <= 4) {\n            var delayLength = Math.pow(2, retryCount) * 1000;\n            retryCount++;\n            return delayFn(delayLength)\n              .then(recursivePoll);\n          }\n          throw err;\n        });\n    };\n    return recursivePoll()\n      .catch(function(err) {\n        ref.isPolling = false;\n        throw err;\n      });\n  };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { get } from '../http';\nimport { find, omit, toQueryString, clone, isObject } from '../util';\nimport AuthSdkError from '../errors/AuthSdkError';\nimport { TransactionState } from './TransactionState';\nimport { addStateToken } from './util';\nimport { getPollFn } from './poll';\nimport { postToTransaction } from './api';\nimport { IdxStatus } from '../idx/types';\n\ninterface PostToTransactionParams {\n  autoPush?: boolean;\n  rememberDevice?: boolean;\n  updatePhone?: boolean;\n}\n\n// eslint-disable-next-line no-use-before-define\ntype AuthTransactionFunction = (obj?: any) => Promise<AuthTransaction>;\n\ninterface AuthTransactionFunctions {\n  // common\n  next?: AuthTransactionFunction;\n  cancel?: AuthTransactionFunction;\n  skip?: AuthTransactionFunction;\n  // locked_out\n  unlock?: AuthTransactionFunction;\n  // password\n  changePassword?: AuthTransactionFunction;\n  resetPassword?: AuthTransactionFunction;\n  // recovery\n  answer?: AuthTransactionFunction;\n  recovery?: AuthTransactionFunction;\n  // recovery_challenge\n  verify?: AuthTransactionFunction;\n  resend?: AuthTransactionFunction;\n  // mfa_enroll_activate\n  activate?: AuthTransactionFunction;\n  poll?: AuthTransactionFunction;\n  prev?: AuthTransactionFunction;\n}\n\nexport class AuthTransaction implements TransactionState, AuthTransactionFunctions {\n  next?: AuthTransactionFunction;\n  cancel?: AuthTransactionFunction;\n  skip?: AuthTransactionFunction;\n  unlock?: AuthTransactionFunction;\n  changePassword?: AuthTransactionFunction;\n  resetPassword?: AuthTransactionFunction;\n  answer?: AuthTransactionFunction;\n  recovery?: AuthTransactionFunction;\n  verify?: AuthTransactionFunction;\n  resend?: AuthTransactionFunction;\n  activate?: AuthTransactionFunction;\n  poll?: AuthTransactionFunction;\n  prev?: AuthTransactionFunction;\n\n  data?: TransactionState;\n  stateToken?: string;\n  sessionToken?: string;\n  status: string | IdxStatus;\n  user?: Record<string, any>;\n  factor?: Record<string, any>;\n  factors?: Array<Record<string, any> >;\n  policy?: Record<string, any>;\n  scopes?: Array<Record<string, any> >;\n  target?: Record<string, any>;\n  authentication?: Record<string, any>;\n  constructor(sdk, res: TransactionState | null = null) {\n    this.data = undefined;\n    this.status = undefined as unknown as string;\n    if (res) {\n      this.data = res;\n\n      if (this.data.interactionHandle) {\n        this.status = res.status;\n        return;\n      }\n\n      // Parse response from Authn V1\n      Object.assign(this, flattenEmbedded(sdk, res, res, {}));\n      delete this.stateToken;\n\n      // RECOVERY_CHALLENGE has some responses without _links.\n      // Without _links, we emulate cancel to make it intuitive\n      // to return to the starting state. We may remove this\n      // when OKTA-75434 is resolved\n      if (res.status === 'RECOVERY_CHALLENGE' && !res._links) {\n        this.cancel = function() {\n          return Promise.resolve(new AuthTransaction(sdk));\n        };\n      }\n    }\n  }\n}\n\nfunction link2fn(sdk, res, obj, link, ref) {\n  if (Array.isArray(link)) {\n    return function(name, opts?) {\n      if (!name) {\n        throw new AuthSdkError('Must provide a link name');\n      }\n\n      var lk = find(link, {name: name});\n      if (!lk) {\n        throw new AuthSdkError('No link found for that name');\n      }\n\n      return link2fn(sdk, res, obj, lk, ref)(opts);\n    };\n\n  } else if (link.hints &&\n      link.hints.allow &&\n      link.hints.allow.length === 1) {\n    var method = link.hints.allow[0];\n    switch (method) {\n\n      case 'GET':\n        return function() {\n          return get(sdk, link.href, { withCredentials: true });\n        };\n\n      case 'POST':\n        // eslint-disable-next-line max-statements,complexity\n        return function(opts: TransactionState) {\n          if (ref && ref.isPolling) {\n            ref.isPolling = false;\n          }\n\n          var data = addStateToken(res, opts);\n\n          if (res.status === 'MFA_ENROLL' || res.status === 'FACTOR_ENROLL') {\n            // Add factorType and provider\n            Object.assign(data, {\n              factorType: obj.factorType,\n              provider: obj.provider\n            });\n          }\n\n          var params = {} as PostToTransactionParams;\n          var autoPush = data.autoPush;\n          if (autoPush !== undefined) {\n            if (typeof autoPush === 'function') {\n              try {\n                params.autoPush = !!autoPush();\n              }\n              catch (e) {\n                return Promise.reject(new AuthSdkError('AutoPush resulted in an error.'));\n              }\n            }\n            else if (autoPush !== null) {\n              params.autoPush = !!autoPush;\n            }\n            data = omit(data, 'autoPush');\n          }\n\n          var rememberDevice = data.rememberDevice;\n          if (rememberDevice !== undefined) {\n            if (typeof rememberDevice === 'function') {\n              try {\n                params.rememberDevice = !!rememberDevice();\n              }\n              catch (e) {\n                return Promise.reject(new AuthSdkError('RememberDevice resulted in an error.'));\n              }\n            }\n            else if (rememberDevice !== null) {\n              params.rememberDevice = !!rememberDevice;\n            }\n            data = omit(data, 'rememberDevice');\n\n          } else if (data.profile &&\n                    data.profile.updatePhone !== undefined) {\n            if (data.profile.updatePhone) {\n              params.updatePhone = true;\n            }\n            data.profile = omit(data.profile, 'updatePhone');\n          }\n          var href = link.href + toQueryString(params);\n          return postToTransaction(sdk, href, data);\n        };\n    }\n  }\n}\n\nfunction links2fns(sdk, res, obj, ref) {\n  var fns = {} as AuthTransactionFunctions;\n  for (var linkName in obj._links) {\n    if (!Object.prototype.hasOwnProperty.call(obj._links, linkName)) {\n      continue;\n    }\n\n    var link = obj._links[linkName];\n    \n    if (linkName === 'next') {\n      linkName = link.name;\n    }\n\n    if (link.type) {\n      fns[linkName] = link;\n      continue;\n    }\n\n    switch (linkName) {\n      // poll is only found at the transaction\n      // level, so we don't need to pass the link\n      case 'poll':\n        fns.poll = getPollFn(sdk, res, ref);\n        break;\n\n      default:\n        var fn = link2fn(sdk, res, obj, link, ref);\n        if (fn) {\n          fns[linkName] = fn;\n        }\n    }\n  }\n  return fns;\n}\n\n// eslint-disable-next-line complexity\nfunction flattenEmbedded(sdk, res, obj, ref) {\n  obj = obj || res;\n  obj = clone(obj);\n\n  if (Array.isArray(obj)) {\n    var objArr = [];\n    for (var o = 0, ol = obj.length; o < ol; o++) {\n      objArr.push(flattenEmbedded(sdk, res, obj[o], ref) as never);\n    }\n    return objArr;\n  }\n\n  var embedded = obj._embedded || {};\n\n  for (var key in embedded) {\n    if (!Object.prototype.hasOwnProperty.call(embedded, key)) {\n      continue;\n    }\n\n    // Flatten any nested _embedded objects\n    if (isObject(embedded[key]) || Array.isArray(embedded[key])) {\n      embedded[key] = flattenEmbedded(sdk, res, embedded[key], ref);\n    }\n  }\n\n  // Convert any links on the embedded object\n  var fns = links2fns(sdk, res, obj, ref);\n  Object.assign(embedded, fns);\n\n  obj = omit(obj, '_embedded', '_links');\n  Object.assign(obj, embedded);\n  return obj;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n/* eslint-disable complexity, max-statements */\nimport { post } from '../http';\nimport AuthSdkError from '../errors/AuthSdkError';\nimport { STATE_TOKEN_KEY_NAME } from '../constants';\nimport { addStateToken } from './util';\nimport { AuthTransaction } from './AuthTransaction';\n\nexport function transactionStatus(sdk, args) {\n  args = addStateToken(sdk, args);\n  return post(sdk, sdk.getIssuerOrigin() + '/api/v1/authn', args, { withCredentials: true });\n}\n\nexport function resumeTransaction(sdk, args) {\n  if (!args || !args.stateToken) {\n    var stateToken = sdk.tx.exists._get(STATE_TOKEN_KEY_NAME);\n    if (stateToken) {\n      args = {\n        stateToken: stateToken\n      };\n    } else {\n      return Promise.reject(new AuthSdkError('No transaction to resume'));\n    }\n  }\n  return sdk.tx.status(args)\n    .then(function(res) {\n      return new AuthTransaction(sdk, res);\n    });\n}\n\nexport function introspectAuthn (sdk, args) {\n  if (!args || !args.stateToken) {\n    var stateToken = sdk.tx.exists._get(STATE_TOKEN_KEY_NAME);\n    if (stateToken) {\n      args = {\n        stateToken: stateToken\n      };\n    } else {\n      return Promise.reject(new AuthSdkError('No transaction to evaluate'));\n    }\n  }\n  return transactionStep(sdk, args)\n    .then(function (res) {\n      return new AuthTransaction(sdk, res);\n    });\n}\n\nexport function transactionStep(sdk, args) {\n  args = addStateToken(sdk, args);\n  // v1 pipeline introspect API\n  return post(sdk, sdk.getIssuerOrigin() + '/api/v1/authn/introspect', args, { withCredentials: true });\n}\n\nexport function transactionExists(sdk) {\n  // We have a cookie state token\n  return !!sdk.tx.exists._get(STATE_TOKEN_KEY_NAME);\n}\n\nexport function postToTransaction(sdk, url, args, options?) {\n  options = Object.assign({ withCredentials: true }, options);\n  return post(sdk, url, args, options)\n    .then(function(res) {\n      return new AuthTransaction(sdk, res);\n    });\n}\n","/*!\n * Copyright (c) 2019-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n /* eslint-disable complexity, max-statements */\nimport { stringToBase64Url, webcrypto } from '../../crypto';\nimport { MIN_VERIFIER_LENGTH, MAX_VERIFIER_LENGTH, DEFAULT_CODE_CHALLENGE_METHOD } from '../../constants';\n\nfunction dec2hex (dec) {\n  return ('0' + dec.toString(16)).substr(-2);\n}\n\nfunction getRandomString(length) {\n  var a = new Uint8Array(Math.ceil(length / 2));\n  webcrypto.getRandomValues(a);\n  var str = Array.from(a, dec2hex).join('');\n  return str.slice(0, length);\n}\n\nfunction generateVerifier(prefix?: string): string {\n  var verifier = prefix || '';\n  if (verifier.length < MIN_VERIFIER_LENGTH) {\n    verifier = verifier + getRandomString(MIN_VERIFIER_LENGTH - verifier.length);\n  }\n  return encodeURIComponent(verifier).slice(0, MAX_VERIFIER_LENGTH);\n}\n\nfunction computeChallenge(str: string): PromiseLike<any> {  \n  var buffer = new TextEncoder().encode(str);\n  return webcrypto.subtle.digest('SHA-256', buffer).then(function(arrayBuffer) {\n    var hash = String.fromCharCode.apply(null, new Uint8Array(arrayBuffer) as unknown as number[]);\n    var b64u = stringToBase64Url(hash); // url-safe base64 variant\n    return b64u;\n  });\n}\n\nexport default {\n  DEFAULT_CODE_CHALLENGE_METHOD,\n  generateVerifier,\n  computeChallenge\n};\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* global window */\nimport { omit, getLink, toQueryString } from './util';\nimport { get, post, httpRequest } from './http';\n\nfunction sessionExists(sdk) {\n  return sdk.session.get()\n    .then(function(res) {\n      if (res.status === 'ACTIVE') {\n        return true;\n      }\n      return false;\n    })\n    .catch(function() {\n      return false;\n    });\n}\n\nfunction getSession(sdk) { \n  return get(sdk, '/api/v1/sessions/me', { withCredentials: true })\n  .then(function(session) {\n    var res = omit(session, '_links');\n\n    res.refresh = function() {\n      return post(sdk, getLink(session, 'refresh').href, {}, { withCredentials: true });\n    };\n\n    res.user = function() {\n      return get(sdk, getLink(session, 'user').href, { withCredentials: true });\n    };\n\n    return res;\n  })\n  .catch(function() {\n    // Return INACTIVE status on failure\n    return {status: 'INACTIVE'};\n  });\n}\n\nfunction closeSession(sdk) {\n  return httpRequest(sdk, {\n    url: sdk.getIssuerOrigin() + '/api/v1/sessions/me',\n    method: 'DELETE',\n    withCredentials: true\n  });\n}\n\nfunction refreshSession(sdk) {\n  return post(sdk, '/api/v1/sessions/me/lifecycle/refresh', {}, { withCredentials: true });\n}\n\nfunction setCookieAndRedirect(sdk, sessionToken, redirectUrl) {\n  redirectUrl = redirectUrl || window.location.href;\n  window.location.assign(sdk.getIssuerOrigin() + '/login/sessionCookieRedirect' +\n    toQueryString({\n      checkAccountSetupComplete: true,\n      token: sessionToken,\n      redirectUrl: redirectUrl\n    }));\n}\n\nexport {\n  sessionExists,\n  getSession,\n  closeSession,\n  refreshSession,\n  setCookieAndRedirect\n};\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { isString, removeNils, toQueryString } from '../../util';\nimport { AuthSdkError } from '../../errors';\nimport { OAuthParams, TokenParams } from '../../types';\n\nexport function convertTokenParamsToOAuthParams(tokenParams: TokenParams) {\n  // Quick validation\n  if (!tokenParams.clientId) {\n    throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to get a token');\n  }\n\n  if (isString(tokenParams.responseType) && tokenParams.responseType.indexOf(' ') !== -1) {\n    throw new AuthSdkError('Multiple OAuth responseTypes must be defined as an array');\n  }\n\n  // Convert our params to their actual OAuth equivalents\n  var oauthParams: OAuthParams = {\n    'client_id': tokenParams.clientId,\n    'code_challenge': tokenParams.codeChallenge,\n    'code_challenge_method': tokenParams.codeChallengeMethod,\n    'display': tokenParams.display,\n    'idp': tokenParams.idp,\n    'idp_scope': tokenParams.idpScope,\n    'login_hint': tokenParams.loginHint,\n    'max_age': tokenParams.maxAge,\n    'nonce': tokenParams.nonce,\n    'prompt': tokenParams.prompt,\n    'redirect_uri': tokenParams.redirectUri,\n    'response_mode': tokenParams.responseMode,\n    'response_type': tokenParams.responseType,\n    'sessionToken': tokenParams.sessionToken,\n    'state': tokenParams.state,\n  };\n  oauthParams = removeNils(oauthParams) as OAuthParams;\n\n  ['idp_scope', 'response_type'].forEach(function (mayBeArray) {\n    if (Array.isArray(oauthParams[mayBeArray])) {\n      oauthParams[mayBeArray] = oauthParams[mayBeArray].join(' ');\n    }\n  });\n\n  if (tokenParams.responseType!.indexOf('id_token') !== -1 &&\n    tokenParams.scopes!.indexOf('openid') === -1) {\n    throw new AuthSdkError('openid scope must be specified in the scopes argument when requesting an id_token');\n  } else {\n    oauthParams.scope = tokenParams.scopes!.join(' ');\n  }\n\n  return oauthParams;\n}\n\nexport function buildAuthorizeParams(tokenParams: TokenParams) {\n  var oauthQueryParams = convertTokenParamsToOAuthParams(tokenParams);\n  return toQueryString({ \n    ...oauthQueryParams, \n    ...(tokenParams.extraParams && { ...tokenParams.extraParams })\n  });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthSdkError } from '../../errors';\nimport { CustomUrls, OAuthParams, OAuthResponse, RefreshToken, TokenParams } from '../../types';\nimport { removeNils, toQueryString } from '../../util';\nimport { httpRequest } from '../../http';\n\nfunction validateOptions(options: TokenParams) {\n  // Quick validation\n  if (!options.clientId) {\n    throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to get a token');\n  }\n\n  if (!options.redirectUri) {\n    throw new AuthSdkError('The redirectUri passed to /authorize must also be passed to /token');\n  }\n\n  if (!options.authorizationCode && !options.interactionCode) {\n    throw new AuthSdkError('An authorization code (returned from /authorize) must be passed to /token');\n  }\n\n  if (!options.codeVerifier) {\n    throw new AuthSdkError('The \"codeVerifier\" (generated and saved by your app) must be passed to /token');\n  }\n}\n\nfunction getPostData(sdk, options: TokenParams): string {\n  // Convert Token params to OAuth params, sent to the /token endpoint\n  var params: OAuthParams = removeNils({\n    'client_id': options.clientId,\n    'redirect_uri': options.redirectUri,\n    'grant_type': options.interactionCode ? 'interaction_code' : 'authorization_code',\n    'code_verifier': options.codeVerifier\n  });\n\n  if (options.interactionCode) {\n    params['interaction_code'] = options.interactionCode;\n  } else if (options.authorizationCode) {\n    params.code = options.authorizationCode;\n  }\n\n  const { clientSecret } = sdk.options;\n  if (clientSecret) {\n    params['client_secret'] = clientSecret;\n  }\n\n  // Encode as URL string\n  return toQueryString(params).slice(1);\n}\n\n// exchange authorization code for an access token\nexport function postToTokenEndpoint(sdk, options: TokenParams, urls: CustomUrls): Promise<OAuthResponse> {\n  validateOptions(options);\n  var data = getPostData(sdk, options);\n\n  const headers = {\n    'Content-Type': 'application/x-www-form-urlencoded'\n  };\n\n  return httpRequest(sdk, {\n    url: urls.tokenUrl,\n    method: 'POST',\n    args: data,\n    headers\n  });\n}\n\nexport function postRefreshToken(sdk, options: TokenParams, refreshToken: RefreshToken): Promise<OAuthResponse> {\n  return httpRequest(sdk, {\n    url: refreshToken.tokenUrl,\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n    },\n\n    args: Object.entries({\n      client_id: options.clientId, // eslint-disable-line camelcase\n      grant_type: 'refresh_token', // eslint-disable-line camelcase\n      scope: refreshToken.scopes.join(' '),\n      refresh_token: refreshToken.refreshToken, // eslint-disable-line camelcase\n    }).map(function ([name, value]) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      return name + '=' + encodeURIComponent(value!);\n    }).join('&'),\n  });\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { get } from '../../http';\nimport { find } from '../../util';\nimport { OktaAuthInterface, WellKnownResponse } from '../../types';\nimport AuthSdkError from '../../errors/AuthSdkError';\n\nexport function getWellKnown(sdk: OktaAuthInterface, issuer?: string): Promise<WellKnownResponse> {\n  var authServerUri = (issuer || sdk.options.issuer);\n  return get(sdk, authServerUri + '/.well-known/openid-configuration', {\n    cacheResponse: true\n  });\n}\n\nexport function getKey(sdk: OktaAuthInterface, issuer: string, kid: string): Promise<string> {\n  var httpCache = sdk.storageManager.getHttpCache(sdk.options.cookies);\n\n  return getWellKnown(sdk, issuer)\n  .then(function(wellKnown) {\n    var jwksUri = wellKnown['jwks_uri'];\n\n    // Check our kid against the cached version (if it exists and isn't expired)\n    var cacheContents = httpCache.getStorage();\n    var cachedResponse = cacheContents[jwksUri];\n    if (cachedResponse && Date.now()/1000 < cachedResponse.expiresAt) {\n      var cachedKey = find(cachedResponse.response.keys, {\n        kid: kid\n      });\n\n      if (cachedKey) {\n        return cachedKey;\n      }\n    }\n\n    // Remove cache for the key\n    httpCache.clearStorage(jwksUri);\n\n    // Pull the latest keys if the key wasn't in the cache\n    return get(sdk, jwksUri, {\n      cacheResponse: true\n    })\n    .then(function(res) {\n      var key = find(res.keys, {\n        kid: kid\n      });\n\n      if (key) {\n        return key;\n      }\n\n      throw new AuthSdkError('The key id, ' + kid + ', was not found in the server\\'s keys');\n    });\n  });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* global window, document */\n/* eslint-disable complexity, max-statements */\nimport { AuthSdkError } from '../../errors';\nimport { OktaAuthInterface } from '../../types';\n\nexport function addListener(eventTarget, name, fn) {\n  if (eventTarget.addEventListener) {\n    eventTarget.addEventListener(name, fn);\n  } else {\n    eventTarget.attachEvent('on' + name, fn);\n  }\n}\n\nexport function removeListener(eventTarget, name, fn) {\n  if (eventTarget.removeEventListener) {\n    eventTarget.removeEventListener(name, fn);\n  } else {\n    eventTarget.detachEvent('on' + name, fn);\n  }\n}\n\nexport function loadFrame(src) {\n  var iframe = document.createElement('iframe');\n  iframe.style.display = 'none';\n  iframe.src = src;\n\n  return document.body.appendChild(iframe);\n}\n\nexport function loadPopup(src, options) {\n  var title = options.popupTitle || 'External Identity Provider User Authentication';\n  var appearance = 'toolbar=no, scrollbars=yes, resizable=yes, ' +\n    'top=100, left=500, width=600, height=600';\n  return window.open(src, title, appearance);\n}\n\nexport function addPostMessageListener(sdk: OktaAuthInterface, timeout, state) {\n  var responseHandler;\n  var timeoutId;\n  var msgReceivedOrTimeout = new Promise(function (resolve, reject) {\n\n    responseHandler = function responseHandler(e) {\n      if (!e.data || e.data.state !== state) {\n        // A message not meant for us\n        return;\n      }\n\n      // Configuration mismatch between saved token and current app instance\n      // This may happen if apps with different issuers are running on the same host url\n      // If they share the same storage key, they may read and write tokens in the same location.\n      // Common when developing against http://localhost\n      if (e.origin !== sdk.getIssuerOrigin()) {\n        return reject(new AuthSdkError('The request does not match client configuration'));\n      }\n      resolve(e.data);\n    };\n\n    addListener(window, 'message', responseHandler);\n\n    timeoutId = setTimeout(function () {\n      reject(new AuthSdkError('OAuth flow timed out'));\n    }, timeout || 120000);\n  });\n\n  return msgReceivedOrTimeout\n    .finally(function () {\n      clearTimeout(timeoutId);\n      removeListener(window, 'message', responseHandler);\n    });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* eslint-disable complexity, max-statements */\nimport { genRandomString, removeTrailingSlash } from '../../util';\nimport AuthSdkError from '../../errors/AuthSdkError';\nimport { OktaAuthInterface, CustomUrls } from '../../types';\n\nexport function generateState() {\n  return genRandomString(64);\n}\n\nexport function generateNonce() {\n  return genRandomString(64);\n}\n\nfunction getIssuer(sdk: OktaAuthInterface, options: CustomUrls = {}) {\n  const issuer = removeTrailingSlash(options.issuer) || sdk.options.issuer;\n  return issuer;\n}\n\nexport function getOAuthBaseUrl(sdk: OktaAuthInterface, options: CustomUrls = {}) {\n  const issuer = getIssuer(sdk, options);\n  const baseUrl = issuer.indexOf('/oauth2') > 0 ? issuer : issuer + '/oauth2';\n  return baseUrl;\n}\n\nexport function getOAuthDomain(sdk: OktaAuthInterface, options: CustomUrls = {}) {\n  const issuer = getIssuer(sdk, options);\n  const domain = issuer.split('/oauth2')[0];\n  return domain;\n}\n\nexport function getOAuthUrls(sdk: OktaAuthInterface, options?: CustomUrls): CustomUrls {\n  if (arguments.length > 2) {\n    throw new AuthSdkError('As of version 3.0, \"getOAuthUrls\" takes only a single set of options');\n  }\n  options = options || {};\n\n  // Get user-supplied arguments\n  var authorizeUrl = removeTrailingSlash(options.authorizeUrl) || sdk.options.authorizeUrl;\n  var issuer = getIssuer(sdk, options);\n  var userinfoUrl = removeTrailingSlash(options.userinfoUrl) || sdk.options.userinfoUrl;\n  var tokenUrl = removeTrailingSlash(options.tokenUrl) || sdk.options.tokenUrl;\n  var logoutUrl = removeTrailingSlash(options.logoutUrl) || sdk.options.logoutUrl;\n  var revokeUrl = removeTrailingSlash(options.revokeUrl) || sdk.options.revokeUrl;\n\n  var baseUrl = getOAuthBaseUrl(sdk, options);\n\n  authorizeUrl = authorizeUrl || baseUrl + '/v1/authorize';\n  userinfoUrl = userinfoUrl || baseUrl + '/v1/userinfo';\n  tokenUrl = tokenUrl || baseUrl + '/v1/token';\n  revokeUrl = revokeUrl || baseUrl + '/v1/revoke';\n  logoutUrl = logoutUrl || baseUrl + '/v1/logout';\n\n  return {\n    issuer: issuer,\n    authorizeUrl: authorizeUrl,\n    userinfoUrl: userinfoUrl,\n    tokenUrl: tokenUrl,\n    revokeUrl: revokeUrl,\n    logoutUrl: logoutUrl\n  };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* eslint-disable node/no-unsupported-features/node-builtins */\n/* global document, window, TextEncoder, navigator */\n\nimport { webcrypto } from './crypto';\n\nconst isWindowsPhone = /windows phone|iemobile|wpdesktop/i;\t\n\nexport function isBrowser() {\n  return typeof document !== 'undefined' && typeof window !== 'undefined';\n}\n\nexport function isIE11OrLess() {\n  if (!isBrowser()) {\n    return false;\n  }\n  const documentMode = (document as any).documentMode;\n  return !!documentMode && documentMode <= 11;\n}\n\nexport function getUserAgent() {\n  return navigator.userAgent;\n}\n\nexport function isFingerprintSupported() {\n  const agent = getUserAgent();\n  return agent && !isWindowsPhone.test(agent);\t\n}\n\nexport function isPopupPostMessageSupported() {\n  if (!isBrowser()) {\n    return false;\n  }\n  const documentMode = (document as any).documentMode;\n  var isIE8or9 = documentMode && documentMode < 10;\n  if (typeof window.postMessage !== 'undefined' && !isIE8or9) {\n    return true;\n  }\n  return false;\n}\n\nexport function isTokenVerifySupported() {\n  return typeof webcrypto !== 'undefined'\n    && webcrypto !== null\n    && typeof webcrypto.subtle !== 'undefined'\n    && typeof Uint8Array !== 'undefined';\n}\n\nexport function hasTextEncoder() {\n  return typeof TextEncoder !== 'undefined';\n}\n\nexport function isPKCESupported() {\n  return isTokenVerifySupported() && hasTextEncoder();\n}\n\nexport function isHTTPS() {\n  if (!isBrowser()) {\n    return false;\n  }\n  return window.location.protocol === 'https:';\n}\n\nexport function isLocalhost() {\n  // eslint-disable-next-line compat/compat\n  return isBrowser() && window.location.hostname === 'localhost';\n}\n\n","\n/* global window */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { generateNonce, generateState } from './oauth';\nimport { OktaAuthInterface, TokenParams } from '../../types';\nimport { isBrowser } from '../../features';\nimport { removeNils } from '../../util';\n\nexport function getDefaultTokenParams(sdk: OktaAuthInterface): TokenParams {\n  const {\n    pkce,\n    clientId,\n    redirectUri,\n    responseType,\n    responseMode,\n    scopes,\n    state,\n    ignoreSignature\n  } = sdk.options;\n  const defaultRedirectUri = isBrowser() ? window.location.href : undefined;\n  return removeNils({\n    pkce,\n    clientId,\n    redirectUri: redirectUri || defaultRedirectUri,\n    responseType: responseType || ['token', 'id_token'],\n    responseMode,\n    state: state || generateState(),\n    nonce: generateNonce(),\n    scopes: scopes || ['openid', 'email'],\n    ignoreSignature\n  });\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { OktaAuthInterface } from '../../types';\nimport { OAuthError, AuthApiError } from '../../errors';\n\nexport function isInteractionRequiredError(error: Error) {\n  if (error.name !== 'OAuthError') {\n    return false;\n  }\n  const oauthError = error as OAuthError;\n  return (oauthError.errorCode === 'interaction_required');\n}\n\nexport function isAuthorizationCodeError(sdk: OktaAuthInterface, error: Error) {\n  if (error.name !== 'AuthApiError') {\n    return false;\n  }\n  const authApiError = error as AuthApiError;\n  // xhr property doesn't seem to match XMLHttpRequest type\n  const errorResponse = authApiError.xhr as unknown as Record<string, unknown>;\n  const responseJSON = errorResponse?.responseJSON as Record<string, unknown>;\n  return sdk.options.pkce && (responseJSON?.error as string === 'invalid_grant');\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* global window */\n/* eslint-disable complexity, max-statements */\nimport { OktaAuthInterface, OktaAuthOptions } from '../../types';\n\nexport function hasTokensInHash(hash: string): boolean {\n  return /((id|access)_token=)/i.test(hash);\n}\n\n// authorization_code\nexport function hasAuthorizationCode(hashOrSearch: string): boolean {\n  return /(code=)/i.test(hashOrSearch);\n}\n\n// interaction_code\nexport function hasInteractionCode(hashOrSearch: string): boolean {\n  return /(interaction_code=)/i.test(hashOrSearch);\n}\n\nexport function hasErrorInUrl(hashOrSearch: string): boolean {\n  return /(error=)/i.test(hashOrSearch) || /(error_description)/i.test(hashOrSearch);\n}\n\nexport function isRedirectUri(uri: string, sdk: OktaAuthInterface): boolean {\n  var authParams = sdk.options;\n  if (!uri || !authParams.redirectUri) {\n    return false;\n  }\n  return uri.indexOf(authParams.redirectUri) === 0;\n}\n\nexport function isCodeFlow(options: OktaAuthOptions) {\n  return options.pkce || options.responseType === 'code' || options.responseMode === 'query';\n}\n\nexport function getHashOrSearch(options: OktaAuthOptions) {\n  var codeFlow = isCodeFlow(options);\n  var useQuery = codeFlow && options.responseMode !== 'fragment';\n  return useQuery ? window.location.search : window.location.hash;\n}\n\n/**\n * Check if tokens or a code have been passed back into the url, which happens in\n * the OIDC (including social auth IDP) redirect flow.\n */\nexport function isLoginRedirect (sdk: OktaAuthInterface) {\n  // First check, is this a redirect URI?\n  if (!isRedirectUri(window.location.href, sdk)){\n    return false;\n  }\n\n  // The location contains either a code, token, or an error + error_description\n  var codeFlow = isCodeFlow(sdk.options);\n  var hashOrSearch = getHashOrSearch(sdk.options);\n\n  if (hasErrorInUrl(hashOrSearch)) {\n    return true;\n  }\n\n  if (codeFlow) {\n    var hasCode =  hasAuthorizationCode(hashOrSearch) || hasInteractionCode(hashOrSearch);\n    return hasCode;\n  }\n\n  // implicit flow, will always be hash fragment\n  return hasTokensInHash(window.location.hash);\n}\n\n/**\n * Check if error=interaction_required has been passed back in the url, which happens in\n * the social auth IDP redirect flow.\n */\nexport function isInteractionRequired (sdk: OktaAuthInterface, hashOrSearch?: string) {\n  if (!hashOrSearch) { // web only\n    // First check, is this a redirect URI?\n    if (!isLoginRedirect(sdk)){\n      return false;\n    }\n  \n    hashOrSearch = getHashOrSearch(sdk.options);\n  }\n  return /(error=interaction_required)/i.test(hashOrSearch);\n}","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { OAuthTransactionMeta, OktaAuthInterface, PKCETransactionMeta, TokenParams } from '../../types';\nimport { getOAuthUrls } from './oauth';\n\nexport function createOAuthMeta(\n  sdk: OktaAuthInterface, \n  tokenParams: TokenParams\n): OAuthTransactionMeta | PKCETransactionMeta {\n  const issuer = sdk.options.issuer!;\n  const urls = getOAuthUrls(sdk, tokenParams);\n  const oauthMeta: OAuthTransactionMeta = {\n    issuer,\n    urls,\n    clientId: tokenParams.clientId!,\n    redirectUri: tokenParams.redirectUri!,\n    responseType: tokenParams.responseType!,\n    responseMode: tokenParams.responseMode!,\n    scopes: tokenParams.scopes!,\n    state: tokenParams.state!,\n    nonce: tokenParams.nonce!,\n    ignoreSignature: tokenParams.ignoreSignature!,\n  };\n\n  if (tokenParams.pkce === false) {\n    // Implicit flow or authorization_code without PKCE\n    return oauthMeta;\n  }\n\n  const pkceMeta: PKCETransactionMeta = {\n    ...oauthMeta,\n    codeVerifier: tokenParams.codeVerifier!,\n    codeChallengeMethod: tokenParams.codeChallengeMethod!,\n    codeChallenge: tokenParams.codeChallenge!,\n  };\n\n  return pkceMeta;\n}\n","/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { getWellKnown } from '../endpoints/well-known';\nimport { AuthSdkError } from '../../errors';\nimport { OktaAuthInterface, TokenParams } from '../../types';\nimport { getDefaultTokenParams } from './defaultTokenParams';\nimport { DEFAULT_CODE_CHALLENGE_METHOD } from '../../constants';\nimport PKCE from './pkce';\n\nexport function assertPKCESupport(sdk: OktaAuthInterface) {\n  if (!sdk.features.isPKCESupported()) {\n    var errorMessage = 'PKCE requires a modern browser with encryption support running in a secure context.';\n    if (!sdk.features.isHTTPS()) {\n      // eslint-disable-next-line max-len\n      errorMessage += '\\nThe current page is not being served with HTTPS protocol. PKCE requires secure HTTPS protocol.';\n    }\n    if (!sdk.features.hasTextEncoder()) {\n      // eslint-disable-next-line max-len\n      errorMessage += '\\n\"TextEncoder\" is not defined. To use PKCE, you may need to include a polyfill/shim for this browser.';\n    }\n    throw new AuthSdkError(errorMessage);\n  }\n}\n\nexport async function validateCodeChallengeMethod(sdk: OktaAuthInterface, codeChallengeMethod?: string) {\n  // set default code challenge method, if none provided\n  codeChallengeMethod = codeChallengeMethod || sdk.options.codeChallengeMethod || DEFAULT_CODE_CHALLENGE_METHOD;\n\n  // validate against .well-known/openid-configuration\n  const wellKnownResponse = await getWellKnown(sdk);\n  var methods = wellKnownResponse['code_challenge_methods_supported'] || [];\n  if (methods.indexOf(codeChallengeMethod) === -1) {\n    throw new AuthSdkError('Invalid code_challenge_method');\n  }\n  return codeChallengeMethod;\n}\n\nexport async function preparePKCE(\n  sdk: OktaAuthInterface, \n  tokenParams: TokenParams\n): Promise<TokenParams> {\n  let {\n    codeVerifier,\n    codeChallenge,\n    codeChallengeMethod\n  } = tokenParams;\n\n  // PKCE calculations can be avoided by passing a codeChallenge\n  codeChallenge = codeChallenge || sdk.options.codeChallenge;\n  if (!codeChallenge) {\n    assertPKCESupport(sdk);\n    codeVerifier = codeVerifier || PKCE.generateVerifier();\n    codeChallenge = await PKCE.computeChallenge(codeVerifier);\n  }\n  codeChallengeMethod = await validateCodeChallengeMethod(sdk, codeChallengeMethod);\n\n  // Clone/copy the params. Set PKCE values\n  tokenParams = {\n    ...tokenParams,\n    responseType: 'code', // responseType is forced\n    codeVerifier,\n    codeChallenge,\n    codeChallengeMethod\n  };\n\n  return tokenParams;\n}\n\n// Prepares params for a call to /authorize or /token\nexport async function prepareTokenParams(\n  sdk: OktaAuthInterface,\n  tokenParams: TokenParams = {}\n): Promise<TokenParams> {\n  // build params using defaults + options\n  const defaults = getDefaultTokenParams(sdk);\n  tokenParams = { ...defaults, ...tokenParams };\n\n  if (tokenParams.pkce === false) {\n    // Implicit flow or authorization_code without PKCE\n    return tokenParams;\n  }\n\n  return preparePKCE(sdk, tokenParams);\n}","import { RefreshToken } from '../../types';\nimport { isAuthApiError } from '../../errors';\n\nexport function isSameRefreshToken(a: RefreshToken, b: RefreshToken) {\n  return (a.refreshToken === b.refreshToken);\n}\n\nexport function isRefreshTokenError(err: Error) {\n  if (!isAuthApiError(err)) {\n    return false;\n  }\n\n  if (!err.xhr || !err.xhr.responseJSON) {\n    return false;\n  }\n\n  const { responseJSON } = err.xhr;\n  if (responseJSON.error === 'invalid_grant') {\n    return true;\n  }\n\n  return false;\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* eslint-disable complexity, max-statements */\n\nexport function urlParamsToObject(hashOrSearch: string) {\n  // Predefine regexs for parsing hash\n  var plus2space = /\\+/g;\n  var paramSplit = /([^&=]+)=?([^&]*)/g;\n  var fragment = hashOrSearch || '';\n\n  // Some hash based routers will automatically add a / character after the hash\n  if (fragment.charAt(0) === '#' && fragment.charAt(1) === '/') {\n    fragment = fragment.substring(2);\n  }\n\n  // Remove the leading # or ?\n  if (fragment.charAt(0) === '#' || fragment.charAt(0) === '?') {\n    fragment = fragment.substring(1);\n  }\n\n\n  var obj = {};\n\n  // Loop until we have no more params\n  var param;\n  while (true) { // eslint-disable-line no-constant-condition\n    param = paramSplit.exec(fragment);\n    if (!param) { break; }\n\n    var key = param[1];\n    var value = param[2];\n\n    // id_token should remain base64url encoded\n    if (key === 'id_token' || key === 'access_token' || key === 'code') {\n      obj[key] = value;\n    } else {\n      obj[key] = decodeURIComponent(value.replace(plus2space, ' '));\n    }\n  }\n  return obj;\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* eslint-disable complexity, max-statements */\n\nimport AuthSdkError from '../../errors/AuthSdkError';\nimport { OktaAuthInterface, TokenVerifyParams, UserClaims } from '../../types';\n\nexport function validateClaims(sdk: OktaAuthInterface, claims: UserClaims, validationParams: TokenVerifyParams) {\n  var aud = validationParams.clientId;\n  var iss = validationParams.issuer;\n  var nonce = validationParams.nonce;\n\n  if (!claims || !iss || !aud) {\n    throw new AuthSdkError('The jwt, iss, and aud arguments are all required');\n  }\n\n  if (nonce && claims.nonce !== nonce) {\n    throw new AuthSdkError('OAuth flow response nonce doesn\\'t match request nonce');\n  }\n\n  var now = Math.floor(Date.now()/1000);\n\n  if (claims.iss !== iss) {\n    throw new AuthSdkError('The issuer [' + claims.iss + '] ' +\n      'does not match [' + iss + ']');\n  }\n\n  if (claims.aud !== aud) {\n    throw new AuthSdkError('The audience [' + claims.aud + '] ' +\n      'does not match [' + aud + ']');\n  }\n\n  if (claims.iat! > claims.exp!) {\n    throw new AuthSdkError('The JWT expired before it was issued');\n  }\n\n  if (!sdk.options.ignoreLifetime) {\n    if ((now - sdk.options.maxClockSkew!) > claims.exp!) {\n      throw new AuthSdkError('The JWT expired and is no longer valid');\n    }\n\n    if (claims.iat! > (now + sdk.options.maxClockSkew!)) {\n      throw new AuthSdkError('The JWT was issued in the future');\n    }\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { StorageManager } from '../StorageManager';\nimport { CustomUrls, TokenParams } from './OktaAuthOptions';\nimport { IdxTransactionMeta } from '../idx/types';\n\nexport interface TransactionManagerOptions {\n  storageManager?: StorageManager;\n  enableSharedStorage?: boolean; // default true\n  legacyWidgetSupport?: boolean; // default true\n  saveNonceCookie?: boolean; // default true\n  saveStateCookie?: boolean; // default true\n  saveParamsCookie?: boolean; // default true\n  saveLastResponse?: boolean; // default true\n}\n\n// formerly known as \"Redirect OAuth Params\"\nexport interface OAuthTransactionMeta extends\n  Pick<TokenParams,\n    'issuer' |\n    'clientId' |\n    'redirectUri' |\n    'responseType' |\n    'responseMode' |\n    'scopes' |\n    'state' |\n    'pkce' |\n    'ignoreSignature' |\n    'nonce'\n  >\n{\n  urls: CustomUrls;\n  originalUri?: string;\n}\n\nexport interface PKCETransactionMeta extends\n  OAuthTransactionMeta,\n  Pick<TokenParams,\n    'codeChallenge' |\n    'codeChallengeMethod' |\n    'codeVerifier'\n  >\n{}\n\nexport type CustomAuthTransactionMeta = Record<string, string | undefined>;\n\nexport type TransactionMeta =\n  IdxTransactionMeta |\n  PKCETransactionMeta |\n  OAuthTransactionMeta |\n  CustomAuthTransactionMeta;\n\nexport interface TransactionMetaOptions extends\n  Pick<IdxTransactionMeta,\n    'pkce' |\n    'state' |\n    'codeChallenge' |\n    'codeChallengeMethod' |\n    'codeVerifier' |\n    'flow' |\n    'activationToken' |\n    'recoveryToken'\n  >\n{\n  oauth?: boolean;\n  muteWarning?: boolean;\n}\n\nfunction isObjectWithProperties(obj) {\n  if (!obj || typeof obj !== 'object' || Object.values(obj).length === 0) {\n    return false;\n  }\n  return true;\n}\n\nexport function isOAuthTransactionMeta(obj: any): obj is OAuthTransactionMeta {\n  if (!isObjectWithProperties(obj)) {\n    return false;\n  }\n  return !!obj.redirectUri || !!obj.responseType;\n}\n\nexport function isPKCETransactionMeta(obj: any): obj is PKCETransactionMeta {\n  if (!isOAuthTransactionMeta(obj)) {\n    return false;\n  }\n  return !!(obj as any).codeVerifier;\n}\n\nexport function isIdxTransactionMeta(obj: any): obj is IdxTransactionMeta {\n  if (!isPKCETransactionMeta(obj)) {\n    return false;\n  }\n  return !!(obj as any).interactionHandle;\n}\n\nexport function isCustomAuthTransactionMeta(obj: any): obj is CustomAuthTransactionMeta {\n  if (!isObjectWithProperties(obj)) {\n    return false;\n  }\n  const isAllStringValues = Object.values(obj).find((value) => (typeof value !== 'string')) === undefined;\n  return isAllStringValues;\n}\n\nexport function isTransactionMeta(obj: any): obj is TransactionMeta {\n  if (isOAuthTransactionMeta(obj) || isCustomAuthTransactionMeta(obj)) {\n    return true;\n  }\n  return false;\n}\n","import { APIError } from '../../types/api';\nimport { Tokens } from '../../types/Token';\nimport { PKCETransactionMeta } from '../../types/Transaction';\nimport { FlowIdentifier } from './FlowIdentifier';\nimport {\n  IdxActions,\n  IdxAuthenticator,\n  IdxContext,\n  IdxForm,\n  IdxMessage,\n  IdxOption,\n  IdxRemediation,\n  IdxResponse,\n  RawIdxResponse\n} from './idx-js';\n\nexport enum IdxStatus {\n  SUCCESS = 'SUCCESS',\n  PENDING = 'PENDING',\n  FAILURE = 'FAILURE',\n  TERMINAL = 'TERMINAL',\n  CANCELED = 'CANCELED',\n}\n\nexport enum AuthenticatorKey {\n  OKTA_PASSWORD = 'okta_password',\n  OKTA_EMAIL = 'okta_email',\n  PHONE_NUMBER = 'phone_number',\n  GOOGLE_AUTHENTICATOR = 'google_otp',\n  SECURITY_QUESTION = 'security_question',\n  OKTA_VERIFY = 'okta_verify',\n  WEBAUTHN = 'webauthn',\n}\n\nexport type Input = {\n  name: string;\n  key?: string;\n  type?: string;\n  label?: string;\n  value?: string | {form: IdxForm};\n  minLength?: number;\n  maxLength?: number;\n  secret?: boolean;\n  required?: boolean;\n}\n\n\nexport interface IdxPollOptions {\n  required?: boolean;\n  refresh?: number;\n}\n\nexport type NextStep = {\n  name: string;\n  authenticator?: IdxAuthenticator;\n  canSkip?: boolean;\n  canResend?: boolean;\n  inputs?: Input[];\n  options?: IdxOption[];\n  poll?: IdxPollOptions;\n  authenticatorEnrollments?: IdxAuthenticator[];\n}\n\nexport enum IdxFeature {\n  PASSWORD_RECOVERY = 'recover-password',\n  REGISTRATION = 'enroll-profile',\n  SOCIAL_IDP = 'redirect-idp',\n  ACCOUNT_UNLOCK = 'unlock-account',\n}\n\nexport interface IdxTransactionMeta extends PKCETransactionMeta {\n  interactionHandle?: string;\n  remediations?: string[];\n  flow?: FlowIdentifier;\n  withCredentials?: boolean;\n  activationToken?: string;\n  recoveryToken?: string;\n}\n\nexport interface IdxTransaction {\n  status: IdxStatus;\n  tokens?: Tokens;\n  nextStep?: NextStep;\n  messages?: IdxMessage[];\n  error?: APIError | IdxResponse;\n  meta?: IdxTransactionMeta;\n  enabledFeatures?: IdxFeature[];\n  availableSteps?: NextStep[];\n  requestDidSucceed?: boolean;\n  stepUp?: boolean;\n  \n  // from idx-js, used by signin widget\n  proceed: (remediationName: string, params: unknown) => Promise<IdxResponse>;\n  neededToProceed: IdxRemediation[];\n  rawIdxState: RawIdxResponse;\n  interactionCode?: string;\n  actions: IdxActions;\n  context: IdxContext;\n}\n\n\nexport type Authenticator = {\n  id?: string;\n  key?: string;\n  methodType?: string;\n  phoneNumber?: string;\n};\n\nexport function isAuthenticator(obj: any): obj is Authenticator {\n  return obj && (obj.key || obj.id);\n}\n\nexport interface RemediationResponse {\n  idxResponse: IdxResponse;\n  nextStep?: NextStep;\n  messages?: IdxMessage[];\n  terminal?: boolean;\n  canceled?: boolean;\n}\n\nexport interface InteractResponse {\n  state?: string;\n  interactionHandle: string;\n  meta: IdxTransactionMeta;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { UserClaims } from './UserClaims';\n\nexport interface AbstractToken {\n  expiresAt: number;\n  authorizeUrl: string;\n  scopes: string[];\n  pendingRemove?: boolean;\n}\n\nexport interface AccessToken extends AbstractToken {\n  accessToken: string;\n  claims: UserClaims;\n  tokenType: string;\n  userinfoUrl: string;\n}\n\nexport interface RefreshToken extends AbstractToken {\n  refreshToken: string;\n  tokenUrl: string;\n  issuer: string;\n}\n\nexport interface IDToken extends AbstractToken {\n  idToken: string;\n  claims: UserClaims;\n  issuer: string;\n  clientId: string;\n}\n\nexport type Token = AccessToken | IDToken | RefreshToken;\nexport type RevocableToken = AccessToken | RefreshToken;\n\nexport type TokenType = 'accessToken' | 'idToken' | 'refreshToken';\n\nexport function isToken(obj: any): obj is Token {\n  if (obj &&\n      (obj.accessToken || obj.idToken || obj.refreshToken) &&\n      Array.isArray(obj.scopes)) {\n    return true;\n  }\n  return false;\n}\n\nexport function isAccessToken(obj: any): obj is AccessToken {\n  return obj && obj.accessToken;\n}\n\nexport function isIDToken(obj: any): obj is IDToken {\n  return obj && obj.idToken;\n}\n\nexport function isRefreshToken(obj: any): obj is RefreshToken {\n  return obj && obj.refreshToken;\n}\n\nexport interface Tokens {\n  accessToken?: AccessToken;\n  idToken?: IDToken;\n  refreshToken?: RefreshToken;\n}\n","/* eslint-disable complexity */\n\nimport { AuthSdkError } from '../../errors';\nimport { isAccessToken, isIDToken, isRefreshToken, Token, TokenType } from '../../types';\n\nexport function validateToken(token: Token, type?: TokenType) {\n  if (!isIDToken(token) && !isAccessToken(token) && !isRefreshToken(token)) {\n    throw new AuthSdkError(\n      'Token must be an Object with scopes, expiresAt, and one of: an idToken, accessToken, or refreshToken property'\n    );\n  }\n  \n  if (type === 'accessToken' && !isAccessToken(token)) {\n    throw new AuthSdkError('invalid accessToken');\n  } \n  if (type === 'idToken' && !isIDToken(token)) {\n    throw new AuthSdkError('invalid idToken');\n  }\n\n  if (type === 'refreshToken' && !isRefreshToken(token)) {\n    throw new AuthSdkError('invalid refreshToken');\n  }\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { JWTObject } from '../types';\nimport { base64UrlToString } from '../crypto';\n\nexport function decodeToken(token: string): JWTObject {\n  var jwt = token.split('.');\n  var decodedToken: JWTObject;\n\n  try {\n    decodedToken = {\n      header: JSON.parse(base64UrlToString(jwt[0])),\n      payload: JSON.parse(base64UrlToString(jwt[1])),\n      signature: jwt[2]\n    };\n  } catch (e) {\n    throw new AuthSdkError('Malformed token');\n  }\n\n  return decodedToken;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n/* eslint complexity:[0,8] */\nimport { post } from '../http';\nimport { toQueryString } from '../util';\nimport {\n  getOAuthUrls,\n} from './util/oauth';\nimport { btoa } from '../crypto';\nimport AuthSdkError from '../errors/AuthSdkError';\nimport {\n  OktaAuthInterface,\n  RevocableToken,\n  AccessToken,\n  RefreshToken\n} from '../types';\n\n// refresh tokens have precedence to be revoked if no token is specified\nexport async function revokeToken(sdk: OktaAuthInterface, token: RevocableToken): Promise<any> {\n  let accessToken = '';\n  let refreshToken = '';\n  if (token) { \n      accessToken = (token as AccessToken).accessToken;\n      refreshToken = (token as RefreshToken).refreshToken;  \n  }\n  if(!accessToken && !refreshToken) { \n    throw new AuthSdkError('A valid access or refresh token object is required');\n  }\n  var clientId = sdk.options.clientId;\n  var clientSecret = sdk.options.clientSecret;\n  if (!clientId) {\n    throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to revoke a token');\n  }\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  var revokeUrl = getOAuthUrls(sdk).revokeUrl!;\n  var args = toQueryString({\n    // eslint-disable-next-line camelcase\n    token_type_hint: refreshToken ? 'refresh_token' : 'access_token', \n    token: refreshToken || accessToken,\n  }).slice(1);\n  var creds = clientSecret ? btoa(`${clientId}:${clientSecret}`) : btoa(clientId);\n  return post(sdk, revokeUrl, args, {\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'Authorization': 'Basic ' + creds\n    }\n  });\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/* eslint-disable max-len */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { CustomUrls, OAuthResponse, OAuthResponseType, OktaAuthInterface, TokenParams, TokenResponse } from '../types';\nimport { getOAuthUrls, getDefaultTokenParams } from './util';\nimport { clone } from '../util';\nimport { postToTokenEndpoint } from './endpoints/token';\nimport { handleOAuthResponse } from './handleOAuthResponse';\n\n// codeVerifier is required. May pass either an authorizationCode or interactionCode\nexport function exchangeCodeForTokens(sdk: OktaAuthInterface, tokenParams: TokenParams, urls?: CustomUrls): Promise<TokenResponse> {\n  urls = urls || getOAuthUrls(sdk, tokenParams);\n  // build params using defaults + options\n  tokenParams = Object.assign({}, getDefaultTokenParams(sdk), clone(tokenParams));\n\n  const {\n    authorizationCode,\n    interactionCode,\n    codeVerifier,\n    clientId,\n    redirectUri,\n    scopes,\n    ignoreSignature,\n    state\n  } = tokenParams;\n\n  var getTokenOptions = {\n    clientId,\n    redirectUri,\n    authorizationCode,\n    interactionCode,\n    codeVerifier,\n  };\n\n  return postToTokenEndpoint(sdk, getTokenOptions, urls)\n    .then((response: OAuthResponse) => {\n\n      // `handleOAuthResponse` hanadles responses from both `/authorize` and `/token` endpoints\n      // Here we modify the response from `/token` so that it more closely matches a response from `/authorize`\n      // `responseType` is used to validate that the expected tokens were returned\n      const responseType: OAuthResponseType[] = ['token']; // an accessToken will always be returned\n      if (scopes!.indexOf('openid') !== -1) {\n        responseType.push('id_token'); // an idToken will be returned if \"openid\" is in the scopes\n      }\n      const handleResponseOptions: TokenParams = {\n        clientId,\n        redirectUri,\n        scopes,\n        responseType,\n        ignoreSignature,\n      };\n      return handleOAuthResponse(sdk, handleResponseOptions, response, urls!)\n        .then((response: TokenResponse) => {\n          // For compatibility, \"code\" is returned in the TokenResponse. OKTA-326091\n          response.code = authorizationCode;\n          response.state = state!;\n          return response;\n        });\n    })\n    .finally(() => {\n      sdk.transactionManager.clear();\n    });\n}","/* eslint-disable max-len */\n/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { getWellKnown, getKey } from './endpoints/well-known';\nimport { validateClaims } from './util';\nimport { AuthSdkError } from '../errors';\nimport { IDToken, OktaAuthInterface, TokenVerifyParams } from '../types';\nimport { decodeToken } from './decodeToken';\nimport * as sdkCrypto from '../crypto';\n\n// Verify the id token\nexport async function verifyToken(sdk: OktaAuthInterface, token: IDToken, validationParams: TokenVerifyParams): Promise<IDToken> {\n  if (!token || !token.idToken) {\n    throw new AuthSdkError('Only idTokens may be verified');\n  }\n\n  // Decode the Jwt object (may throw)\n  var jwt = decodeToken(token.idToken);\n\n  // The configured issuer may point to a frontend proxy.\n  // Get the \"real\" issuer from .well-known/openid-configuration\n  const configuredIssuer = validationParams?.issuer || sdk.options.issuer;\n  const { issuer } = await getWellKnown(sdk, configuredIssuer);\n\n  var validationOptions: TokenVerifyParams = Object.assign({\n    // base options, can be overridden by params\n    clientId: sdk.options.clientId,\n    ignoreSignature: sdk.options.ignoreSignature\n  }, validationParams, {\n    // final options, cannot be overridden\n    issuer\n  });\n\n  // Standard claim validation (may throw)\n  validateClaims(sdk, jwt.payload, validationOptions);\n\n  // If the browser doesn't support native crypto or we choose not\n  // to verify the signature, bail early\n  if (validationOptions.ignoreSignature == true || !sdk.features.isTokenVerifySupported()) {\n    return token;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const key = await getKey(sdk, token.issuer, jwt.header.kid!);\n  const valid = await sdkCrypto.verifyToken(token.idToken, key);\n  if (!valid) {\n    throw new AuthSdkError('The token signature is not valid');\n  }\n  if (validationParams && validationParams.accessToken && token.claims.at_hash) {\n    const hash = await sdkCrypto.getOidcHash(validationParams.accessToken);\n    if (hash !== token.claims.at_hash) {\n      throw new AuthSdkError('Token hash verification failed');\n    }\n  }\n  return token;\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n\n/* eslint-disable complexity, max-statements */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { clone } from '../util';\nimport {\n  getOAuthUrls,\n} from './util/oauth';\nimport { AuthSdkError, OAuthError } from '../errors';\nimport {\n  OktaAuthInterface,\n  TokenVerifyParams,\n  IDToken,\n  OAuthResponse,\n  TokenParams,\n  TokenResponse,\n  CustomUrls,\n  Tokens,\n} from '../types';\nimport { exchangeCodeForTokens } from './exchangeCodeForTokens';\nimport { verifyToken } from './verifyToken';\nimport { getDefaultTokenParams } from './util';\n\nfunction validateResponse(res: OAuthResponse, oauthParams: TokenParams) {\n  if (res['error'] && res['error_description']) {\n    throw new OAuthError(res['error'], res['error_description']);\n  }\n\n  if (res.state !== oauthParams.state) {\n    throw new AuthSdkError('OAuth flow response state doesn\\'t match request state');\n  }\n}\n\nexport async function handleOAuthResponse(\n  sdk: OktaAuthInterface,\n  tokenParams: TokenParams,\n  res: OAuthResponse,\n  urls?: CustomUrls\n): Promise<TokenResponse> {\n  var pkce = sdk.options.pkce !== false;\n\n  // The result contains an authorization_code and PKCE is enabled \n  // `exchangeCodeForTokens` will call /token then call `handleOauthResponse` recursively with the result\n  if (pkce && (res.code || res.interaction_code)) {\n    return exchangeCodeForTokens(sdk, Object.assign({}, tokenParams, {\n      authorizationCode: res.code,\n      interactionCode: res.interaction_code\n    }), urls);\n  }\n\n  tokenParams = tokenParams || getDefaultTokenParams(sdk);\n  urls = urls || getOAuthUrls(sdk, tokenParams);\n\n  var responseType = tokenParams.responseType || [];\n  if (!Array.isArray(responseType)) {\n    responseType = [responseType];\n  }\n\n  var scopes;\n  if (res.scope) {\n    scopes = res.scope.split(' ');\n  } else {\n    scopes = clone(tokenParams.scopes);\n  }\n  var clientId = tokenParams.clientId || sdk.options.clientId;\n\n  // Handling the result from implicit flow or PKCE token exchange\n  validateResponse(res, tokenParams);\n\n  var tokenDict = {} as Tokens;\n  var expiresIn = res.expires_in;\n  var tokenType = res.token_type;\n  var accessToken = res.access_token;\n  var idToken = res.id_token;\n  var refreshToken = res.refresh_token;\n  var now = Math.floor(Date.now()/1000);\n\n  if (accessToken) {\n    var accessJwt = sdk.token.decode(accessToken);\n    tokenDict.accessToken = {\n      accessToken: accessToken,\n      claims: accessJwt.payload,\n      expiresAt: Number(expiresIn) + now,\n      tokenType: tokenType!,\n      scopes: scopes,\n      authorizeUrl: urls.authorizeUrl!,\n      userinfoUrl: urls.userinfoUrl!\n    };\n  }\n\n  if (refreshToken) {\n    tokenDict.refreshToken = {\n      refreshToken: refreshToken,\n      // should not be used, this is the accessToken expire time\n      // TODO: remove \"expiresAt\" in the next major version OKTA-407224\n      expiresAt: Number(expiresIn) + now, \n      scopes: scopes,\n      tokenUrl: urls.tokenUrl!,\n      authorizeUrl: urls.authorizeUrl!,\n      issuer: urls.issuer!,\n    };\n  }\n\n  if (idToken) {\n    var idJwt = sdk.token.decode(idToken);\n    var idTokenObj: IDToken = {\n      idToken: idToken,\n      claims: idJwt.payload,\n      expiresAt: idJwt.payload.exp! - idJwt.payload.iat! + now, // adjusting expiresAt to be in local time\n      scopes: scopes,\n      authorizeUrl: urls.authorizeUrl!,\n      issuer: urls.issuer!,\n      clientId: clientId!\n    };\n\n    var validationParams: TokenVerifyParams = {\n      clientId: clientId!,\n      issuer: urls.issuer!,\n      nonce: tokenParams.nonce,\n      accessToken: accessToken\n    };\n\n    if (tokenParams.ignoreSignature !== undefined) {\n      validationParams.ignoreSignature = tokenParams.ignoreSignature;\n    }\n\n    await verifyToken(sdk, idTokenObj, validationParams);\n    tokenDict.idToken = idTokenObj;\n  }\n\n  // Validate received tokens against requested response types \n  if (responseType.indexOf('token') !== -1 && !tokenDict.accessToken) {\n    // eslint-disable-next-line max-len\n    throw new AuthSdkError('Unable to parse OAuth flow response: response type \"token\" was requested but \"access_token\" was not returned.');\n  }\n  if (responseType.indexOf('id_token') !== -1 && !tokenDict.idToken) {\n    // eslint-disable-next-line max-len\n    throw new AuthSdkError('Unable to parse OAuth flow response: response type \"id_token\" was requested but \"id_token\" was not returned.');\n  }\n\n  return {\n    tokens: tokenDict,\n    state: res.state!,\n    code: res.code\n  };\n  \n}","\n/* global document */\n/* eslint-disable complexity, max-statements */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport {\n  getOAuthUrls,\n  loadFrame,\n  addPostMessageListener\n} from './util';\n\nimport AuthSdkError from '../errors/AuthSdkError';\n\nimport {\n  OktaAuthInterface,\n  TokenParams,\n  PopupParams,\n  OAuthResponse,\n} from '../types';\n\nimport { prepareTokenParams } from './util/prepareTokenParams';\nimport { buildAuthorizeParams } from './endpoints/authorize';\nimport { handleOAuthResponse } from './handleOAuthResponse';\n/*\n * Retrieve an idToken from an Okta or a third party idp\n *\n * Two main flows:\n *\n *  1) Exchange a sessionToken for a token\n *\n *    Required:\n *      clientId: passed via the OktaAuth constructor or into getToken\n *      sessionToken: 'yourtoken'\n *\n *    Optional:\n *      redirectUri: defaults to window.location.href\n *      scopes: defaults to ['openid', 'email']\n *\n *    Forced:\n *      prompt: 'none'\n *      responseMode: 'okta_post_message'\n *      display: undefined\n *\n *  2) Get a token from an idp\n *\n *    Required:\n *      clientId: passed via the OktaAuth constructor or into getToken\n *\n *    Optional:\n *      redirectUri: defaults to window.location.href\n *      scopes: defaults to ['openid', 'email']\n *      idp: defaults to Okta as an idp\n *      prompt: no default. Pass 'none' to throw an error if user is not signed in\n *\n *    Forced:\n *      display: 'popup'\n *\n *  Only common optional params shown. Any OAuth parameters not explicitly forced are available to override\n *\n * @param {Object} oauthOptions\n * @param {String} [oauthOptions.clientId] ID of this client\n * @param {String} [oauthOptions.redirectUri] URI that the iframe or popup will go to once authenticated\n * @param {String[]} [oauthOptions.scopes] OAuth 2.0 scopes to request (openid must be specified)\n * @param {String} [oauthOptions.idp] ID of an external IdP to use for user authentication\n * @param {String} [oauthOptions.sessionToken] Bootstrap Session Token returned by the Okta Authentication API\n * @param {String} [oauthOptions.prompt] Determines whether the Okta login will be displayed on failure.\n *                                       Use 'none' to prevent this behavior\n *\n * @param {Object} options\n * @param {Integer} [options.timeout] Time in ms before the flow is automatically terminated. Defaults to 120000\n * @param {String} [options.popupTitle] Title dispayed in the popup.\n *                                      Defaults to 'External Identity Provider User Authentication'\n */\nexport function getToken(sdk: OktaAuthInterface, options: TokenParams & PopupParams) {\n  if (arguments.length > 2) {\n    return Promise.reject(new AuthSdkError('As of version 3.0, \"getToken\" takes only a single set of options'));\n  }\n\n  options = options || {};\n\n  // window object cannot be serialized, save for later use\n  // TODO: move popup related params into a separate options object\n  const popupWindow = options.popupWindow;\n  options.popupWindow = undefined;\n\n  return prepareTokenParams(sdk, options)\n    .then(function (tokenParams: TokenParams) {\n\n      // Start overriding any options that don't make sense\n      var sessionTokenOverrides = {\n        prompt: 'none',\n        responseMode: 'okta_post_message',\n        display: null\n      };\n\n      var idpOverrides = {\n        display: 'popup'\n      };\n\n      if (options.sessionToken) {\n        Object.assign(tokenParams, sessionTokenOverrides);\n      } else if (options.idp) {\n        Object.assign(tokenParams, idpOverrides);\n      }\n\n      // Use the query params to build the authorize url\n      var requestUrl,\n        endpoint,\n        urls;\n\n      // Get authorizeUrl and issuer\n      urls = getOAuthUrls(sdk, tokenParams);\n      endpoint = options.codeVerifier ? urls.tokenUrl : urls.authorizeUrl;\n      requestUrl = endpoint + buildAuthorizeParams(tokenParams);\n\n      // Determine the flow type\n      var flowType;\n      if (tokenParams.sessionToken || tokenParams.display === null) {\n        flowType = 'IFRAME';\n      } else if (tokenParams.display === 'popup') {\n        flowType = 'POPUP';\n      } else {\n        flowType = 'IMPLICIT';\n      }\n\n      // Execute the flow type\n      switch (flowType) {\n        case 'IFRAME':\n          var iframePromise = addPostMessageListener(sdk, options.timeout, tokenParams.state);\n          var iframeEl = loadFrame(requestUrl);\n          return iframePromise\n            .then(function (res) {\n              return handleOAuthResponse(sdk, tokenParams, res as OAuthResponse, urls);\n            })\n            .finally(function () {\n              if (document.body.contains(iframeEl)) {\n                iframeEl.parentElement?.removeChild(iframeEl);\n              }\n            });\n\n        case 'POPUP':\n          var oauthPromise; // resolves with OAuth response\n\n          // Add listener on postMessage before window creation, so\n          // postMessage isn't triggered before we're listening\n          if (tokenParams.responseMode === 'okta_post_message') {\n            if (!sdk.features.isPopupPostMessageSupported()) {\n              throw new AuthSdkError('This browser doesn\\'t have full postMessage support');\n            }\n            oauthPromise = addPostMessageListener(sdk, options.timeout, tokenParams.state);\n          }\n\n          // Redirect for authorization\n          // popupWindown can be null when popup is blocked\n          if (popupWindow) { \n            popupWindow.location.assign(requestUrl);\n          }\n\n          // The popup may be closed without receiving an OAuth response. Setup a poller to monitor the window.\n          var popupPromise = new Promise(function (resolve, reject) {\n            var closePoller = setInterval(function () {\n              if (!popupWindow || popupWindow.closed) {\n                clearInterval(closePoller);\n                reject(new AuthSdkError('Unable to parse OAuth flow response'));\n              }\n            }, 100);\n\n            // Proxy the OAuth promise results\n            oauthPromise\n              .then(function (res) {\n                clearInterval(closePoller);\n                resolve(res);\n              })\n              .catch(function (err) {\n                clearInterval(closePoller);\n                reject(err);\n              });\n          });\n\n          return popupPromise\n            .then(function (res) {\n              return handleOAuthResponse(sdk, tokenParams, res as OAuthResponse, urls);\n            })\n            .finally(function () {\n              if (popupWindow && !popupWindow.closed) {\n                popupWindow.close();\n              }\n            });\n\n        default:\n          throw new AuthSdkError('The full page redirect flow is not supported');\n      }\n    });\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { OktaAuthInterface, TokenParams, TokenResponse } from '../types';\nimport { clone } from '../util';\nimport { getToken } from './getToken';\n\nexport function getWithoutPrompt(sdk: OktaAuthInterface, options: TokenParams): Promise<TokenResponse> {\n  if (arguments.length > 2) {\n    return Promise.reject(new AuthSdkError('As of version 3.0, \"getWithoutPrompt\" takes only a single set of options'));\n  }\n  \n  options = clone(options) || {};\n  Object.assign(options, {\n    prompt: 'none',\n    responseMode: 'okta_post_message',\n    display: null\n  });\n  return getToken(sdk, options);\n}\n\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { getOAuthUrls } from './util/oauth';\nimport { isSameRefreshToken } from './util/refreshToken';\nimport { OktaAuthInterface, TokenParams, RefreshToken, Tokens } from '../types';\nimport { handleOAuthResponse } from './handleOAuthResponse';\nimport { postRefreshToken } from './endpoints/token';\n\nexport async function renewTokensWithRefresh(\n  sdk: OktaAuthInterface,\n  tokenParams: TokenParams,\n  refreshTokenObject: RefreshToken\n): Promise<Tokens> {\n  const { clientId } = sdk.options;\n  if (!clientId) {\n    throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to renew tokens');\n  }\n\n  const renewTokenParams: TokenParams = Object.assign({}, tokenParams, {\n    clientId,\n  });\n  const tokenResponse = await postRefreshToken(sdk, renewTokenParams, refreshTokenObject);\n  const urls = getOAuthUrls(sdk, tokenParams);\n  const { tokens } = await handleOAuthResponse(sdk, renewTokenParams, tokenResponse, urls);\n\n  // Support rotating refresh tokens\n  const { refreshToken } = tokens;\n  if (refreshToken && !isSameRefreshToken(refreshToken, refreshTokenObject)) {\n    sdk.tokenManager.updateRefreshToken(refreshToken);\n  }\n\n  return tokens;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { OktaAuthInterface, Token, Tokens, isAccessToken, AccessToken, IDToken, isIDToken } from '../types';\nimport { getWithoutPrompt } from './getWithoutPrompt';\nimport { renewTokensWithRefresh } from './renewTokensWithRefresh';\n\nfunction throwInvalidTokenError() {\n  throw new AuthSdkError(\n    'Renew must be passed a token with an array of scopes and an accessToken or idToken'\n  );\n}\n\n// Multiple tokens may have come back. Return only the token which was requested.\nfunction getSingleToken(originalToken: Token, tokens: Tokens) {\n  if (isIDToken(originalToken)) {\n    return tokens.idToken;\n  }\n  if (isAccessToken(originalToken)) {\n    return tokens.accessToken;\n  }\n  throwInvalidTokenError();\n}\n\n// If we have a refresh token, renew using that, otherwise getWithoutPrompt\nexport async function renewToken(sdk: OktaAuthInterface, token: Token): Promise<Token | undefined> {\n  if (!isIDToken(token) && !isAccessToken(token)) {\n    throwInvalidTokenError();\n  }\n\n  let tokens = sdk.tokenManager.getTokensSync();\n  if (tokens.refreshToken) {\n    tokens = await renewTokensWithRefresh(sdk, {\n      scopes: token.scopes,\n    }, tokens.refreshToken);\n    return getSingleToken(token, tokens);\n  }\n\n  var responseType;\n  if (sdk.options.pkce) {\n    responseType = 'code';\n  } else if (isAccessToken(token)) {\n    responseType = 'token';\n  } else {\n    responseType = 'id_token';\n  }\n\n  const { scopes, authorizeUrl, userinfoUrl, issuer } = token as (AccessToken & IDToken);\n  return getWithoutPrompt(sdk, {\n    responseType,\n    scopes,\n    authorizeUrl,\n    userinfoUrl,\n    issuer\n  })\n    .then(function (res) {\n      return getSingleToken(token, res.tokens);\n    });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { TokenParams, Tokens } from '../types';\nimport { getWithoutPrompt } from './getWithoutPrompt';\nimport { renewTokensWithRefresh } from './renewTokensWithRefresh';\nimport { getDefaultTokenParams } from './util';\n\n// If we have a refresh token, renew using that, otherwise getWithoutPrompt\n// eslint-disable-next-line complexity\nexport async function renewTokens(sdk, options?: TokenParams): Promise<Tokens> {\n  const tokens = sdk.tokenManager.getTokensSync();\n  if (tokens.refreshToken) {\n    return renewTokensWithRefresh(sdk, options || {}, tokens.refreshToken);\n  }\n\n  if (!tokens.accessToken && !tokens.idToken) {\n    throw new AuthSdkError('renewTokens() was called but there is no existing token');\n  }\n\n  const accessToken = tokens.accessToken || {};\n  const idToken = tokens.idToken || {};\n  const scopes = accessToken.scopes || idToken.scopes;\n  if (!scopes) {\n    throw new AuthSdkError('renewTokens: invalid tokens: could not read scopes');\n  }\n  const authorizeUrl = accessToken.authorizeUrl || idToken.authorizeUrl;\n  if (!authorizeUrl) {\n    throw new AuthSdkError('renewTokens: invalid tokens: could not read authorizeUrl');\n  }\n  const userinfoUrl = accessToken.userinfoUrl || sdk.options.userinfoUrl;\n  const issuer = idToken.issuer || sdk.options.issuer;\n\n  // Get tokens using the SSO cookie\n  options = Object.assign({\n    scopes,\n    authorizeUrl,\n    userinfoUrl,\n    issuer\n  }, options);\n\n  if (sdk.options.pkce) {\n    options.responseType = 'code';\n  } else {\n    const { responseType } = getDefaultTokenParams(sdk);\n    options.responseType = responseType;\n  }\n\n  return getWithoutPrompt(sdk, options)\n    .then(res => res.tokens);\n    \n}\n","/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { isFunction } from '../util';\nimport { AuthSdkError, OAuthError } from '../errors';\nimport { httpRequest } from '../http';\nimport { AccessToken, IDToken, UserClaims, isAccessToken, isIDToken } from '../types';\n\nexport async function getUserInfo(sdk, accessTokenObject: AccessToken, idTokenObject: IDToken): Promise<UserClaims> {\n  // If token objects were not passed, attempt to read from the TokenManager\n  if (!accessTokenObject) {\n    accessTokenObject = (await sdk.tokenManager.getTokens()).accessToken as AccessToken;\n  }\n  if (!idTokenObject) {\n    idTokenObject = (await sdk.tokenManager.getTokens()).idToken as IDToken;\n  }\n\n  if (!accessTokenObject || !isAccessToken(accessTokenObject)) {\n    return Promise.reject(new AuthSdkError('getUserInfo requires an access token object'));\n  }\n\n  if (!idTokenObject || !isIDToken(idTokenObject)) {\n    return Promise.reject(new AuthSdkError('getUserInfo requires an ID token object'));\n  }\n\n  return httpRequest(sdk, {\n    url: accessTokenObject.userinfoUrl,\n    method: 'GET',\n    accessToken: accessTokenObject.accessToken\n  })\n    .then(userInfo => {\n      // Only return the userinfo response if subjects match to mitigate token substitution attacks\n      if (userInfo.sub === idTokenObject.claims.sub) {\n        return userInfo;\n      }\n      return Promise.reject(new AuthSdkError('getUserInfo request was rejected due to token mismatch'));\n    })\n    .catch(function (err) {\n      if (err.xhr && (err.xhr.status === 401 || err.xhr.status === 403)) {\n        var authenticateHeader;\n        if (err.xhr.headers && isFunction(err.xhr.headers.get) && err.xhr.headers.get('WWW-Authenticate')) {\n          authenticateHeader = err.xhr.headers.get('WWW-Authenticate');\n        } else if (isFunction(err.xhr.getResponseHeader)) {\n          authenticateHeader = err.xhr.getResponseHeader('WWW-Authenticate');\n        }\n        if (authenticateHeader) {\n          var errorMatches = authenticateHeader.match(/error=\"(.*?)\"/) || [];\n          var errorDescriptionMatches = authenticateHeader.match(/error_description=\"(.*?)\"/) || [];\n          var error = errorMatches[1];\n          var errorDescription = errorDescriptionMatches[1];\n          if (error && errorDescription) {\n            err = new OAuthError(error, errorDescription);\n          }\n        }\n      }\n      throw err;\n    });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { OktaAuthInterface, TokenParams, TokenResponse } from '../types';\nimport { clone } from '../util';\nimport { getToken } from './getToken';\nimport { loadPopup } from './util';\n\nexport function getWithPopup(sdk: OktaAuthInterface, options: TokenParams): Promise<TokenResponse> {\n  if (arguments.length > 2) {\n    return Promise.reject(new AuthSdkError('As of version 3.0, \"getWithPopup\" takes only a single set of options'));\n  }\n\n  // some browsers (safari, firefox) block popup if it's initialed from an async process\n  // here we create the popup window immediately after user interaction\n  // then redirect to the /authorize endpoint when the requestUrl is available\n  const popupWindow = loadPopup('/', options);\n  options = clone(options) || {};\n  Object.assign(options, {\n    display: 'popup',\n    responseMode: 'okta_post_message',\n    popupWindow\n  });\n  return getToken(sdk, options);\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { OktaAuthInterface, TokenParams } from '../types';\nimport { clone } from '../util';\nimport { prepareTokenParams, createOAuthMeta } from './util';\nimport { buildAuthorizeParams } from './endpoints/authorize';\n\nexport async function getWithRedirect(sdk: OktaAuthInterface, options?: TokenParams): Promise<void> {\n  if (arguments.length > 2) {\n    return Promise.reject(new AuthSdkError('As of version 3.0, \"getWithRedirect\" takes only a single set of options'));\n  }\n\n  options = clone(options) || {};\n\n  const tokenParams = await prepareTokenParams(sdk, options);\n  const meta = createOAuthMeta(sdk, tokenParams);\n  const requestUrl = meta.urls.authorizeUrl + buildAuthorizeParams(tokenParams);\n  sdk.transactionManager.save(meta, { oauth: true });\n  sdk.token.getWithRedirect._setLocation(requestUrl);\n}\n","/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { isInteractionRequiredError, urlParamsToObject } from './util';\nimport {\n  ParseFromUrlOptions,\n  TokenResponse,\n  CustomUrls,\n  TransactionMeta,\n  OAuthResponse\n} from '../types';\nimport { isString } from '../util';\nimport { handleOAuthResponse } from './handleOAuthResponse';\n\nfunction removeHash(sdk) {\n  var nativeHistory = sdk.token.parseFromUrl._getHistory();\n  var nativeDoc = sdk.token.parseFromUrl._getDocument();\n  var nativeLoc = sdk.token.parseFromUrl._getLocation();\n  if (nativeHistory && nativeHistory.replaceState) {\n    nativeHistory.replaceState(null, nativeDoc.title, nativeLoc.pathname + nativeLoc.search);\n  } else {\n    nativeLoc.hash = '';\n  }\n}\n\nfunction removeSearch(sdk) {\n  var nativeHistory = sdk.token.parseFromUrl._getHistory();\n  var nativeDoc = sdk.token.parseFromUrl._getDocument();\n  var nativeLoc = sdk.token.parseFromUrl._getLocation();\n  if (nativeHistory && nativeHistory.replaceState) {\n    nativeHistory.replaceState(null, nativeDoc.title, nativeLoc.pathname + nativeLoc.hash);\n  } else {\n    nativeLoc.search = '';\n  }\n}\n\nexport function getResponseMode(sdk): 'query' | 'fragment' {\n  // https://openid.net/specs/openid-connect-core-1_0.html#Authentication\n  var defaultResponseMode = sdk.options.pkce ? 'query' : 'fragment';\n  var responseMode = sdk.options.responseMode || defaultResponseMode;\n  return responseMode;\n}\n\nexport function parseOAuthResponseFromUrl(sdk, options: string | ParseFromUrlOptions): OAuthResponse {\n  options = options || {};\n  if (isString(options)) {\n    options = { url: options } as ParseFromUrlOptions;\n  } else {\n    options = options as ParseFromUrlOptions;\n  }\n\n  var url = options.url;\n  var responseMode = options.responseMode || getResponseMode(sdk);\n  var nativeLoc = sdk.token.parseFromUrl._getLocation();\n  var paramStr;\n\n  if (responseMode === 'query') {\n    paramStr = url ? url.substring(url.indexOf('?')) : nativeLoc.search;\n  } else {\n    paramStr = url ? url.substring(url.indexOf('#')) : nativeLoc.hash;\n  }\n\n  if (!paramStr) {\n    throw new AuthSdkError('Unable to parse a token from the url');\n  }\n\n  return urlParamsToObject(paramStr);\n}\n\nexport function cleanOAuthResponseFromUrl(sdk, options: ParseFromUrlOptions) {\n  // Clean hash or search from the url\n  const responseMode = options.responseMode || getResponseMode(sdk);\n  responseMode === 'query' ? removeSearch(sdk) : removeHash(sdk);\n}\n\nexport async function parseFromUrl(sdk, options?: string | ParseFromUrlOptions): Promise<TokenResponse> {\n  options = options || {};\n  if (isString(options)) {\n    options = { url: options } as ParseFromUrlOptions;\n  } else {\n    options = options as ParseFromUrlOptions;\n  }\n\n  const res: OAuthResponse = parseOAuthResponseFromUrl(sdk, options);\n  const state = res.state;\n  const oauthParams: TransactionMeta = sdk.transactionManager.load({\n    oauth: true,\n    pkce: sdk.options.pkce,\n    state\n  });\n  if (!oauthParams) {\n    return Promise.reject(new AuthSdkError('Unable to retrieve OAuth redirect params from storage'));\n  }\n  const urls: CustomUrls = oauthParams.urls as CustomUrls;\n  delete oauthParams.urls;\n\n  if (!options.url) {\n    // Clean hash or search from the url\n    cleanOAuthResponseFromUrl(sdk, options);\n  }\n\n  return handleOAuthResponse(sdk, oauthParams, res, urls)\n    .catch(err => {\n      if (!isInteractionRequiredError(err)) {\n        sdk.transactionManager.clear({\n          state\n        });\n      }\n      throw err;\n    })\n    .then(res => {\n      sdk.transactionManager.clear({\n        state\n      });\n      return res;\n    });\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { base64UrlToBuffer, bufferToBase64Url } from './base64';\nimport { ActivationData, ChallengeData, IdxAuthenticator } from '../idx/types';\n\n// Get known credentials from list of enrolled authenticators\nconst getEnrolledCredentials = (authenticatorEnrollments: IdxAuthenticator[] = []) => {\n  const credentials: PublicKeyCredentialDescriptor[] = [];\n  authenticatorEnrollments.forEach((enrollement) => {\n    if (enrollement.key === 'webauthn') {\n      credentials.push({\n        type: 'public-key',\n        id: base64UrlToBuffer(enrollement.credentialId),\n      });\n    }\n  });\n  return credentials;\n};\n\n// Build options for navigator.credentials.create\n// https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/create\nexport const buildCredentialCreationOptions = (\n  activationData: ActivationData, authenticatorEnrollments: IdxAuthenticator[]\n) => {\n  return {\n    publicKey: {\n      rp: activationData.rp,\n      user: {\n        id: base64UrlToBuffer(activationData.user.id),\n        name: activationData.user.name,\n        displayName: activationData.user.displayName\n      },\n      challenge: base64UrlToBuffer(activationData.challenge),\n      pubKeyCredParams: activationData.pubKeyCredParams,\n      attestation: activationData.attestation,\n      authenticatorSelection: activationData.authenticatorSelection,\n      excludeCredentials: getEnrolledCredentials(authenticatorEnrollments),\n    }\n  } as CredentialCreationOptions;\n};\n\n\n// Build options for navigator.credentials.get\n// https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/get\nexport const buildCredentialRequestOptions = (\n  challengeData: ChallengeData, authenticatorEnrollments: IdxAuthenticator[]\n) => {\n  return {\n    publicKey: {\n      challenge: base64UrlToBuffer(challengeData.challenge),\n      userVerification: challengeData.userVerification,\n      allowCredentials: getEnrolledCredentials(authenticatorEnrollments),\n    }\n  } as CredentialRequestOptions;\n};\n\n// Build attestation for webauthn enroll\n// https://developer.mozilla.org/en-US/docs/Web/API/AuthenticatorAttestationResponse\nexport const getAttestation = (credential: PublicKeyCredential) => {\n  const response = credential.response as AuthenticatorAttestationResponse;\n  const id = credential.id;\n  const clientData = bufferToBase64Url(response.clientDataJSON);\n  const attestation = bufferToBase64Url(response.attestationObject);\n  return {\n    id,\n    clientData,\n    attestation\n  };\n};\n\n// Build assertion for webauthn verification\n// https://developer.mozilla.org/en-US/docs/Web/API/AuthenticatorAssertionResponse\nexport const getAssertion = (credential: PublicKeyCredential) => {\n  const response = credential.response as AuthenticatorAssertionResponse;\n  const id = credential.id;\n  const clientData = bufferToBase64Url(response.clientDataJSON);\n  const authenticatorData = bufferToBase64Url(response.authenticatorData);\n  const signatureData = bufferToBase64Url(response.signature);\n  return {\n    id,\n    clientData,\n    authenticatorData,\n    signatureData\n  };\n};\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport Cookies from 'js-cookie';\nimport AuthSdkError from '../errors/AuthSdkError';\nimport {\n  StorageProvider,\n  StorageOptions,\n  PKCEStorage,\n  CookieOptions,\n  SimpleStorage,\n  StorageType,\n  BrowserStorageUtil,\n  CookieStorage\n} from '../types';\nimport { warn } from '../util';\n\n// Building this as an object allows us to mock the functions in our tests\nvar storageUtil: BrowserStorageUtil = {\n\n  // These are shimmed in `OktaAuthBase.ts`\n  getHttpCache(): StorageProvider {\n    return null as never as StorageProvider;\n  },\n\n  getPKCEStorage(): PKCEStorage {\n    return null as never as PKCEStorage;\n  },\n\n  // IE11 bug that Microsoft doesn't plan to fix\n  // https://connect.microsoft.com/IE/Feedback/Details/1496040\n  browserHasLocalStorage: function() {\n    try {\n      var storage = this.getLocalStorage();\n      return this.testStorage(storage);\n    } catch (e) {\n      return false;\n    }\n  },\n\n  browserHasSessionStorage: function() {\n    try {\n      var storage = this.getSessionStorage();\n      return this.testStorage(storage);\n    } catch (e) {\n      return false;\n    }\n  },\n\n  testStorageType: function(storageType: StorageType): boolean {\n    var supported = false;\n    switch (storageType) {\n      case 'sessionStorage':\n        supported = this.browserHasSessionStorage();\n        break;\n      case 'localStorage':\n        supported = this.browserHasLocalStorage();\n        break;\n      case 'cookie':\n      case 'memory':\n        supported = true;\n        break;\n      default:\n        supported = false;\n        break;\n    }\n    return supported;\n  },\n\n  getStorageByType: function(storageType: StorageType, options?: StorageOptions): SimpleStorage {\n    let storageProvider;\n    switch (storageType) {\n      case 'sessionStorage':\n        storageProvider = this.getSessionStorage();\n        break;\n      case 'localStorage':\n        storageProvider = this.getLocalStorage();\n        break;\n      case 'cookie':\n        storageProvider = this.getCookieStorage(options);\n        break;\n      case 'memory':\n        storageProvider = this.getInMemoryStorage();\n        break;\n      default:\n        throw new AuthSdkError(`Unrecognized storage option: ${storageType}`);\n        break;\n    }\n    return storageProvider;\n  },\n\n  findStorageType: function(types: StorageType[]) {\n    let curType;\n    let nextType;\n    \n    types = types.slice(); // copy array\n    curType = types.shift();\n    nextType = types.length ? types[0] : null;\n    if (!nextType) {\n      return curType;\n    }\n\n    if (this.testStorageType(curType)) {\n      return curType;\n    }\n\n    // preferred type was unsupported.\n    warn(`This browser doesn't support ${curType}. Switching to ${nextType}.`);\n\n    // fallback to the next type. this is a recursive call\n    return this.findStorageType(types);\n  },\n\n  getLocalStorage: function() {\n    return localStorage;\n  },\n\n  getSessionStorage: function() {\n    return sessionStorage;\n  },\n\n  // Provides webStorage-like interface for cookies\n  getCookieStorage: function(options): CookieStorage {\n    const secure = options!.secure;\n    const sameSite = options!.sameSite;\n    const sessionCookie = options!.sessionCookie;\n    if (typeof secure === 'undefined' || typeof sameSite === 'undefined') {\n      throw new AuthSdkError('getCookieStorage: \"secure\" and \"sameSite\" options must be provided');\n    }\n    const storage: CookieStorage = {\n      getItem: this.storage.get,\n      setItem: (key, value, expiresAt = '2200-01-01T00:00:00.000Z') => {\n        // By defauilt, cookie shouldn't expire\n        expiresAt = (sessionCookie ? null : expiresAt) as string;\n        this.storage.set(key, value, expiresAt, {\n          secure: secure, \n          sameSite: sameSite,\n        });\n      },\n      removeItem: (key) => {\n        this.storage.delete(key);\n      }\n    };\n\n    if (!options!.useSeparateCookies) {\n      return storage;\n    }\n\n    // Tokens are stored separately because cookies have size limits.\n    // Can only be used when storing an object value. Object properties will be saved to separate cookies.\n    // Each property of the object must also be an object.\n    return {\n      getItem: function(key) {\n        var data = storage.getItem(); // read all cookies\n        var value = {};\n        Object.keys(data).forEach(k => {\n          if (k.indexOf(key!) === 0) { // filter out unrelated cookies\n            value[k.replace(`${key}_`, '')] = JSON.parse(data[k]); // populate with cookie data\n          }\n        });\n        return JSON.stringify(value);\n      },\n      setItem: function(key, value) {\n        var existingValues = JSON.parse(this.getItem(key));\n        value = JSON.parse(value);\n        // Set key-value pairs from input to cookies\n        Object.keys(value).forEach(k => {\n          var storageKey = key + '_' + k;\n          var valueToStore = JSON.stringify(value[k]);\n          storage.setItem(storageKey, valueToStore);\n          delete existingValues[k];\n        });\n        // Delete unmatched keys from existing cookies\n        Object.keys(existingValues).forEach(k => {\n          storage.removeItem(key + '_' + k);\n        });\n      },\n      removeItem: function(key) {\n        var existingValues = JSON.parse(this.getItem(key));\n        Object.keys(existingValues).forEach(k => {\n          storage.removeItem(key + '_' + k);\n        });\n      }\n    };\n  },\n\n  // Provides an in-memory solution\n  inMemoryStore: {}, // override this for a unique memory store per instance\n  getInMemoryStorage: function() {\n    return {\n      getItem: (key) => {\n        return this.inMemoryStore[key];\n      },\n      setItem: (key, value) => {\n        this.inMemoryStore[key] = value;\n      }\n    };\n  },\n\n  testStorage: function(storage) {\n    var key = 'okta-test-storage';\n    try {\n      storage.setItem(key, key);\n      storage.removeItem(key);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  },\n\n  storage: {\n    set: function(name: string, value: string, expiresAt: string, options: CookieOptions): string {\n      const { sameSite, secure } = options;\n      if (typeof secure === 'undefined' || typeof sameSite === 'undefined') {\n        throw new AuthSdkError('storage.set: \"secure\" and \"sameSite\" options must be provided');\n      }\n      var cookieOptions: CookieOptions = {\n        path: options.path || '/',\n        secure,\n        sameSite\n      };\n\n      // eslint-disable-next-line no-extra-boolean-cast\n      if (!!(Date.parse(expiresAt))) {\n        // Expires value can be converted to a Date object.\n        //\n        // If the 'expiresAt' value is not provided, or the value cannot be\n        // parsed as a Date object, the cookie will set as a session cookie.\n        cookieOptions.expires = new Date(expiresAt);\n      }\n\n      Cookies.set(name, value, cookieOptions);\n      return this.get(name);\n    },\n\n    get: function(name?: string): string {\n      // return all cookies when no args is provided\n      if (!arguments.length) {\n        return Cookies.get();\n      }\n      return Cookies.get(name);\n    },\n\n    delete: function(name: string): string {\n      return Cookies.remove(name, { path: '/' });\n    }\n  }\n};\n\nexport default storageUtil;\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport default class SdkClock {\n  localOffset: number;\n\n  constructor(localOffset) {\n    // Calculated local clock offset from server time (in milliseconds). Can be positive or negative.\n    this.localOffset = parseInt(localOffset || 0);\n  }\n\n  // factory method. Create an instance of a clock from current context.\n  static create(/* sdk, options */): SdkClock {\n    // TODO: calculate localOffset\n    var localOffset = 0;\n    return new SdkClock(localOffset);\n  }\n\n  // Return the current time (in seconds)\n  now() {\n    var now = (Date.now() + this.localOffset) / 1000;\n    return now;\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { removeNils, clone } from './util';\nimport { AuthSdkError } from './errors';\nimport { validateToken  } from './oidc/util';\nimport { isLocalhost, isIE11OrLess } from './features';\nimport SdkClock from './clock';\nimport {\n  EventEmitter,\n  Token, \n  Tokens, \n  TokenType, \n  TokenManagerOptions, \n  isIDToken, \n  isAccessToken,\n  isRefreshToken,\n  StorageOptions,\n  StorageType,\n  OktaAuthInterface,\n  StorageProvider,\n  TokenManagerErrorEventHandler,\n  TokenManagerEventHandler,\n  TokenManagerInterface,\n  RefreshToken,\n  AccessTokenCallback,\n  IDTokenCallback,\n  RefreshTokenCallback\n} from './types';\nimport { REFRESH_TOKEN_STORAGE_KEY, TOKEN_STORAGE_NAME } from './constants';\n\nconst DEFAULT_OPTIONS = {\n  // TODO: remove in next major version - OKTA-473815\n  autoRenew: true,\n  autoRemove: true,\n  syncStorage: true,\n  // --- //\n  clearPendingRemoveTokens: true,\n  storage: undefined, // will use value from storageManager config\n  expireEarlySeconds: 30,\n  storageKey: TOKEN_STORAGE_NAME,\n  _storageEventDelay: 0\n};\nexport const EVENT_EXPIRED = 'expired';\nexport const EVENT_RENEWED = 'renewed';\nexport const EVENT_ADDED = 'added';\nexport const EVENT_REMOVED = 'removed';\nexport const EVENT_ERROR = 'error';\n\ninterface TokenManagerState {\n  expireTimeouts: Record<string, unknown>;\n  renewPromise: Promise<Token | undefined> | null;\n}\nfunction defaultState(): TokenManagerState {\n  return {\n    expireTimeouts: {},\n    renewPromise: null\n  };\n}\nexport class TokenManager implements TokenManagerInterface {\n  private sdk: OktaAuthInterface;\n  private clock: SdkClock;\n  private emitter: EventEmitter;\n  private storage: StorageProvider;\n  private state: TokenManagerState;\n  private options: TokenManagerOptions;\n\n  on: (event: string, handler: TokenManagerErrorEventHandler | TokenManagerEventHandler, context?: object) => void;\n  off: (event: string, handler?: TokenManagerErrorEventHandler | TokenManagerEventHandler) => void;\n\n  // eslint-disable-next-line complexity\n  constructor(sdk: OktaAuthInterface, options: TokenManagerOptions = {}) {\n    this.sdk = sdk;\n    this.emitter = (sdk as any).emitter;\n    if (!this.emitter) {\n      throw new AuthSdkError('Emitter should be initialized before TokenManager');\n    }\n    \n    options = Object.assign({}, DEFAULT_OPTIONS, removeNils(options));\n    if (isIE11OrLess()) {\n      options._storageEventDelay = options._storageEventDelay || 1000;\n    }\n    if (!isLocalhost()) {\n      options.expireEarlySeconds = DEFAULT_OPTIONS.expireEarlySeconds;\n    }\n\n    this.options = options;\n\n    const storageOptions: StorageOptions = removeNils({\n      storageKey: options.storageKey,\n      secure: options.secure,\n    });\n    if (typeof options.storage === 'object') {\n      // A custom storage provider must implement getItem(key) and setItem(key, val)\n      storageOptions.storageProvider = options.storage;\n    } else if (options.storage) {\n      storageOptions.storageType = options.storage as StorageType;\n    }\n\n    this.storage = sdk.storageManager.getTokenStorage({...storageOptions, useSeparateCookies: true});\n    this.clock = SdkClock.create(/* sdk, options */);\n    this.state = defaultState();\n\n    this.on = this.emitter.on.bind(this.emitter);\n    this.off = this.emitter.off.bind(this.emitter);\n  }\n\n  start() {\n    if (this.options.clearPendingRemoveTokens) {\n      this.clearPendingRemoveTokens();\n    }\n    this.setExpireEventTimeoutAll();\n  }\n  \n  stop() {\n    this.clearExpireEventTimeoutAll();\n  }\n\n  getOptions(): TokenManagerOptions {\n    return clone(this.options);\n  }\n  \n  getExpireTime(token) {\n    const expireEarlySeconds = this.options.expireEarlySeconds || 0;\n    var expireTime = token.expiresAt - expireEarlySeconds;\n    return expireTime;\n  }\n  \n  hasExpired(token) {\n    var expireTime = this.getExpireTime(token);\n    return expireTime <= this.clock.now();\n  }\n  \n  emitExpired(key, token) {\n    this.emitter.emit(EVENT_EXPIRED, key, token);\n  }\n  \n  emitRenewed(key, freshToken, oldToken) {\n    this.emitter.emit(EVENT_RENEWED, key, freshToken, oldToken);\n  }\n  \n  emitAdded(key, token) {\n    this.emitter.emit(EVENT_ADDED, key, token);\n  }\n  \n  emitRemoved(key, token?) {\n    this.emitter.emit(EVENT_REMOVED, key, token);\n  }\n  \n  emitError(error) {\n    this.emitter.emit(EVENT_ERROR, error);\n  }\n  \n  emitEventsForCrossTabsStorageUpdate(newValue, oldValue) {\n    const oldTokens = this.getTokensFromStorageValue(oldValue);\n    const newTokens = this.getTokensFromStorageValue(newValue);\n    Object.keys(newTokens).forEach(key => {\n      const oldToken = oldTokens[key];\n      const newToken = newTokens[key];\n      if (JSON.stringify(oldToken) !== JSON.stringify(newToken)) {\n        this.emitAdded(key, newToken);\n      }\n    });\n    Object.keys(oldTokens).forEach(key => {\n      const oldToken = oldTokens[key];\n      const newToken = newTokens[key];\n      if (!newToken) {\n        this.emitRemoved(key, oldToken);\n      }\n    });\n  }\n  \n  clearExpireEventTimeout(key) {\n    clearTimeout(this.state.expireTimeouts[key] as any);\n    delete this.state.expireTimeouts[key];\n  \n    // Remove the renew promise (if it exists)\n    this.state.renewPromise = null;\n  }\n  \n  clearExpireEventTimeoutAll() {\n    var expireTimeouts = this.state.expireTimeouts;\n    for (var key in expireTimeouts) {\n      if (!Object.prototype.hasOwnProperty.call(expireTimeouts, key)) {\n        continue;\n      }\n      this.clearExpireEventTimeout(key);\n    }\n  }\n  \n  setExpireEventTimeout(key, token) {\n    if (isRefreshToken(token)) {\n      return;\n    }\n\n    var expireTime = this.getExpireTime(token);\n    var expireEventWait = Math.max(expireTime - this.clock.now(), 0) * 1000;\n  \n    // Clear any existing timeout\n    this.clearExpireEventTimeout(key);\n  \n    var expireEventTimeout = setTimeout(() => {\n      this.emitExpired(key, token);\n    }, expireEventWait);\n  \n    // Add a new timeout\n    this.state.expireTimeouts[key] = expireEventTimeout;\n  }\n  \n  setExpireEventTimeoutAll() {\n    var tokenStorage = this.storage.getStorage();\n    for(var key in tokenStorage) {\n      if (!Object.prototype.hasOwnProperty.call(tokenStorage, key)) {\n        continue;\n      }\n      var token = tokenStorage[key];\n      this.setExpireEventTimeout(key, token);\n    }\n  }\n  \n  // reset timeouts to setup autoRenew for tokens from other document context (tabs)\n  resetExpireEventTimeoutAll() {\n    this.clearExpireEventTimeoutAll();\n    this.setExpireEventTimeoutAll();\n  }\n  \n  add(key, token: Token) {\n    var tokenStorage = this.storage.getStorage();\n    validateToken(token);\n    tokenStorage[key] = token;\n    this.storage.setStorage(tokenStorage);\n    this.emitAdded(key, token);\n    this.setExpireEventTimeout(key, token);\n  }\n  \n  getSync(key) {\n    var tokenStorage = this.storage.getStorage();\n    return tokenStorage[key];\n  }\n  \n  async get(key) {\n    return this.getSync(key);\n  }\n  \n  getTokensSync(): Tokens {\n    const tokens = {} as Tokens;\n    const tokenStorage = this.storage.getStorage();\n    Object.keys(tokenStorage).forEach(key => {\n      const token = tokenStorage[key];\n      if (isAccessToken(token)) {\n        tokens.accessToken = token;\n      } else if (isIDToken(token)) {\n        tokens.idToken = token;\n      } else if (isRefreshToken(token)) { \n        tokens.refreshToken = token;\n      }\n    });\n    return tokens;\n  }\n  \n  async getTokens(): Promise<Tokens> {\n    return this.getTokensSync();\n  }\n\n  getStorageKeyByType(type: TokenType): string {\n    const tokenStorage = this.storage.getStorage();\n    const key = Object.keys(tokenStorage).filter(key => {\n      const token = tokenStorage[key];\n      return (isAccessToken(token) && type === 'accessToken') \n        || (isIDToken(token) && type === 'idToken')\n        || (isRefreshToken(token) && type === 'refreshToken');\n    })[0];\n    return key;\n  }\n\n  private getTokenType(token: Token): TokenType {\n    if (isAccessToken(token)) {\n      return 'accessToken';\n    }\n    if (isIDToken(token)) {\n      return 'idToken';\n    }\n    if(isRefreshToken(token)) {\n      return 'refreshToken';\n    }\n    throw new AuthSdkError('Unknown token type');\n  }\n\n  setTokens(\n    tokens: Tokens,\n    // TODO: callbacks can be removed in the next major version OKTA-407224\n    accessTokenCb?: AccessTokenCallback, \n    idTokenCb?: IDTokenCallback,\n    refreshTokenCb?: RefreshTokenCallback\n  ): void {\n    const handleTokenCallback = (key, token) => {\n      const type = this.getTokenType(token);\n      if (type === 'accessToken') {\n        accessTokenCb && accessTokenCb(key, token);\n      } else if (type === 'idToken') {\n        idTokenCb && idTokenCb(key, token);\n      } else if (type === 'refreshToken') {\n        refreshTokenCb && refreshTokenCb(key, token);\n      }\n    };\n    const handleAdded = (key, token) => {\n      this.emitAdded(key, token);\n      this.setExpireEventTimeout(key, token);\n      handleTokenCallback(key, token);\n    };\n    const handleRenewed = (key, token, oldToken) => {\n      this.emitRenewed(key, token, oldToken);\n      this.clearExpireEventTimeout(key);\n      this.setExpireEventTimeout(key, token);\n      handleTokenCallback(key, token);\n    };\n    const handleRemoved = (key, token) => {\n      this.clearExpireEventTimeout(key);\n      this.emitRemoved(key, token);\n      handleTokenCallback(key, token);\n    };\n    \n    const types: TokenType[] = ['idToken', 'accessToken', 'refreshToken'];\n    const existingTokens = this.getTokensSync();\n\n    // valid tokens\n    types.forEach((type) => {\n      const token = tokens[type];\n      if (token) {\n        validateToken(token, type);\n      }\n    });\n  \n    // add token to storage\n    const storage = types.reduce((storage, type) => {\n      const token = tokens[type];\n      if (token) {\n        const storageKey = this.getStorageKeyByType(type) || type;\n        storage[storageKey] = token;\n      }\n      return storage;\n    }, {});\n    this.storage.setStorage(storage);\n  \n    // emit event and start expiration timer\n    types.forEach(type => {\n      const newToken = tokens[type];\n      const existingToken = existingTokens[type];\n      const storageKey = this.getStorageKeyByType(type) || type;\n      if (newToken && existingToken) { // renew\n        // call handleRemoved first, since it clears timers\n        handleRemoved(storageKey, existingToken);\n        handleAdded(storageKey, newToken);\n        handleRenewed(storageKey, newToken, existingToken);\n      } else if (newToken) { // add\n        handleAdded(storageKey, newToken);\n      } else if (existingToken) { //remove\n        handleRemoved(storageKey, existingToken);\n      }\n    });\n  }\n  \n  remove(key) {\n    // Clear any listener for this token\n    this.clearExpireEventTimeout(key);\n  \n    var tokenStorage = this.storage.getStorage();\n    var removedToken = tokenStorage[key];\n    delete tokenStorage[key];\n    this.storage.setStorage(tokenStorage);\n  \n    this.emitRemoved(key, removedToken);\n  }\n  \n  // TODO: this methods is redundant and can be removed in the next major version OKTA-407224\n  async renewToken(token) {\n    return this.sdk.token?.renew(token);\n  }\n  // TODO: this methods is redundant and can be removed in the next major version OKTA-407224\n  validateToken(token: Token) {\n    return validateToken(token);\n  }\n\n  // TODO: renew method should take no param, change in the next major version OKTA-407224\n  renew(key): Promise<Token | undefined> {\n    // Multiple callers may receive the same promise. They will all resolve or reject from the same request.\n    if (this.state.renewPromise) {\n      return this.state.renewPromise;\n    }\n  \n    try {\n      var token = this.getSync(key);\n      if (!token) {\n        throw new AuthSdkError('The tokenManager has no token for the key: ' + key);\n      }\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  \n    // Remove existing autoRenew timeout\n    this.clearExpireEventTimeout(key);\n  \n    // A refresh token means a replace instead of renewal\n    // Store the renew promise state, to avoid renewing again\n    this.state.renewPromise = this.sdk.token.renewTokens()\n      .then(tokens => {\n        this.setTokens(tokens);\n\n        // resolve token based on the key\n        const tokenType = this.getTokenType(token);\n        return tokens[tokenType];\n      })\n      .catch(err => {\n        // If renew fails, remove token from storage and emit error\n        this.remove(key);\n        err.tokenKey = key;\n        this.emitError(err);\n        throw err;\n      })\n      .finally(() => {\n        // Remove existing promise key\n        this.state.renewPromise = null;\n      });\n  \n    return this.state.renewPromise;\n  }\n  \n  clear() {\n    this.clearExpireEventTimeoutAll();\n    this.storage.clearStorage();\n  }\n\n  clearPendingRemoveTokens() {\n    const tokens = this.getTokensSync();\n    Object.keys(tokens).forEach(key => {\n      if (tokens[key].pendingRemove) {\n       this.remove(key);\n      }\n    });\n  }\n  \n  getTokensFromStorageValue(value) {\n    let tokens;\n    try {\n      tokens = JSON.parse(value) || {};\n    } catch (e) {\n      tokens = {};\n    }\n    return tokens;\n  }\n\n  updateRefreshToken(token: RefreshToken) {\n    const key = this.getStorageKeyByType('refreshToken') || REFRESH_TOKEN_STORAGE_KEY;\n\n    // do not emit any event\n    var tokenStorage = this.storage.getStorage();\n    validateToken(token);\n    tokenStorage[key] = token;\n    this.storage.setStorage(tokenStorage);\n  }\n\n  addPendingRemoveFlags() {\n    const tokens = this.getTokensSync();\n    Object.keys(tokens).forEach(key => {\n      tokens[key].pendingRemove = true;\n    });\n    this.setTokens(tokens);\n  }\n  \n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { TokenManager, EVENT_EXPIRED } from '../TokenManager';\nimport { AuthSdkError } from '../errors';\nimport { ServiceInterface, ServiceManagerOptions } from '../types';\nimport { isBrowser } from '../features';\n\nexport class AutoRenewService implements ServiceInterface {\n  private tokenManager: TokenManager;\n  private options: ServiceManagerOptions;\n  private renewTimeQueue: Array<number>;\n  private started = false;\n\n  constructor(tokenManager: TokenManager, options: ServiceManagerOptions = {}) {\n    this.tokenManager = tokenManager;\n    this.options = options;\n    this.renewTimeQueue = [];\n    this.onTokenExpiredHandler = this.onTokenExpiredHandler.bind(this);\n  }\n  \n  private shouldThrottleRenew(): boolean {\n    let res = false;\n    this.renewTimeQueue.push(Date.now());\n    if (this.renewTimeQueue.length >= 10) {\n      // get and remove first item from queue\n      const firstTime = this.renewTimeQueue.shift() as number;\n      const lastTime = this.renewTimeQueue[this.renewTimeQueue.length - 1];\n      res = (lastTime - firstTime) < 30 * 1000;\n    }\n    return res;\n  }\n\n  requiresLeadership() {\n    // If tokens sync storage is enabled, handle tokens expiration only in 1 leader tab\n    return !!this.options.syncStorage && isBrowser();\n  }\n\n  private onTokenExpiredHandler(key: string) {\n    if (this.options.autoRenew) {\n      if (this.shouldThrottleRenew()) {\n        const error = new AuthSdkError('Too many token renew requests');\n        this.tokenManager.emitError(error);\n      } else {\n        this.tokenManager.renew(key).catch(() => {}); // Renew errors will emit an \"error\" event \n      }\n    } else if (this.options.autoRemove) {\n      this.tokenManager.remove(key);\n    }\n  }\n\n  canStart() {\n    return (!!this.options.autoRenew || !!this.options.autoRemove);\n  }\n\n  start() {\n    if (this.canStart()) {\n      this.stop();\n      this.tokenManager.on(EVENT_EXPIRED, this.onTokenExpiredHandler);\n      this.started = true;\n    }\n  }\n\n  stop() {\n    if (this.started) {\n      this.tokenManager.off(EVENT_EXPIRED, this.onTokenExpiredHandler);\n      this.renewTimeQueue = [];\n      this.started = false;\n    }\n  }\n\n  isStarted() {\n    return this.started;\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n/* global window */\nimport { TokenManager } from '../TokenManager';\nimport { isBrowser } from '../features';\nimport { ServiceManagerOptions, ServiceInterface } from '../types';\n\n\nexport class SyncStorageService implements ServiceInterface {\n  private tokenManager: TokenManager;\n  private options: ServiceManagerOptions;\n  private syncTimeout: unknown;\n  private started = false;\n\n  constructor(tokenManager: TokenManager, options: ServiceManagerOptions = {}) {\n    this.tokenManager = tokenManager;\n    this.options = options;\n    this.storageListener = this.storageListener.bind(this);\n  }\n\n  // Sync authState cross multiple tabs when localStorage is used as the storageProvider\n  // A StorageEvent is sent to a window when a storage area it has access to is changed \n  // within the context of another document.\n  // https://developer.mozilla.org/en-US/docs/Web/API/StorageEvent\n  private storageListener({ key, newValue, oldValue }: StorageEvent) {\n    const opts = this.tokenManager.getOptions();\n\n    const handleCrossTabsStorageChange = () => {\n      this.tokenManager.resetExpireEventTimeoutAll();\n      this.tokenManager.emitEventsForCrossTabsStorageUpdate(newValue, oldValue);\n    };\n\n    // Skip if:\n    // not from localStorage.clear (event.key is null)\n    // event.key is not the storageKey\n    // oldValue === newValue\n    if (key && (key !== opts.storageKey || newValue === oldValue)) {\n      return;\n    }\n\n    // LocalStorage cross tabs update is not synced in IE, set a 1s timer by default to read latest value\n    // https://stackoverflow.com/questions/24077117/localstorage-in-win8-1-ie11-does-not-synchronize\n    this.syncTimeout = setTimeout(() => handleCrossTabsStorageChange(), opts._storageEventDelay);\n  }\n\n  requiresLeadership() {\n    return false;\n  }\n\n  isStarted() {\n    return this.started;\n  }\n\n  canStart() {\n    return !!this.options.syncStorage && isBrowser();\n  }\n\n  start() {\n    if (this.canStart()) {\n      this.stop();\n      window.addEventListener('storage', this.storageListener);\n      this.started = true;\n    }\n  }\n\n  stop() {\n    if (this.started) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      window.removeEventListener('storage', this.storageListener!);\n      clearTimeout(this.syncTimeout as any);\n      this.started = false;\n    }\n  }\n} ","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport {\n  ServiceManagerInterface,\n  ServiceInterface,\n  ServiceManagerOptions\n} from './types';\nimport { OktaAuth } from '.';\nimport {\n  BroadcastChannel,\n  createLeaderElection,\n  LeaderElector\n} from 'broadcast-channel';\nimport { AutoRenewService, SyncStorageService } from './services';\nimport { isBrowser } from './features';\n\nexport class ServiceManager implements ServiceManagerInterface {\n  private sdk: OktaAuth;\n  private options: ServiceManagerOptions;\n  private services: Map<string, ServiceInterface>;\n  private channel?: BroadcastChannel;\n  private elector?: LeaderElector;\n  private started: boolean;\n\n  private static knownServices = ['autoRenew', 'syncStorage'];\n\n  private static defaultOptions = {\n    autoRenew: true,\n    autoRemove: true,\n    syncStorage: true\n  };\n\n  constructor(sdk: OktaAuth, options: ServiceManagerOptions = {}) {\n    this.sdk = sdk;\n\n    // TODO: backwards compatibility, remove in next major version - OKTA-473815\n    const { autoRenew, autoRemove, syncStorage } = sdk.tokenManager.getOptions();\n    this.options = Object.assign({}, \n      ServiceManager.defaultOptions,\n      { autoRenew, autoRemove, syncStorage },\n      options\n    );\n\n    this.started = false;\n    this.services = new Map();\n    this.onLeaderDuplicate = this.onLeaderDuplicate.bind(this);\n    this.onLeader = this.onLeader.bind(this);\n\n    ServiceManager.knownServices.forEach(name => {\n      const svc = this.createService(name);\n      if (svc) {\n        this.services.set(name, svc);\n      }\n    });\n  }\n\n  public static canUseLeaderElection() {\n    return isBrowser();\n  }\n\n  private onLeader() {\n    if (this.started) {\n      // Start services that requires leadership\n      this.startServices();\n    }\n  }\n\n  private onLeaderDuplicate() {\n  }\n\n  isLeader() {\n    return !!this.elector?.isLeader;\n  }\n\n  hasLeader() {\n    return this.elector?.hasLeader;\n  }\n\n  isLeaderRequired() {\n    return [...this.services.values()].some(srv => srv.requiresLeadership());\n  }\n\n  start() {\n    if (this.started) {\n      return;     // noop if services have already started\n    }\n    // only start election if a leader is required\n    if (this.isLeaderRequired()) {\n      this.startElector();\n    }\n    this.startServices();\n    this.started = true;\n  }\n  \n  stop() {\n    this.stopElector();\n    this.stopServices();\n    this.started = false;\n  }\n\n  getService(name: string): ServiceInterface | undefined {\n    return this.services.get(name);\n  }\n\n  private startServices() {\n    for (const srv of this.services.values()) {\n      const canStart = srv.canStart() && !srv.isStarted() && (srv.requiresLeadership() ? this.isLeader() : true);\n      if (canStart) {\n        srv.start();\n      }\n    }\n  }\n\n  private stopServices() {\n    for (const srv of this.services.values()) {\n      srv.stop();\n    }\n  }\n\n  private startElector() {\n    this.stopElector();\n    if (ServiceManager.canUseLeaderElection()) {\n      if (!this.channel) {\n        const { broadcastChannelName } = this.options;\n        this.channel = new BroadcastChannel(broadcastChannelName as string);\n      }\n      if (!this.elector) {\n        this.elector = createLeaderElection(this.channel);\n        this.elector.onduplicate = this.onLeaderDuplicate;\n        this.elector.awaitLeadership().then(this.onLeader);\n      }\n    }\n  }\n\n  private stopElector() {\n    if (this.elector) {\n      this.elector?.die();\n      this.elector = undefined;\n      this.channel?.close();\n      this.channel = undefined;\n    }\n  }\n\n  private createService(name: string): ServiceInterface {\n    const tokenManager = this.sdk.tokenManager;\n\n    let service: ServiceInterface | undefined;\n    switch (name) {\n      case 'autoRenew':\n        service = new AutoRenewService(tokenManager, {...this.options});\n        break;\n      case 'syncStorage':\n        service = new SyncStorageService(tokenManager, {...this.options});\n        break;\n      default:\n        throw new Error(`Unknown service ${name}`);\n    }\n    return service;\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n// Implements a queue for synchronous or asynchronous methods\n// Methods will be wrapped in a promise and execute sequentially\n// This can be used to prevent concurrent calls to a single method or a set of methods\n\nimport { isPromise, warn } from './util';\n\ninterface QueueItem {\n  method: () => void;\n  thisObject: object;\n  args: any[];\n  resolve: (value?: unknown) => void;\n  reject: (reason?: unknown) => void;\n}\n\ninterface PromiseQueueOptions {\n  quiet?: boolean; // if false, concurrrency warnings will not be logged\n}\nclass PromiseQueue {\n  queue: QueueItem[];\n  running: boolean;\n  options: PromiseQueueOptions;\n\n  constructor(options: PromiseQueueOptions = { quiet: false }) {\n    this.queue = [];\n    this.running = false;\n    this.options = options;\n  }\n\n  // Returns a promise\n  // If the method is synchronous, it will resolve when the method completes\n  // If the method returns a promise, it will resolve (or reject) with the value from the method's promise\n  push(method: (...args: any) => any, thisObject: any, ...args: any[]) {\n    return new Promise((resolve, reject) => {\n      if (this.queue.length > 0) {\n        // There is at least one other pending call.\n        // The PromiseQueue will prevent these methods from running concurrently.\n        if (this.options.quiet !== false) {\n          warn(\n            'Async method is being called but another async method is already running. ' +\n            'The new method will be delayed until the previous method completes.'\n          );\n        }\n      }\n      this.queue.push({\n        method,\n        thisObject,\n        args,\n        resolve,\n        reject\n      });\n      this.run();\n    });\n  }\n\n  run() {\n    if (this.running) {\n      return;\n    }\n    if (this.queue.length === 0) {\n      return;\n    }\n    this.running = true;\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    var queueItem = this.queue.shift()!;\n    var res = queueItem.method.apply(queueItem.thisObject, queueItem.args as never) as unknown;\n    if (isPromise(res)) {\n      (res as Promise<unknown>).then(queueItem.resolve, queueItem.reject).finally(() => {\n        this.running = false;\n        this.run();\n      });\n    } else {\n      queueItem.resolve(res);\n      this.running = false;\n      this.run();\n    }\n  }\n}\n\nexport default PromiseQueue;","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthSdkError } from '../errors';\nimport { isFingerprintSupported } from '../features';\nimport {\n  addListener,\n  removeListener\n} from '../oidc';\nimport { FingerprintOptions, OktaAuthInterface } from '../types';\n\nexport default function fingerprint(sdk: OktaAuthInterface, options?: FingerprintOptions): Promise<string> {\n  options = options || {};\n\n  if (!isFingerprintSupported()) {\n    return Promise.reject(new AuthSdkError('Fingerprinting is not supported on this device'));\n  }\n\n  var timeout;\n  var iframe;\n  var listener;\n  var promise = new Promise(function (resolve, reject) {\n    iframe = document.createElement('iframe');\n    iframe.style.display = 'none';\n\n    // eslint-disable-next-line complexity\n    listener = function listener(e) {\n      if (!e || !e.data || e.origin !== sdk.getIssuerOrigin()) {\n        return;\n      }\n\n      try {\n        var msg = JSON.parse(e.data);\n      } catch (err) {\n        // iframe messages should all be parsable\n        // skip not parsable messages come from other sources in same origin (browser extensions)\n        // TODO: add namespace flag in okta-core to distinguish messages that come from other sources\n        return;\n      }\n\n      if (!msg) { return; }\n      if (msg.type === 'FingerprintAvailable') {\n        return resolve(msg.fingerprint as string);\n      }\n      if (msg.type === 'FingerprintServiceReady') {\n        e.source.postMessage(JSON.stringify({\n          type: 'GetFingerprint'\n        }), e.origin);\n      }\n    };\n    addListener(window, 'message', listener);\n\n    iframe.src = sdk.getIssuerOrigin() + '/auth/services/devicefingerprint';\n    document.body.appendChild(iframe);\n\n    timeout = setTimeout(function() {\n      reject(new AuthSdkError('Fingerprinting timed out'));\n    }, options?.timeout || 15000);\n  });\n\n  return promise.finally(function() {\n    clearTimeout(timeout);\n    removeListener(window, 'message', listener);\n    if (document.body.contains(iframe)) {\n      iframe.parentElement.removeChild(iframe);\n    }\n  }) as Promise<string>;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n \n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore \n// Do not use this type in code, so it won't be emitted in the declaration output\nimport PCancelable from 'p-cancelable';\nimport { AuthSdkError } from './errors';\nimport { AuthState, AuthStateLogOptions } from './types';\nimport { OktaAuth } from '.';\nimport { getConsole } from './util';\nimport { EVENT_ADDED, EVENT_REMOVED } from './TokenManager';\nimport PromiseQueue from './PromiseQueue';\n\nexport const INITIAL_AUTH_STATE = null;\nconst DEFAULT_PENDING = {\n  updateAuthStatePromise: null,\n  canceledTimes: 0\n};\nconst EVENT_AUTH_STATE_CHANGE = 'authStateChange';\nconst MAX_PROMISE_CANCEL_TIMES = 10;\n\n// only compare first level of authState\nconst isSameAuthState = (prevState: AuthState | null, state: AuthState) => {\n  // initial state is null\n  if (!prevState) {\n    return false;\n  }\n\n  return prevState.isAuthenticated === state.isAuthenticated \n    && JSON.stringify(prevState.idToken) === JSON.stringify(state.idToken)\n    && JSON.stringify(prevState.accessToken) === JSON.stringify(state.accessToken)\n    && prevState.error === state.error;\n};\n\n\nexport class AuthStateManager {\n  _sdk: OktaAuth;\n  _pending: { \n    updateAuthStatePromise: any;\n    canceledTimes: number; \n  };\n  _authState: AuthState | null;\n  _prevAuthState: AuthState | null;\n  _logOptions: AuthStateLogOptions;\n  _transformQueue: PromiseQueue;\n\n  constructor(sdk: OktaAuth) {\n    if (!sdk.emitter) {\n      throw new AuthSdkError('Emitter should be initialized before AuthStateManager');\n    }\n\n    this._sdk = sdk;\n    this._pending = { ...DEFAULT_PENDING };\n    this._authState = INITIAL_AUTH_STATE;\n    this._logOptions = {};\n    this._prevAuthState = null;\n    this._transformQueue = new PromiseQueue({\n      quiet: true\n    });\n\n    // Listen on tokenManager events to start updateState process\n    // \"added\" event is emitted in both add and renew process\n    // Only listen on \"added\" event to update auth state\n    sdk.tokenManager.on(EVENT_ADDED, (key, token) => {\n      this._setLogOptions({ event: EVENT_ADDED, key, token });\n      this.updateAuthState();\n    });\n    sdk.tokenManager.on(EVENT_REMOVED, (key, token) => {\n      this._setLogOptions({ event: EVENT_REMOVED, key, token });\n      this.updateAuthState();\n    });\n  }\n\n  _setLogOptions(options) {\n    this._logOptions = options;\n  }\n\n  getAuthState(): AuthState | null {\n    return this._authState;\n  }\n\n  getPreviousAuthState(): AuthState | null {\n    return this._prevAuthState;\n  }\n\n  async updateAuthState(): Promise<AuthState> {\n    const { transformAuthState, devMode } = this._sdk.options;\n\n    const log = (status) => {\n      const { event, key, token } = this._logOptions;\n      getConsole().group(`OKTA-AUTH-JS:updateAuthState: Event:${event} Status:${status}`);\n      getConsole().log(key, token);\n      getConsole().log('Current authState', this._authState);\n      getConsole().groupEnd();\n      \n      // clear log options after logging\n      this._logOptions = {};\n    };\n\n    const emitAuthStateChange = (authState) => {\n      if (isSameAuthState(this._authState, authState)) {\n        devMode && log('unchanged'); \n        return;\n      }\n      this._prevAuthState = this._authState;\n      this._authState = authState;\n      // emit new authState object\n      this._sdk.emitter.emit(EVENT_AUTH_STATE_CHANGE, { ...authState });\n      devMode && log('emitted');\n    };\n\n    const finalPromise = (origPromise) => {       \n      return this._pending.updateAuthStatePromise.then(() => {\n        const curPromise = this._pending.updateAuthStatePromise;\n        if (curPromise && curPromise !== origPromise) {\n          return finalPromise(curPromise);\n        }\n        return this.getAuthState();\n      });\n    };\n\n    if (this._pending.updateAuthStatePromise) {\n      if (this._pending.canceledTimes >= MAX_PROMISE_CANCEL_TIMES) {\n        // stop canceling then starting a new promise\n        // let existing promise finish to prevent running into loops\n        devMode && log('terminated');\n        return finalPromise(this._pending.updateAuthStatePromise);\n      } else {\n        this._pending.updateAuthStatePromise.cancel();\n      }\n    }\n\n    /* eslint-disable complexity */\n    const cancelablePromise = new PCancelable((resolve, _, onCancel) => {\n      onCancel.shouldReject = false;\n      onCancel(() => {\n        this._pending.updateAuthStatePromise = null;\n        this._pending.canceledTimes = this._pending.canceledTimes + 1;\n        devMode && log('canceled');\n      });\n\n      const emitAndResolve = (authState) => {\n        if (cancelablePromise.isCanceled) {\n          resolve();\n          return;\n        }\n        // emit event and resolve promise \n        emitAuthStateChange(authState);\n        resolve();\n\n        // clear pending states after resolve\n        this._pending = { ...DEFAULT_PENDING };\n      };\n\n      this._sdk.isAuthenticated()\n        .then(() => {\n          if (cancelablePromise.isCanceled) {\n            resolve();\n            return;\n          }\n\n          const { accessToken, idToken, refreshToken } = this._sdk.tokenManager.getTokensSync();\n          const authState = {\n            accessToken,\n            idToken,\n            refreshToken,\n            isAuthenticated: !!(accessToken && idToken)\n          };\n\n          // Enqueue transformAuthState so that it does not run concurrently\n          const promise: Promise<AuthState> = transformAuthState\n            ? this._transformQueue.push(transformAuthState, null, this._sdk, authState) as Promise<AuthState>\n            : Promise.resolve(authState);\n\n          promise\n            .then(authState => emitAndResolve(authState))\n            .catch(error => emitAndResolve({\n              accessToken, \n              idToken, \n              refreshToken,\n              isAuthenticated: false, \n              error\n            }));\n        });\n    });\n    /* eslint-enable complexity */\n    this._pending.updateAuthStatePromise = cancelablePromise;\n\n    return finalPromise(cancelablePromise);\n  }\n\n  subscribe(handler): void {\n    this._sdk.emitter.on(EVENT_AUTH_STATE_CHANGE, handler);\n  }\n\n  unsubscribe(handler?): void {\n    this._sdk.emitter.off(EVENT_AUTH_STATE_CHANGE, handler);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport AuthSdkError from './errors/AuthSdkError';\nimport { StorageProvider, SimpleStorage } from './types';\n\n// formerly known as \"storageBuilder\". Represents an object saved under a key/name.\nexport default class SavedObject implements StorageProvider {\n  storageProvider: SimpleStorage;\n  storageName: string;\n\n  constructor(storage: SimpleStorage, storageName: string) {\n    if (!storage) {\n      throw new AuthSdkError('\"storage\" is required');\n    }\n\n    if (typeof storageName !== 'string' || !storageName.length) {\n      throw new AuthSdkError('\"storageName\" is required');\n    }\n\n    this.storageName = storageName;\n    this.storageProvider = storage;\n  }\n\n  //\n  // SimpleStorage interface\n  //\n\n  getItem(key: string) {\n    return this.getStorage()[key];\n  }\n\n  setItem(key: string, value: any) {\n    return this.updateStorage(key, value);\n  }\n\n  removeItem(key: string) {\n    return this.clearStorage(key);\n  }\n\n  //\n  // StorageProvider interface\n  //\n\n  getStorage() {\n    var storageString = this.storageProvider.getItem(this.storageName);\n    storageString = storageString || '{}';\n    try {\n      return JSON.parse(storageString);\n    } catch(e) {\n      throw new AuthSdkError('Unable to parse storage string: ' + this.storageName);\n    }\n  }\n\n  setStorage(obj?: any) {\n    try {\n      var storageString = obj ? JSON.stringify(obj) : '{}';\n      this.storageProvider.setItem(this.storageName, storageString);\n    } catch(e) {\n      throw new AuthSdkError('Unable to set storage: ' + this.storageName);\n    }\n  }\n\n  clearStorage(key?: string) {\n    if (!key) {\n      // clear all\n      if (this.storageProvider.removeItem) {\n        this.storageProvider.removeItem(this.storageName);\n      } else {\n        this.setStorage();\n      }\n      return;\n    }\n\n    var obj = this.getStorage();\n    delete obj[key];\n    this.setStorage(obj);\n  }\n\n  updateStorage(key, value) {\n    var obj = this.getStorage();\n    obj[key] = value;\n    this.setStorage(obj);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n\nimport {\n  PKCE_STORAGE_NAME,\n  TOKEN_STORAGE_NAME,\n  TRANSACTION_STORAGE_NAME,\n  SHARED_TRANSACTION_STORAGE_NAME,\n  ORIGINAL_URI_STORAGE_NAME,\n  IDX_RESPONSE_STORAGE_NAME,\n  CACHE_STORAGE_NAME,\n  REDIRECT_OAUTH_PARAMS_NAME\n} from './constants';\nimport {\n  StorageUtil,\n  StorageProvider,\n  StorageOptions,\n  PKCEStorage,\n  CookieOptions,\n  TransactionStorage,\n  IdxResponseStorage,\n  StorageManagerOptions,\n  SimpleStorage\n} from './types';\nimport SavedObject from './SavedObject';\nimport { isBrowser } from './features';\nimport { warn } from './util';\nimport { AuthSdkError } from './errors';\n\nfunction logServerSideMemoryStorageWarning(options: StorageOptions) {\n  if (!isBrowser() && !options.storageProvider && !options.storageProvider) {\n    // eslint-disable-next-line max-len\n    warn('Memory storage can only support simple single user use case on server side, please provide custom storageProvider or storageKey if advanced scenarios need to be supported.');\n  }\n}\n\nexport class StorageManager {\n  storageManagerOptions: StorageManagerOptions;\n  cookieOptions: CookieOptions;\n  storageUtil: StorageUtil;\n\n  constructor(storageManagerOptions: StorageManagerOptions, cookieOptions: CookieOptions, storageUtil: StorageUtil) {\n    this.storageManagerOptions = storageManagerOptions;\n    this.cookieOptions = cookieOptions;\n    this.storageUtil = storageUtil;\n  }\n\n  // combines defaults in order\n  getOptionsForSection(sectionName: string, overrideOptions?: StorageOptions) {\n    return Object.assign({}, this.storageManagerOptions[sectionName], overrideOptions);\n  }\n \n  // generic method to get any available storage provider\n  // eslint-disable-next-line complexity\n  getStorage(options: StorageOptions): SimpleStorage {\n    options = Object.assign({}, this.cookieOptions, options); // set defaults\n\n    if (options.storageProvider) {\n      return options.storageProvider;\n    }\n\n    let { storageType, storageTypes } = options;\n\n    if(storageType === 'sessionStorage') {\n      options.sessionCookie = true;\n    }\n\n    // Maintain compatibility. Automatically fallback. May change in next major version. OKTA-362589\n    if (storageType && storageTypes) {\n      const idx = storageTypes.indexOf(storageType);\n      if (idx >= 0) {\n        storageTypes = storageTypes.slice(idx);\n        storageType = undefined;\n      }\n    }\n\n    if (!storageType) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      storageType = this.storageUtil.findStorageType(storageTypes!);\n    }\n    return this.storageUtil.getStorageByType(storageType, options);\n  }\n\n  // stateToken, interactionHandle\n  getTransactionStorage(options?: StorageOptions): TransactionStorage {\n    options = this.getOptionsForSection('transaction', options);\n    logServerSideMemoryStorageWarning(options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || TRANSACTION_STORAGE_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n\n  getSharedTansactionStorage(options?: StorageOptions): TransactionStorage {\n    options = this.getOptionsForSection('shared-transaction', options);\n    logServerSideMemoryStorageWarning(options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || SHARED_TRANSACTION_STORAGE_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n\n  getOriginalUriStorage(options?: StorageOptions): TransactionStorage {\n    options = this.getOptionsForSection('original-uri', options);\n    logServerSideMemoryStorageWarning(options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || ORIGINAL_URI_STORAGE_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n\n  // intermediate idxResponse\n  // store for network traffic optimazation purpose\n  // TODO: revisit in auth-js 6.0 epic JIRA: OKTA-399791\n  getIdxResponseStorage(options?: StorageOptions): IdxResponseStorage | null {\n    let storage;\n    if (isBrowser()) {\n      // on browser side only use memory storage \n      try {\n        storage = this.storageUtil.getStorageByType('memory', options);\n      } catch (e) {\n        // it's ok to miss response storage\n        // eslint-disable-next-line max-len\n        warn('No response storage found, you may want to provide custom implementation for intermediate idx responses to optimize the network traffic');\n      }\n    } else {\n      // on server side re-use transaction custom storage\n      const transactionStorage = this.getTransactionStorage(options);\n      if (transactionStorage) {\n        storage = {\n          getItem: (key) => {\n            const transaction = transactionStorage.getStorage();\n            if (transaction && transaction[key]) {\n              return transaction[key];\n            }\n            return null;\n          },\n          setItem: (key, val) => {\n            const transaction = transactionStorage.getStorage();\n            if (!transaction) {\n              throw new AuthSdkError('Transaction has been cleared, failed to save idxState');\n            }\n            transaction[key] = val;\n            transactionStorage.setStorage(transaction);\n          },\n          removeItem: (key) => {\n            const transaction = transactionStorage.getStorage();\n            if (!transaction) {\n              return;\n            }\n            delete transaction[key];\n            transactionStorage.setStorage(transaction);\n          }\n        };\n      }\n    }\n\n    if (!storage) {\n      return null;\n    }\n\n    return new SavedObject(storage, IDX_RESPONSE_STORAGE_NAME);\n  }\n\n  // access_token, id_token, refresh_token\n  getTokenStorage(options?: StorageOptions): StorageProvider {\n    options = this.getOptionsForSection('token', options);\n    logServerSideMemoryStorageWarning(options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || TOKEN_STORAGE_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n\n  // caches well-known response, among others\n  getHttpCache(options?: StorageOptions): StorageProvider {\n    options = this.getOptionsForSection('cache', options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || CACHE_STORAGE_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n\n  // Will be removed in an upcoming major version. OKTA-362589\n  getLegacyPKCEStorage(options?: StorageOptions): PKCEStorage {\n    options = this.getOptionsForSection('legacy-pkce', options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || PKCE_STORAGE_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n\n  getLegacyOAuthParamsStorage(options?: StorageOptions): StorageProvider {\n    options = this.getOptionsForSection('legacy-oauth-params', options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || REDIRECT_OAUTH_PARAMS_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n}\n","/* eslint-disable no-use-before-define */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n// TODO: remove when idx-js provides type information\n\nexport interface ChallengeData {\n  challenge: string; \n  userVerification: string; \n  extensions?: {\n    appid: string;\n  };\n}\nexport interface ActivationData {\n  challenge: string;\n  rp: {\n    name: string;\n  };\n  user: {\n    id: string;\n    name: string;\n    displayName: string;\n  };\n  pubKeyCredParams: {\n    type: string;\n    alg: number;\n  }[];\n  attestation?: string;\n  authenticatorSelection?: {\n    userVerification?: string;\n    authenticatorAttachment?: string;\n    requireResidentKey?: boolean;\n    residentKey?: string;\n  };\n  excludeCredentials?: {\n    id: string;\n    type: string;\n  }[];\n}\nexport interface IdxAuthenticatorMethod {\n  type: string;\n}\nexport interface IdxAuthenticator {\n  displayName: string;\n  id: string;\n  key: string;\n  methods: IdxAuthenticatorMethod[];\n  type: string;\n  settings?: {\n    complexity?: unknown;\n    age?: unknown;\n  };\n  contextualData?: {\n    enrolledQuestion?: {\n      question: string;\n      questionKey: string;\n    };\n    qrcode?: { \n      href: string; \n      method: string; \n      type: string; \n    };\n    sharedSecret?: string;\n    questions?: {\n      questionKey: string;\n      question: string;\n    }[];\n    questionKeys?: string[];\n    selectedChannel?: string;\n    activationData?: ActivationData;\n    challengeData?: ChallengeData;\n  };\n  credentialId?: string;\n  enrollmentId?: string;\n}\n\nexport interface IdxForm {\n  value: IdxRemediationValue[];\n}\n\nexport interface IdxOption {\n  value: string | { form: IdxForm };\n  label: string;\n  relatesTo?: IdxAuthenticator;\n}\n\nexport interface IdpConfig {\n  id: string;\n  name: string;\n}\n\nexport interface IdxRemediationValueForm {\n  form: IdxForm;\n}\n\nexport interface IdxRemediationValue {\n  name: string;\n  type?: string;\n  required?: boolean;\n  secret?: boolean;\n  visible?: boolean;\n  mutable?: boolean;\n  value?: string | IdxRemediationValueForm;\n  label?: string;\n  form?: IdxForm;\n  options?: IdxOption[];\n  messages?: IdxMessages;\n  minLength?: number;\n  maxLength?: number;\n}\n\nexport interface IdxRemediation {\n  name: string;\n  label?: string;\n  value?: IdxRemediationValue[];\n  relatesTo?: {\n    type?: string;\n    value: IdxAuthenticator;\n  };\n  idp?: IdpConfig;\n  href?: string;\n  method?: string;\n  type?: string;\n  accepts?: string;\n  refresh?: number;\n}\n\nexport interface IdxContext {\n  version: string;\n  stateHandle: string;\n  expiresAt: string;\n  intent: string;\n  currentAuthenticator: {\n    type: string;\n    value: IdxAuthenticator;\n  };\n  authenticators: {\n    type: string;\n    value: IdxAuthenticator[];\n  };\n  authenticatorEnrollments: {\n    type: string;\n    value: IdxAuthenticator[];\n  };\n  enrollmentAuthenticator: {\n    type: string;\n    value: IdxAuthenticator;\n  };\n  user?: {\n    type: string;\n    value: Record<string, unknown>;\n  };\n  app: {\n    type: string;\n    value: Record<string, unknown>;\n  };\n  messages?: IdxMessages;\n  success?: IdxRemediation;\n  failure?: IdxRemediation;\n}\n\nexport interface IdxMessage {\n  message: string;\n  class: string;\n  i18n: {\n    key: string;\n    params?: unknown[];\n  };\n}\n\nexport interface IdxMessages {\n  type: 'array';\n  value: IdxMessage[];\n}\n\n// JSON response from the server\nexport interface RawIdxResponse {\n  version: string;\n  stateHandle: string;\n  intent?: string;\n  expiresAt?: string;\n  remediation?: {\n    type: 'array';\n    value: IdxRemediation[];\n  };\n  messages?: IdxMessages;\n  success?: boolean;\n  successWithInteractionCode?: IdxRemediation;\n}\n\nexport function isRawIdxResponse(obj: any): obj is RawIdxResponse {\n  return obj && obj.version;\n}\n\nexport interface IdxActionParams {\n  [key: string]: string | boolean | number;\n}\n\nexport interface IdxActions {\n  [key: string]: (params?: IdxActionParams) => Promise<IdxResponse>;\n}\n\nexport interface IdxToPersist {\n  interactionHandle?: string;\n  withCredentials?: boolean;\n}\n\nexport interface IdxActionFunction {\n  (params: IdxActionParams): Promise<IdxResponse>;\n  neededParams?: Array<Array<IdxRemediationValue>>;\n}\n\nexport interface IdxResponse {\n  proceed: (remediationName: string, params: unknown) => Promise<IdxResponse>;\n  neededToProceed: IdxRemediation[];\n  rawIdxState: RawIdxResponse;\n  interactionCode?: string;\n  actions: IdxActions;\n  toPersist: IdxToPersist;\n  context?: IdxContext;\n  requestDidSucceed?: boolean;\n  stepUp?: boolean;\n}\n\nexport function isIdxResponse(obj: any): obj is IdxResponse {\n  return obj && isRawIdxResponse(obj.rawIdxState);\n}\n","import { isTransactionMeta, TransactionMeta } from '../types';\nimport { StorageManager } from '../StorageManager';\n\nconst MAX_ENTRY_LIFETIME = 30 * 60 * 1000; // 30 minutes\n\nexport function pruneSharedStorage(storageManager: StorageManager) {\n  const sharedStorage = storageManager.getSharedTansactionStorage();\n  const entries = sharedStorage.getStorage();\n  Object.keys(entries).forEach(state => {\n    const entry = entries[state];\n    const age = Date.now() - entry.dateCreated;\n    if (age > MAX_ENTRY_LIFETIME) {\n      delete entries[state];\n    }\n  });\n  sharedStorage.setStorage(entries);\n}\n\nexport function saveTransactionToSharedStorage(storageManager: StorageManager, state: string, meta: TransactionMeta) {\n  const sharedStorage = storageManager.getSharedTansactionStorage();\n  const entries = sharedStorage.getStorage();\n  entries[state] = {\n    dateCreated: Date.now(),\n    transaction: meta\n  };\n  sharedStorage.setStorage(entries);\n}\n\n\nexport function loadTransactionFromSharedStorage(storageManager: StorageManager, state: string) {\n  const sharedStorage = storageManager.getSharedTansactionStorage();\n  const entries = sharedStorage.getStorage();\n  const entry = entries[state];\n  if (entry && entry.transaction && isTransactionMeta(entry.transaction)) {\n    return entry.transaction;\n  }\n  return null;\n}\n\nexport function clearTransactionFromSharedStorage(storageManager: StorageManager, state: string) {\n  const sharedStorage = storageManager.getSharedTansactionStorage();\n  const entries = sharedStorage.getStorage();\n  delete entries[state];\n  sharedStorage.setStorage(entries);\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthSdkError } from './errors';\nimport { REDIRECT_NONCE_COOKIE_NAME, REDIRECT_OAUTH_PARAMS_NAME, REDIRECT_STATE_COOKIE_NAME } from './constants';\nimport { StorageManager } from './StorageManager';\nimport {\n  StorageProvider,\n  TransactionMeta,\n  isTransactionMeta,\n  isOAuthTransactionMeta,\n  PKCETransactionMeta,\n  OAuthTransactionMeta,\n  TransactionMetaOptions,\n  TransactionManagerOptions,\n  CookieStorage,\n  SavedIdxResponse,\n  IntrospectOptions\n} from './types';\nimport { isRawIdxResponse } from './idx/types/idx-js';\nimport { warn } from './util';\nimport {\n  clearTransactionFromSharedStorage,\n  loadTransactionFromSharedStorage,\n  pruneSharedStorage,\n  saveTransactionToSharedStorage\n} from './util/sharedStorage';\n\nexport interface ClearTransactionMetaOptions extends TransactionMetaOptions {\n  clearSharedStorage?: boolean; // true by default\n  clearIdxResponse?: boolean; // true by default\n}\nexport default class TransactionManager {\n  options: TransactionManagerOptions;\n  storageManager: StorageManager;\n  legacyWidgetSupport: boolean;\n  saveNonceCookie: boolean;\n  saveStateCookie: boolean;\n  saveParamsCookie: boolean;\n  enableSharedStorage: boolean;\n  saveLastResponse: boolean;\n\n  constructor(options: TransactionManagerOptions) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    this.storageManager = options.storageManager!;\n    this.legacyWidgetSupport = options.legacyWidgetSupport === false ? false : true;\n    this.saveNonceCookie = options.saveNonceCookie === false ? false : true;\n    this.saveStateCookie = options.saveStateCookie === false ? false : true;\n    this.saveParamsCookie = options.saveParamsCookie === false ? false : true;\n    this.enableSharedStorage = options.enableSharedStorage === false ? false : true;\n    this.saveLastResponse = options.saveLastResponse === false ? false : true;\n    this.options = options;\n  }\n\n  // eslint-disable-next-line complexity\n  clear(options: ClearTransactionMetaOptions = {}) {\n    const transactionStorage: StorageProvider = this.storageManager.getTransactionStorage();\n    const meta = transactionStorage.getStorage();\n\n    // Clear primary storage (by default, sessionStorage on browser)\n    transactionStorage.clearStorage();\n\n    // Usually we want to also clear shared storage unless another tab may need it to continue/complete a flow\n    if (this.enableSharedStorage && options.clearSharedStorage !== false) {\n      const state = options.state || meta?.state;\n      if (state) {\n        clearTransactionFromSharedStorage(this.storageManager, state);\n      }\n    }\n\n    if (options.clearIdxResponse !== false) {\n      this.clearIdxResponse();\n    }\n    \n    if (!this.legacyWidgetSupport) {\n      return;\n    }\n\n    // This is for compatibility with older versions of the signin widget. OKTA-304806\n    if (options.oauth) {\n      this.clearLegacyOAuthParams();\n    }\n\n    if (options.pkce) {\n      this.clearLegacyPKCE();\n    }\n  }\n\n  // eslint-disable-next-line complexity\n  save(meta: TransactionMeta, options: TransactionMetaOptions = {}) {\n    // There must be only one transaction executing at a time.\n    // Before saving, check to see if a transaction is already stored.\n    // An existing transaction indicates a concurrency/race/overlap condition\n\n    let storage: StorageProvider = this.storageManager.getTransactionStorage();\n    const obj = storage.getStorage();\n    // oie process may need to update transaction in the middle of process for tracking purpose\n    // false alarm might be caused \n    // TODO: revisit for a better solution, https://oktainc.atlassian.net/browse/OKTA-430919\n    if (isTransactionMeta(obj) && !options.muteWarning) {\n      // eslint-disable-next-line max-len\n      warn('a saved auth transaction exists in storage. This may indicate another auth flow is already in progress.');\n    }\n\n    storage.setStorage(meta);\n\n    // Shared storage allows continuation of transaction in another tab\n    if (this.enableSharedStorage && meta.state) {\n      saveTransactionToSharedStorage(this.storageManager, meta.state, meta);\n    }\n\n    if (!options.oauth) {\n      return;\n    }\n  \n    // Legacy cookie storage\n    if (this.saveNonceCookie || this.saveStateCookie || this.saveParamsCookie) {\n      const cookieStorage: CookieStorage = this.storageManager.getStorage({ storageType: 'cookie' }) as CookieStorage;\n\n      if (this.saveParamsCookie) {\n        const { \n          responseType,\n          state,\n          nonce,\n          scopes,\n          clientId,\n          urls,\n          ignoreSignature\n        } = meta;\n        const oauthParams = {\n          responseType,\n          state,\n          nonce,\n          scopes,\n          clientId,\n          urls,\n          ignoreSignature\n        };\n        cookieStorage.setItem(REDIRECT_OAUTH_PARAMS_NAME, JSON.stringify(oauthParams), null);\n      }\n\n      if (this.saveNonceCookie && meta.nonce) {\n        // Set nonce cookie for servers to validate nonce in id_token\n        cookieStorage.setItem(REDIRECT_NONCE_COOKIE_NAME, meta.nonce, null);\n      }\n\n      if (this.saveStateCookie && meta.state) {\n        // Set state cookie for servers to validate state\n        cookieStorage.setItem(REDIRECT_STATE_COOKIE_NAME, meta.state, null);\n      }\n    }\n  }\n\n  exists(options: TransactionMetaOptions = {}): boolean {\n    try {\n      const meta = this.load(options);\n      return !!meta;\n    } catch {\n      return false;\n    }\n  }\n\n  // load transaction meta from storage\n  // eslint-disable-next-line complexity,max-statements\n  load(options: TransactionMetaOptions = {}): TransactionMeta | null {\n\n    let meta: TransactionMeta;\n\n    // If state was passed, try loading transaction data from shared storage\n    if (this.enableSharedStorage && options.state) {\n      pruneSharedStorage(this.storageManager); // prune before load\n      meta = loadTransactionFromSharedStorage(this.storageManager, options.state);\n      if (isTransactionMeta(meta)) {\n        return meta;\n      }\n    }\n\n    let storage: StorageProvider = this.storageManager.getTransactionStorage();\n    meta = storage.getStorage();\n    if (isTransactionMeta(meta)) {\n      // if we have meta in the new location, there is no need to go further\n      return meta;\n    }\n\n    if (!this.legacyWidgetSupport) {\n      return null;\n    }\n\n    // This is for compatibility with older versions of the signin widget. OKTA-304806\n    if (options.oauth) {\n      try {\n        const oauthParams = this.loadLegacyOAuthParams();\n        Object.assign(meta, oauthParams);\n      } finally {\n        this.clearLegacyOAuthParams();\n      }\n    }\n\n    if (options.pkce) {\n      try {\n        const pkceMeta: PKCETransactionMeta = this.loadLegacyPKCE();\n        Object.assign(meta, pkceMeta);\n      } finally {\n        this.clearLegacyPKCE();\n      }\n    }\n\n    if (isTransactionMeta(meta)) {\n      return meta;\n    }\n    return null;\n  }\n\n  // This is for compatibility with older versions of the signin widget. OKTA-304806\n  clearLegacyPKCE(): void {\n    // clear storages\n    let storage: StorageProvider;\n\n    if (this.storageManager.storageUtil.testStorageType('localStorage')) {\n      storage = this.storageManager.getLegacyPKCEStorage({ storageType: 'localStorage' });\n      storage.clearStorage();\n    }\n\n    if (this.storageManager.storageUtil.testStorageType('sessionStorage')) {\n      storage = this.storageManager.getLegacyPKCEStorage({ storageType: 'sessionStorage' });\n      storage.clearStorage();\n    }\n  }\n\n  loadLegacyPKCE(): PKCETransactionMeta {\n    let storage: StorageProvider;\n    let obj;\n    \n    // Try reading from localStorage first.\n    if (this.storageManager.storageUtil.testStorageType('localStorage')) {\n      storage = this.storageManager.getLegacyPKCEStorage({ storageType: 'localStorage' });\n      obj = storage.getStorage();\n      if (obj && obj.codeVerifier) {\n        return obj;\n      }\n    }\n\n    // If meta is not valid, read from sessionStorage. This is expected for more recent versions of the widget.\n    if (this.storageManager.storageUtil.testStorageType('sessionStorage')) {\n      storage = this.storageManager.getLegacyPKCEStorage({ storageType: 'sessionStorage' });\n      obj = storage.getStorage();\n      if (obj && obj.codeVerifier) {\n        return obj;\n      }\n    }\n    \n    // If meta is not valid, throw an exception to avoid misleading server-side error\n    // The most likely cause of this error is trying to handle a callback twice\n    // eslint-disable-next-line max-len\n    throw new AuthSdkError('Could not load PKCE codeVerifier from storage. This may indicate the auth flow has already completed or multiple auth flows are executing concurrently.', undefined);\n  }\n\n  clearLegacyOAuthParams(): void {\n    // clear storages\n    let storage: StorageProvider;\n\n    if (this.storageManager.storageUtil.testStorageType('sessionStorage')) {\n      storage = this.storageManager.getLegacyOAuthParamsStorage({ storageType: 'sessionStorage' });\n      storage.clearStorage();\n    }\n\n    if (this.storageManager.storageUtil.testStorageType('cookie')) {\n      storage = this.storageManager.getLegacyOAuthParamsStorage({ storageType: 'cookie' });\n      storage.clearStorage();\n    }\n  }\n\n  loadLegacyOAuthParams(): OAuthTransactionMeta {\n    let storage: StorageProvider;\n    let oauthParams;\n  \n    // load first from session storage\n    if (this.storageManager.storageUtil.testStorageType('sessionStorage')) {\n      storage = this.storageManager.getLegacyOAuthParamsStorage({ storageType: 'sessionStorage' });\n      oauthParams = storage.getStorage();\n    }\n    if (isOAuthTransactionMeta(oauthParams)) {\n      return oauthParams;\n    }\n\n    // try to load from cookie\n    if (this.storageManager.storageUtil.testStorageType('cookie')) {\n      storage = this.storageManager.getLegacyOAuthParamsStorage({ storageType: 'cookie' });\n      oauthParams = storage.getStorage();\n    }\n\n    if (isOAuthTransactionMeta(oauthParams)) {\n      return oauthParams;\n    }\n\n\n    throw new AuthSdkError('Unable to retrieve OAuth redirect params from storage');\n\n    // Something is there but we don't recognize it\n    // throw new AuthSdkError('Unable to parse the ' + REDIRECT_OAUTH_PARAMS_NAME + ' value from storage');\n  }\n\n  saveIdxResponse(data: SavedIdxResponse): void {\n    if (!this.saveLastResponse) {\n      return;\n    }\n    const storage = this.storageManager.getIdxResponseStorage();\n    if (!storage) {\n      return;\n    }\n    storage.setStorage(data);\n  }\n\n  // eslint-disable-next-line complexity\n  loadIdxResponse(options?: IntrospectOptions): SavedIdxResponse | null {\n    if (!this.saveLastResponse) {\n      return null;\n    }\n    const storage = this.storageManager.getIdxResponseStorage();\n    if (!storage) {\n      return null;\n    }\n    const storedValue = storage.getStorage();\n    if (!storedValue || !isRawIdxResponse(storedValue.rawIdxResponse)) {\n      return null;\n    }\n\n    if (options) {\n      const { stateHandle, interactionHandle } = options;\n      if (stateHandle && storedValue.stateHandle !== stateHandle) {\n        return null;\n      }\n      if (interactionHandle && storedValue.interactionHandle !== interactionHandle) {\n        return null;\n      }\n    }\n\n    return storedValue;\n  }\n\n  clearIdxResponse(): void {\n    if (!this.saveLastResponse) {\n      return;\n    }\n    const storage = this.storageManager.getIdxResponseStorage();\n    storage?.clearStorage();\n  }\n}","/*!\n * Copyright (c) 2018-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport AuthSdkError from './errors/AuthSdkError';\nimport { OktaAuthOptions } from './types';\n\n// TODO: use @okta/configuration-validation (move module to this monorepo?)\n// eslint-disable-next-line complexity\nfunction assertValidConfig(args: OktaAuthOptions) {\n  args = args || {};\n\n  var scopes = args.scopes;\n  if (scopes && !Array.isArray(scopes)) {\n    throw new AuthSdkError('scopes must be a array of strings. ' +\n      'Required usage: new OktaAuth({scopes: [\"openid\", \"email\"]})');\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  var issuer = args.issuer!;\n  if (!issuer) {\n    throw new AuthSdkError('No issuer passed to constructor. ' + \n      'Required usage: new OktaAuth({issuer: \"https://{yourOktaDomain}.com/oauth2/{authServerId}\"})');\n  }\n\n  var isUrlRegex = new RegExp('^http?s?://.+');\n  if (!isUrlRegex.test(issuer)) {\n    throw new AuthSdkError('Issuer must be a valid URL. ' + \n      'Required usage: new OktaAuth({issuer: \"https://{yourOktaDomain}.com/oauth2/{authServerId}\"})');\n  }\n\n  if (issuer.indexOf('-admin.') !== -1) {\n    throw new AuthSdkError('Issuer URL passed to constructor contains \"-admin\" in subdomain. ' +\n      'Required usage: new OktaAuth({issuer: \"https://{yourOktaDomain}.com})');\n  }\n}\n\nexport {\n  assertValidConfig\n};\n","/*!\n * Copyright (c) 2018-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport crossFetch from 'cross-fetch';\nimport { FetchOptions, HttpResponse } from '../types';\n\n// content-type = application/json OR application/ion+json\nconst appJsonContentTypeRegex = /application\\/\\w*\\+?json/;\n\nfunction readData(response: Response): Promise<object | string> {\n  if (response.headers.get('Content-Type') &&\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    response.headers.get('Content-Type')!.toLowerCase().indexOf('application/json') >= 0) {\n  return response.json()\n    // JSON parse can fail if response is not a valid object\n    .catch(e => {\n      return {\n        error: e,\n        errorSummary: 'Could not parse server response'\n      };\n    });\n  } else {\n    return response.text();\n  }\n}\n\nfunction formatResult(status: number, data: object | string, response: Response) {\n  const isObject = typeof data === 'object';\n  const headers = {};\n  for (const pair of (response.headers as any).entries()) {\n    headers[pair[0]] = pair[1];\n  }\n  const result: HttpResponse = {\n    responseText: isObject ? JSON.stringify(data) : data as string,\n    status: status,\n    headers\n  };\n  if (isObject) {\n    result.responseType = 'json';\n    result.responseJSON = data as object;\n  }\n  return result;\n}\n\n/* eslint-disable complexity */\nfunction fetchRequest(method: string, url: string, args: FetchOptions) {\n  var body = args.data;\n  var headers = args.headers || {};\n  var contentType = (headers['Content-Type'] || headers['content-type'] || '');\n\n  if (body && typeof body !== 'string') {\n    // JSON encode body (if appropriate)\n    if (appJsonContentTypeRegex.test(contentType)) {\n      body = JSON.stringify(body);\n    }\n    else if (contentType === 'application/x-www-form-urlencoded') {\n      body = Object.entries(body)\n      .map( ([param, value]) => `${param}=${encodeURIComponent(value)}` )\n      .join('&');\n    }\n  }\n\n  var fetch = global.fetch || crossFetch;\n  var fetchPromise = fetch(url, {\n    method: method,\n    headers: args.headers,\n    body: body as string,\n    credentials: args.withCredentials ? 'include' : 'omit'\n  });\n\n  if (!fetchPromise.finally) {\n    fetchPromise = Promise.resolve(fetchPromise);\n  }\n\n  return fetchPromise.then(function(response) {\n    var error = !response.ok;\n    var status = response.status;\n    return readData(response)\n      .then(data => {\n        return formatResult(status, data, response);\n      })\n      .then(result => {\n        if (error || result.responseJSON?.error) {\n          // Throwing result object since error handling is done in http.js\n          throw result;\n        }\n        return result;\n      });\n  });\n}\n\nexport default fetchRequest;\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* eslint-disable complexity */\nimport { StorageManagerOptions, OktaAuthOptions, StorageUtil } from '../types';\nimport { warn } from '../util';\n\nimport { default as browserStorage } from '../browser/browserStorage';\n\nexport function getStorage(): StorageUtil {\n  const storageUtil = Object.assign({}, browserStorage, {\n    inMemoryStore: {} // create unique storage for this instance\n  });\n  return storageUtil;\n}\n\nexport const STORAGE_MANAGER_OPTIONS: StorageManagerOptions = {\n  token: {\n    storageTypes: [\n      'localStorage',\n      'sessionStorage',\n      'cookie'\n    ]\n  },\n  cache: {\n    storageTypes: [\n      'localStorage',\n      'sessionStorage',\n      'cookie'\n    ]\n  },\n  transaction: {\n    storageTypes: [\n      'sessionStorage',\n      'localStorage',\n      'cookie'\n    ]\n  },\n  'shared-transaction': {\n    storageTypes: [\n      'localStorage'\n    ]\n  },\n  'original-uri': {\n    storageTypes: [\n      'localStorage'\n    ]\n  }\n};\n\nexport const enableSharedStorage = true;\n\nexport function getCookieSettings(args: OktaAuthOptions = {}, isHTTPS: boolean) {\n  // Secure cookies will be automatically used on a HTTPS connection\n  // Non-secure cookies will be automatically used on a HTTP connection\n  // secure option can override the automatic behavior\n  var cookieSettings = args.cookies || {};\n  if (typeof cookieSettings.secure === 'undefined') {\n    cookieSettings.secure = isHTTPS;\n  }\n  if (typeof cookieSettings.sameSite === 'undefined') {\n    cookieSettings.sameSite = cookieSettings.secure ? 'none' : 'lax';\n  }\n\n  // If secure=true, but the connection is not HTTPS, set secure=false.\n  if (cookieSettings.secure && !isHTTPS) {\n    // eslint-disable-next-line no-console\n    warn(\n      'The current page is not being served with the HTTPS protocol.\\n' +\n      'For security reasons, we strongly recommend using HTTPS.\\n' +\n      'If you cannot use HTTPS, set \"cookies.secure\" option to false.'\n    );\n    cookieSettings.secure = false;\n  }\n\n  // Chrome >= 80 will block cookies with SameSite=None unless they are also Secure\n  // If sameSite=none, but the connection is not HTTPS, set sameSite=lax.\n  if (cookieSettings.sameSite === 'none' && !cookieSettings.secure) {\n    cookieSettings.sameSite = 'lax';\n  }\n\n  return cookieSettings;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { removeTrailingSlash, removeNils } from '../util';\nimport { assertValidConfig } from '../builderUtil';\nimport { OktaAuthOptions } from '../types';\n\nimport fetchRequest from '../fetch/fetchRequest';\nimport { getStorage, STORAGE_MANAGER_OPTIONS, enableSharedStorage, getCookieSettings } from './node';\nimport { isHTTPS } from '../features';\n\nexport function getDefaultOptions(): OktaAuthOptions {\n\n  \n  const options = {\n    devMode: false,\n    httpRequestClient: fetchRequest,\n    storageUtil: getStorage(),\n    storageManager: STORAGE_MANAGER_OPTIONS,\n    transactionManager: {\n      enableSharedStorage\n    }\n  };\n  return options;\n}\n\nfunction mergeOptions(options, args): OktaAuthOptions {\n  return Object.assign({}, options, removeNils(args), {\n    storageManager: Object.assign({}, options.storageManager, args.storageManager),\n    transactionManager: Object.assign({}, options.transactionManager, args.transactionManager),\n  });\n}\n\nexport function buildOptions(args: OktaAuthOptions = {}): OktaAuthOptions {\n  assertValidConfig(args);\n  args = mergeOptions(getDefaultOptions(), args);\n  return removeNils({\n    // OIDC configuration\n    issuer: removeTrailingSlash(args.issuer),\n    tokenUrl: removeTrailingSlash(args.tokenUrl),\n    authorizeUrl: removeTrailingSlash(args.authorizeUrl),\n    userinfoUrl: removeTrailingSlash(args.userinfoUrl),\n    revokeUrl: removeTrailingSlash(args.revokeUrl),\n    logoutUrl: removeTrailingSlash(args.logoutUrl),\n    clientId: args.clientId,\n    redirectUri: args.redirectUri,\n    state: args.state,\n    scopes: args.scopes,\n    postLogoutRedirectUri: args.postLogoutRedirectUri,\n    responseMode: args.responseMode,\n    responseType: args.responseType,\n    pkce: args.pkce === false ? false : true, // PKCE defaults to true\n    useInteractionCodeFlow: args.useInteractionCodeFlow,\n\n    // Internal options\n    httpRequestClient: args.httpRequestClient,\n    transformErrorXHR: args.transformErrorXHR,\n    transformAuthState: args.transformAuthState,\n    restoreOriginalUri: args.restoreOriginalUri,\n    storageUtil: args.storageUtil,\n    headers: args.headers,\n    devMode: !!args.devMode,\n    storageManager: args.storageManager,\n    transactionManager: args.transactionManager,\n    cookies: getCookieSettings(args, isHTTPS()),\n    flow: args.flow,\n    codeChallenge: args.codeChallenge,\n    codeChallengeMethod: args.codeChallengeMethod,\n    recoveryToken: args.recoveryToken,\n    activationToken: args.activationToken,\n\n    // Give the developer the ability to disable token signature validation.\n    ignoreSignature: !!args.ignoreSignature,\n\n    // Server-side web applications\n    clientSecret: args.clientSecret\n  });\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2021, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { OktaAuthInterface, IdxTransactionMeta, TransactionMetaOptions, PKCETransactionMeta } from '../types';\nimport { removeNils, warn } from '../util';\nimport { createOAuthMeta } from '../oidc';\n\n// Calculate new values\nexport async function createTransactionMeta(\n  authClient: OktaAuthInterface,\n  options: TransactionMetaOptions = {}\n): Promise<IdxTransactionMeta> {\n  const tokenParams = await authClient.token.prepareTokenParams(options);\n  const pkceMeta = createOAuthMeta(authClient, tokenParams) as PKCETransactionMeta;\n  let {\n    flow = 'default',\n    withCredentials = true,\n    activationToken = undefined,\n    recoveryToken = undefined,\n  } = { ...authClient.options, ...options }; // local options override SDK options\n\n  const meta: IdxTransactionMeta = {\n    ...pkceMeta,\n    flow,\n    withCredentials,\n    activationToken,\n    recoveryToken,\n  };\n  return meta;\n}\n\nexport function hasSavedInteractionHandle(authClient: OktaAuthInterface, options?: TransactionMetaOptions): boolean {\n  const savedMeta = getSavedTransactionMeta(authClient, options);\n  if (savedMeta?.interactionHandle) {\n    return true;\n  }\n  return false;\n}\n\n// Returns the saved transaction meta, if it exists and is valid\nexport function getSavedTransactionMeta(\n  authClient: OktaAuthInterface,\n  options?: TransactionMetaOptions\n): IdxTransactionMeta | undefined {\n  options = removeNils(options);\n  options = { ...authClient.options, ...options }; // local options override SDK options\n  let savedMeta;\n  try {\n    savedMeta = authClient.transactionManager.load(options) as IdxTransactionMeta;\n  } catch (e) {\n    // ignore errors here\n  }\n\n  if (!savedMeta) {\n    return;\n  }\n\n  if (isTransactionMetaValid(savedMeta, options)) {\n    return savedMeta;\n  }\n\n  // existing meta is not valid for this configuration\n  // this is common when changing configuration in local development environment\n  // in a production environment, this may indicate that two apps are sharing a storage key\n  warn('Saved transaction meta does not match the current configuration. ' + \n    'This may indicate that two apps are sharing a storage key.');\n\n}\n\nexport async function getTransactionMeta(\n  authClient: OktaAuthInterface,\n  options?: TransactionMetaOptions\n): Promise<IdxTransactionMeta> {\n  options = removeNils(options);\n  options = { ...authClient.options, ...options }; // local options override SDK options\n  // Load existing transaction meta from storage\n  const validExistingMeta = getSavedTransactionMeta(authClient, options);\n  if (validExistingMeta) {\n    return validExistingMeta;\n  }\n  // No existing? Create new transaction meta.\n  return createTransactionMeta(authClient, options);\n}\n\nexport function saveTransactionMeta (authClient: OktaAuthInterface, meta): void {\n  authClient.transactionManager.save(meta, { muteWarning: true });\n}\n\nexport function clearTransactionMeta (authClient: OktaAuthInterface): void {\n  authClient.transactionManager.clear();\n}\n\nexport function isTransactionMetaValid (meta, options: TransactionMetaOptions  = {}): boolean {\n  // Validate against certain options. If these exist in options, they must match in meta\n  const keys = [\n    'issuer',\n    'clientId',\n    'redirectUri',\n    'state',\n    'codeChallenge',\n    'codeChallengeMethod',\n    'activationToken',\n    'recoveryToken'\n  ];\n  if (isTransactionMetaValidForOptions(meta, options, keys) === false) {\n    return false;\n  }\n\n  // Validate configured flow\n  const { flow } = options;\n  if (isTransactionMetaValidForFlow(meta, flow) === false) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function isTransactionMetaValidForFlow(meta, flow) {\n  // Specific flows should not share transaction data\n  const shouldValidateFlow = flow && flow !== 'default' && flow !== 'proceed';\n  if (shouldValidateFlow) {\n    if (flow !== meta.flow) {\n      // The flow has changed; abandon the old transaction\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function isTransactionMetaValidForOptions(meta, options, keys) {\n  // returns false if values in meta do not match options\n  // if the option does not have a value for a specific key, it is ignored\n  const mismatch = keys.some(key => {\n    const value = options[key];\n    if (value && value !== meta[key]) {\n      return true;\n    }\n  });\n  return !mismatch;\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2021, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n/* eslint complexity:[0,8] */\nimport { OktaAuthInterface, IdxTransactionMeta, InteractOptions, InteractResponse } from '../types';\nimport { getSavedTransactionMeta, saveTransactionMeta } from './transactionMeta';\nimport { getOAuthBaseUrl } from '../oidc';\nimport { createTransactionMeta } from '.';\nimport { removeNils } from '../util';\nimport { httpRequest } from '../http';\n\n\n/* eslint-disable camelcase */\nexport interface InteractParams {\n  client_id: string;\n  scope: string;\n  redirect_uri: string;\n  code_challenge: string;\n  code_challenge_method: string;\n  state: string;\n  activation_token?: string;\n  recovery_token?: string;\n  client_secret?: string;\n}\n/* eslint-enable camelcase */\n\nfunction getResponse(meta: IdxTransactionMeta): InteractResponse {\n  return {\n    meta,\n    interactionHandle: meta.interactionHandle!,\n    state: meta.state\n  };\n}\n\n// Begin or resume a transaction. Returns an interaction handle\nexport async function interact (\n  authClient: OktaAuthInterface, \n  options: InteractOptions = {}\n): Promise<InteractResponse> {\n  options = removeNils(options);\n\n  let meta = getSavedTransactionMeta(authClient, options);\n  // If meta exists, it has been validated against all options\n\n  if (meta?.interactionHandle) {\n    return getResponse(meta); // Saved transaction, return meta\n  }\n\n  // Create new meta, respecting previous meta if it has been set and is not overridden\n  meta = await createTransactionMeta(authClient, { ...meta, ...options });\n  const baseUrl = getOAuthBaseUrl(authClient);\n  let {\n    clientId,\n    redirectUri,\n    state,\n    scopes,\n    withCredentials,\n    codeChallenge,\n    codeChallengeMethod,\n    activationToken,\n    recoveryToken,\n  } = meta as IdxTransactionMeta;\n  const clientSecret = options.clientSecret || authClient.options.clientSecret;\n  withCredentials = withCredentials ?? true;\n\n  /* eslint-disable camelcase */\n  const url = `${baseUrl}/v1/interact`;\n  const params = {\n    client_id: clientId,\n    scope: scopes!.join(' '),\n    redirect_uri: redirectUri,\n    code_challenge: codeChallenge,\n    code_challenge_method: codeChallengeMethod,\n    state,\n  } as InteractParams;\n  if (activationToken) {\n    params.activation_token = activationToken;\n  }\n  if (recoveryToken) {\n    params.recovery_token = recoveryToken;\n  }\n  if (clientSecret) {\n  // X-Device-Token header need to pair with `client_secret`\n  // eslint-disable-next-line max-len\n  // https://oktawiki.atlassian.net/wiki/spaces/eng/pages/2445902453/Support+Device+Binding+in+interact#Scenario-1%3A-Non-User-Agent-with-Confidential-Client-(top-priority)\n    params.client_secret = clientSecret;\n  }\n  /* eslint-enable camelcase */\n\n  const headers = {\n    'Content-Type': 'application/x-www-form-urlencoded',\n  };\n\n  const resp = await httpRequest(authClient, {\n    method: 'POST',\n    url,\n    headers,\n    withCredentials,\n    args: params\n  });\n  const interactionHandle = resp.interaction_handle;\n\n  const newMeta = {\n    ...meta,\n    interactionHandle,\n    \n    // Options which can be passed into interact() should be saved in the meta\n    withCredentials,\n    state,\n    scopes,\n    recoveryToken,\n    activationToken\n  };\n  // Save transaction meta so it can be resumed\n  saveTransactionMeta(authClient, newMeta);\n\n  return getResponse(newMeta);\n}\n","/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\nconst isFieldMutable = function isFieldMutable(field) {\n  // mutable defaults to true, annoyingly\n  return ( field.mutable !== false );\n};\n\nconst divideSingleActionParamsByMutability = function divideSingleActionParamsByMutability( action ) {\n  const defaultParamsForAction = {}; // mutable and present\n  const neededParamsForAction = []; // mutable values\n  const immutableParamsForAction = {}; // immutable\n  // TODO: remove assumption that form names are unique, neededParams being an array is a temp fix\n  // not all actions have value (e.g. redirect)\n  // making sure they are not empty and instead hold the remediation object\n  if (!action.value) {\n    neededParamsForAction.push(action);\n    return { defaultParamsForAction, neededParamsForAction, immutableParamsForAction };\n  }\n\n  for ( let field of action.value ) {\n\n    if ( isFieldMutable( field ) ) {\n\n      neededParamsForAction.push(field);\n\n      if ( field.value ?? false ) {\n        defaultParamsForAction[field.name] = field.value;\n      }\n\n    } else {\n      immutableParamsForAction[field.name] = field.value ?? '';\n    }\n  }\n  return { defaultParamsForAction, neededParamsForAction, immutableParamsForAction };\n};\n\nexport const divideActionParamsByMutability = function divideActionParamsByMutability( actionList ) {\n  // TODO: when removing form name is unique assumption, this may all be redundant\n  actionList = Array.isArray(actionList) ? actionList : [ actionList ];\n  const neededParams = [];\n  const defaultParams = {};\n  const immutableParams = {};\n\n  for ( let action of actionList ) {\n    const { \n      defaultParamsForAction, \n      neededParamsForAction, \n      immutableParamsForAction \n    } = divideSingleActionParamsByMutability(action);\n    neededParams.push(neededParamsForAction);\n    defaultParams[action.name] = defaultParamsForAction;\n    immutableParams[action.name] = immutableParamsForAction;\n  }\n\n  return { defaultParams, neededParams, immutableParams };\n};\n\n","/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* eslint-disable max-len, complexity */\nimport { httpRequest } from '../../../http';\nimport { OktaAuthInterface } from '../../../types';    // auth-js/types\nimport { IdxActionFunction, IdxActionParams, IdxResponse, IdxToPersist } from '../../types/idx-js';\nimport { divideActionParamsByMutability } from './actionParser';\nimport { makeIdxState } from './makeIdxState';\nimport AuthApiError from '../../../errors/AuthApiError';\n\nconst generateDirectFetch = function generateDirectFetch(authClient: OktaAuthInterface, { \n  actionDefinition, \n  defaultParamsForAction = {}, \n  immutableParamsForAction = {}, \n  toPersist = {} as IdxToPersist\n}): IdxActionFunction {\n  const target = actionDefinition.href;\n  return async function(params: IdxActionParams = {}): Promise<IdxResponse> {\n    const headers = {\n      'Content-Type': 'application/json',\n      'Accept': actionDefinition.accepts || 'application/ion+json',\n    };\n    const body = JSON.stringify({\n      ...defaultParamsForAction,\n      ...params,\n      ...immutableParamsForAction\n    });\n\n    try {\n      const response = await httpRequest(authClient, {\n        url: target,\n        method: actionDefinition.method,\n        headers,\n        args: body,\n        withCredentials: toPersist?.withCredentials ?? true\n      });\n\n      return makeIdxState(authClient, { ...response }, toPersist, true);\n    }\n    catch (err) {\n      if (!(err instanceof AuthApiError) || !err?.xhr) {\n        throw err;\n      }\n\n      const response = err.xhr;\n      const payload = response.responseJSON || JSON.parse(response.responseText);\n      const wwwAuthHeader = response.headers['WWW-Authenticate'] || response.headers['www-authenticate'];\n\n      const idxResponse = makeIdxState(authClient, { ...payload }, toPersist, false);\n      if (response.status === 401 && wwwAuthHeader === 'Oktadevicejwt realm=\"Okta Device\"') {\n        // Okta server responds 401 status code with WWW-Authenticate header and new remediation\n        // so that the iOS/MacOS credential SSO extension (Okta Verify) can intercept\n        // the response reaches here when Okta Verify is not installed\n        // set `stepUp` to true if flow should be continued without showing any errors\n        idxResponse.stepUp = true;\n      }\n\n      // Throw IDX response if request did not succeed. This behavior will be removed in version 7.0: OKTA-481844\n      throw idxResponse;\n    }\n  };\n};\n\n// TODO: Resolve in M2: Either build the final polling solution or remove this code\n// const generatePollingFetch = function generatePollingFetch( { actionDefinition, defaultParamsForAction = {}, immutableParamsForAction = {} } ) {\n//   // TODO: Discussions ongoing about when/how to terminate polling: OKTA-246581\n//   const target = actionDefinition.href;\n//   return async function(params) {\n//     return fetch(target, {\n//       method: actionDefinition.method,\n//       headers: {\n//         'content-type': actionDefinition.accepts,\n//       },\n//       body: JSON.stringify({ ...defaultParamsForAction, ...params, ...immutableParamsForAction })\n//     })\n//       .then( response => response.ok ? response.json() : response.json().then( err => Promise.reject(err)) )\n//       .then( idxResponse => makeIdxState(authClient, idxResponse) );\n//   };\n// };\n\nconst generateIdxAction = function generateIdxAction( authClient: OktaAuthInterface, actionDefinition, toPersist ): IdxActionFunction {\n  // TODO: leaving this here to see where the polling is EXPECTED to drop into the code, but removing any accidental trigger of incomplete code\n  // const generator =  actionDefinition.refresh ? generatePollingFetch : generateDirectFetch;\n  const generator = generateDirectFetch;\n  const { defaultParams, neededParams, immutableParams } = divideActionParamsByMutability( actionDefinition );\n\n  const action = generator(authClient, {\n    actionDefinition,\n    defaultParamsForAction: defaultParams[actionDefinition.name],\n    immutableParamsForAction: immutableParams[actionDefinition.name],\n    toPersist\n  });\n  action.neededParams = neededParams;\n  return action;\n};\n\nexport default generateIdxAction;\n","/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\nimport { OktaAuthInterface } from '../../../types';    // auth-js/types\nimport generateIdxAction from './generateIdxAction';\n\nexport const generateRemediationFunctions = function generateRemediationFunctions(\n  authClient: OktaAuthInterface,\n  remediationValue,\n  toPersist = {}\n) {\n  return Object.fromEntries( remediationValue.map( remediation => {\n    return [\n      remediation.name,\n      generateIdxAction(authClient, remediation, toPersist),\n    ];\n  }) );\n};\n","/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* eslint-disable max-len */\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\nimport { OktaAuthInterface } from '../../../types';    // auth-js/types\nimport { generateRemediationFunctions } from './remediationParser';\nimport generateIdxAction from './generateIdxAction';\nimport { JSONPath } from 'jsonpath-plus';\n\nconst SKIP_FIELDS = Object.fromEntries([\n  'remediation', // remediations are put into proceed/neededToProceed\n  'context', // the API response of 'context' isn't externally useful.  We ignore it and put all non-action (contextual) info into idxState.context\n].map( (field) => [ field, !!'skip this field' ] ));\n\nexport const parseNonRemediations = function parseNonRemediations( authClient: OktaAuthInterface, idxResponse, toPersist = {} ) {\n  const actions = {};\n  const context = {};\n\n  Object.keys(idxResponse)\n    .filter( field => !SKIP_FIELDS[field])\n    .forEach( field => {\n      const fieldIsObject = typeof idxResponse[field] === 'object' && !!idxResponse[field];\n\n      if ( !fieldIsObject ) {\n        // simple fields are contextual info\n        context[field] = idxResponse[field];\n        return;\n      }\n\n      if ( idxResponse[field].rel ) {\n        // top level actions\n        actions[idxResponse[field].name] = generateIdxAction(authClient, idxResponse[field], toPersist);\n        return;\n      }\n\n      const { value: fieldValue, type, ...info} = idxResponse[field];\n      context[field] = { type, ...info}; // add the non-action parts as context\n\n      if ( type !== 'object' ) {\n        // only object values hold actions\n        context[field].value = fieldValue;\n        return;\n      }\n\n      // We are an object field containing an object value\n      context[field].value = {};\n      Object.entries(fieldValue)\n        .forEach( ([subField, value]) => {\n          if (value.rel) { // is [field].value[subField] an action?\n            // add any \"action\" value subfields to actions\n            actions[`${field}-${subField.name || subField}`] = generateIdxAction(authClient, value, toPersist);\n          } else {\n            // add non-action value subfields to context\n            context[field].value[subField] = value;\n          }\n        });\n    });\n\n  return { context, actions };\n};\n\nconst expandRelatesTo = (idxResponse, value) => {\n  Object.keys(value).forEach(k => {\n    if (k === 'relatesTo') {\n      const query = Array.isArray(value[k]) ? value[k][0] : value[k];\n      if (typeof query === 'string') {\n        // eslint-disable-next-line new-cap\n        const result = JSONPath({ path: query, json: idxResponse })[0];\n        if (result) {\n          value[k] = result;\n          return;\n        }\n      }\n    }\n    if (Array.isArray(value[k])) {\n      value[k].forEach(innerValue => expandRelatesTo(idxResponse, innerValue));\n    }\n  });\n};\n\nconst convertRemediationAction = (authClient: OktaAuthInterface, remediation, toPersist) => {\n  const remediationActions = generateRemediationFunctions( authClient, [remediation], toPersist );\n  const actionFn = remediationActions[remediation.name];\n  return {\n    ...remediation,\n    action: actionFn,\n  };\n};\n\nexport const parseIdxResponse = function parseIdxResponse( authClient: OktaAuthInterface, idxResponse, toPersist = {} ): {\n  remediations: IdxRemediation[];\n  context: IdxContext;\n  actions: IdxActions;\n} {\n  const remediationData = idxResponse.remediation?.value || [];\n\n  remediationData.forEach(\n    remediation => expandRelatesTo(idxResponse, remediation)\n  );\n\n  const remediations = remediationData.map(remediation => convertRemediationAction( authClient, remediation, toPersist ));\n\n  const { context, actions } = parseNonRemediations( authClient, idxResponse, toPersist );\n\n  return {\n    remediations,\n    context,\n    actions,\n  };\n};\n","/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { IdxResponse } from '../../types/idx-js';\nimport { OktaAuthInterface, RawIdxResponse } from '../../../types';    // auth-js/types\nimport { parseIdxResponse } from './idxResponseParser';\n\nexport function makeIdxState( \n  authClient: OktaAuthInterface,\n  idxResponse: RawIdxResponse,\n  toPersist,\n  requestDidSucceed: boolean\n): IdxResponse {\n  const rawIdxResponse =  idxResponse;\n  const { remediations, context, actions } = parseIdxResponse( authClient, idxResponse, toPersist );\n  const neededToProceed = [...remediations];\n\n  const proceed: IdxResponse['proceed'] = async function( remediationChoice, paramsFromUser = {} ) {\n    /*\n    remediationChoice is the name attribute on each form\n    name should remain unique for items inside the remediation that are considered forms(identify, select-factor)\n    name can be duplicate for items like redirect where its not considered a form(redirect)\n    when names are not unique its a redirect to a href, so widget wont POST to idx-js layer.\n    */\n    const remediationChoiceObject = remediations.find((remediation) => remediation.name === remediationChoice);\n    if ( !remediationChoiceObject ) {\n      return Promise.reject(`Unknown remediation choice: [${remediationChoice}]`);\n    }\n\n    return remediationChoiceObject.action(paramsFromUser);\n  };\n\n  const findCode = item => item.name === 'interaction_code';\n  const interactionCode = rawIdxResponse.successWithInteractionCode?.value?.find( findCode )?.value as string;\n\n  return {\n    proceed,\n    neededToProceed,\n    actions,\n    context,\n    rawIdxState: rawIdxResponse,\n    interactionCode,\n    toPersist,\n    requestDidSucceed,\n  };\n}\n","/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\nimport { makeIdxState } from './makeIdxState';\n\nexport default {\n  makeIdxState,\n};\n","import { OktaAuthInterface } from '../../types';    // auth-js/types\nimport { IdxResponse, RawIdxResponse } from '../types/idx-js';      // idx/types\nimport { IDX_API_VERSION } from '../../constants';\nimport v1 from './v1/parsers';\n\n\nexport const parsersForVersion = function parsersForVersion( version ) {\n  switch (version) {\n    case '1.0.0':\n      return v1;\n    case undefined:\n    case null:\n      throw new Error('Api version is required');\n    default:\n      throw new Error(`Unknown api version: ${version}.  Use an exact semver version.`);\n  }\n};\n\nexport function validateVersionConfig(version) {\n  if ( !version ) {\n    throw new Error('version is required');\n  }\n\n  const cleanVersion = (version ?? '').replace(/[^0-9a-zA-Z._-]/, '');\n  if ( cleanVersion !== version || !version ) {\n    throw new Error('invalid version supplied - version is required and uses semver syntax');\n  }\n\n  parsersForVersion(version); // will throw for invalid version\n}\n\nexport function makeIdxState ( \n  authClient: OktaAuthInterface,\n  rawIdxResponse: RawIdxResponse,\n  toPersist: Record<string, unknown> = {},\n  requestDidSucceed: boolean,\n): IdxResponse {\n  const version = rawIdxResponse?.version ?? IDX_API_VERSION;\n  validateVersionConfig(version);\n  \n  const { makeIdxState } = parsersForVersion(version);\n  return makeIdxState(authClient, rawIdxResponse, toPersist, requestDidSucceed);\n}\n","/* eslint-disable complexity */\n/*!\n * Copyright (c) 2021, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { makeIdxState, validateVersionConfig } from './idxState';\nimport { IntrospectOptions, OktaAuthInterface } from '../types';\nimport { IdxResponse, isRawIdxResponse } from './types/idx-js';\nimport { getOAuthDomain } from '../oidc';\nimport { IDX_API_VERSION } from '../constants';\nimport { httpRequest } from '../http';\nimport { isAuthApiError } from '../errors';\n\nexport async function introspect (\n  authClient: OktaAuthInterface, \n  options: IntrospectOptions = {}\n): Promise<IdxResponse> {\n  let rawIdxResponse;\n  let requestDidSucceed;\n\n  // try load from storage first\n  const savedIdxResponse = authClient.transactionManager.loadIdxResponse(options);\n  if (savedIdxResponse) {\n    rawIdxResponse = savedIdxResponse.rawIdxResponse;\n    requestDidSucceed = savedIdxResponse.requestDidSucceed;\n  }\n\n  // call idx.introspect if no existing idx response available in storage\n  if (!rawIdxResponse) {\n    const version = options.version || IDX_API_VERSION;\n    const domain = getOAuthDomain(authClient);\n    const { interactionHandle, stateHandle } = options;\n    const withCredentials = options.withCredentials ?? true;\n    try {\n      requestDidSucceed = true;\n      validateVersionConfig(version);\n      const url = `${domain}/idp/idx/introspect`;\n      const body = stateHandle ? { stateToken: stateHandle } : { interactionHandle };\n      const headers = {\n        'Content-Type': `application/ion+json; okta-version=${version}`, // Server wants this version info\n        Accept: `application/ion+json; okta-version=${version}`,\n      };\n      rawIdxResponse = await httpRequest(authClient, {\n        method: 'POST',\n        url,\n        headers,\n        withCredentials,\n        args: body\n      });\n    } catch (err) {\n      if (isAuthApiError(err) && err.xhr && isRawIdxResponse(err.xhr.responseJSON)) {\n        rawIdxResponse = err.xhr.responseJSON;\n        requestDidSucceed = false;\n      } else {\n        throw err;\n      }\n    }\n  }\n\n  const { withCredentials } = options;\n  return makeIdxState(authClient, rawIdxResponse, { withCredentials }, requestDidSucceed);\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { IdxRemediation, IdxRemediationValue } from '../types/idx-js';\n\nexport function getAllValues(idxRemediation: IdxRemediation) {\n  return idxRemediation.value?.map(r => r.name);\n}\n\nexport function getRequiredValues(idxRemediation: IdxRemediation) {\n  return idxRemediation.value?.reduce((required, cur) => {\n    if (cur.required) {\n      required.push(cur.name as never);\n    }\n    return required;\n  }, []);\n}\n\nexport function titleCase(str: string) {\n  return str.charAt(0).toUpperCase() + str.substring(1);\n}\n\nexport function getAuthenticatorFromRemediation(\n  remediation: IdxRemediation\n): IdxRemediationValue {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  return remediation.value!.find(({ name }) => name === 'authenticator') as IdxRemediationValue;\n}\n","import { Authenticator, isAuthenticator } from '../types';\n\nexport function formatAuthenticator(incoming: unknown): Authenticator {\n  let authenticator: Authenticator;\n  if  (isAuthenticator(incoming)) {\n    authenticator = incoming;\n  } else if (typeof incoming === 'string') {\n    authenticator = {\n      key: incoming\n    };\n  } else {\n    throw new Error('Invalid format for authenticator');\n  }\n  return authenticator;\n}\n\n// Returns true if the authenticators are equivalent\nexport function compareAuthenticators(auth1, auth2) {\n  if (!auth1 || !auth2) {\n    return false;\n  }\n  // by id\n  if (auth1.id && auth2.id) {\n    return (auth1.id === auth2.id);\n  }\n  // by key\n  if (auth1.key && auth2.key) {\n    return (auth1.key === auth2.key);\n  }\n  return false;\n}\n\n// Find matched authenticator in provided order\nexport function findMatchedOption(authenticators, options) {\n  let option;\n  for (let authenticator of authenticators) {\n    option = options\n      .find(({ relatesTo }) => relatesTo.key === authenticator.key);\n    if (option) {\n      break;\n    }\n  }\n  return option;\n}","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n/* eslint-disable complexity */\nimport { NextStep, IdxMessage, Authenticator, Input, RemediateOptions } from '../../types';\nimport { IdxAuthenticator, IdxRemediation, IdxContext } from '../../types/idx-js';\nimport { getAllValues, getRequiredValues, titleCase, getAuthenticatorFromRemediation } from '../util';\nimport { formatAuthenticator, compareAuthenticators } from '../../authenticator/util';\n\n// A map from IDX data values (server spec) to RemediationValues (client spec)\nexport type IdxToRemediationValueMap = Record<string, string[]>;\n\nexport interface RemediationValues {\n  stateHandle?: string;\n  authenticators?: (Authenticator | string)[];\n  authenticator?: string | Authenticator;\n  authenticatorsData?: Authenticator[];\n  resend?: boolean;\n}\n\nexport interface RemediatorConstructor {\n  new<T extends RemediationValues>(remediation: IdxRemediation, values?: T, options?: RemediateOptions): any;\n}\n\n// Base class - DO NOT expose static remediationName\nexport class Remediator<T extends RemediationValues = RemediationValues> {\n  static remediationName: string;\n\n  remediation: IdxRemediation;\n  values: T;\n  options: RemediateOptions;\n  map?: IdxToRemediationValueMap;\n\n  constructor(remediation: IdxRemediation, values: T = {} as T, options: RemediateOptions = {}) {\n    // assign fields to the instance\n    this.values = { ...values };\n    this.options = { ...options };\n    this.formatAuthenticators();\n    this.remediation = remediation;\n  }\n\n  private formatAuthenticators() {\n    this.values.authenticators = (this.values.authenticators || []) as Authenticator[];\n\n    // ensure authenticators are in the correct format\n    this.values.authenticators = this.values.authenticators.map(authenticator => {\n      return formatAuthenticator(authenticator);\n    });\n\n    // add authenticator (if any) to \"authenticators\"\n    if (this.values.authenticator) {\n      const authenticator = formatAuthenticator(this.values.authenticator);\n      const hasAuthenticatorInList = this.values.authenticators.some(existing => {\n        return compareAuthenticators(authenticator, existing);\n      });\n      if (!hasAuthenticatorInList) {\n        this.values.authenticators.push(authenticator);\n      }\n    }\n\n    // save non-key meta to \"authenticatorsData\" field\n    // authenticators will be removed after selection to avoid select-authenticator loop\n    this.values.authenticatorsData = this.values.authenticators.reduce((acc, authenticator) => {\n      if (typeof authenticator === 'object' && Object.keys(authenticator).length > 1) {\n        // save authenticator meta into authenticator data\n        acc.push(authenticator);\n      }\n      return acc;\n    }, this.values.authenticatorsData || []);\n  }\n\n  getName(): string {\n    return this.remediation.name;\n  }\n\n  // Override this method to provide custom check\n  /* eslint-disable-next-line no-unused-vars, @typescript-eslint/no-unused-vars */\n  canRemediate(): boolean {\n    const required = getRequiredValues(this.remediation);\n    const needed = required!.find((key) => !this.hasData(key));\n    if (needed) {\n      return false; // missing data for a required field\n    }\n    return true; // all required fields have available data\n  }\n\n  // returns an object for the entire remediation form, or just a part\n  getData(key?: string) {\n\n    if (!key) {\n      let allValues = getAllValues(this.remediation);\n      let res = allValues!.reduce((data, key) => {\n        data[key] = this.getData(key); // recursive\n        return data;\n      }, {});\n      return res;\n    }\n\n    // Map value by \"map${Property}\" function in each subClass\n    if (typeof this[`map${titleCase(key)}`] === 'function') {\n      const val = this[`map${titleCase(key)}`](\n        this.remediation.value!.find(({name}) => name === key)\n      );\n      if (val) {\n        return val;\n      }\n    }\n\n    // If a map is defined for this key, return the first aliased property that returns a truthy value\n    if (this.map && this.map[key]) {\n      const entry = this.map[key];\n      for (let i = 0; i < entry.length; i++) {\n        let val = this.values[entry[i]];\n        if (val) {\n          return val;\n        }\n      }\n    }\n\n    // fallback: return the value by key\n    return this.values[key];\n  }\n\n  hasData(\n    key: string // idx name\n  ): boolean \n  {\n    // no attempt to format, we want simple true/false\n    return !!this.getData(key);\n  }\n\n  getNextStep(_context?: IdxContext): NextStep {\n    const name = this.getName();\n    const inputs = this.getInputs();\n    const authenticator = this.getAuthenticator();\n    // TODO: remove type field in the next major version change\n    // https://oktainc.atlassian.net/browse/OKTA-431749\n    const type = authenticator?.type;\n    return { \n      name, \n      inputs, \n      ...(type && { type }),\n      ...(authenticator && { authenticator }),\n    };\n  }\n\n  // Get inputs for the next step\n  private getInputs(): Input[] {\n    const inputs: Input[] = [];\n    const inputsFromRemediation = this.remediation.value || [];\n    inputsFromRemediation.forEach(inputFromRemediation => {\n      let input;\n      let { name, type, visible, messages } = inputFromRemediation;\n      if (visible === false) {\n        return; // Filter out invisible inputs, like stateHandle\n      }\n      if (typeof this[`getInput${titleCase(name)}`] === 'function') {\n        input = this[`getInput${titleCase(name)}`](inputFromRemediation);\n      } else if (type !== 'object') {\n        // handle general primitive types\n        let alias;\n        const aliases = (this.map ? this.map[name] : null) || [];\n        if (aliases.length === 1) {\n          alias = aliases[0];\n        } else {\n          // try find key from values\n          alias = aliases.find(name => Object.keys(this.values).includes(name));\n        }\n        if (alias) {\n          input = { ...inputFromRemediation, name: alias };\n        }\n      }\n      if (!input) {\n        input = inputFromRemediation;\n      }\n      if (Array.isArray(input)) {\n        input.forEach(i => inputs.push(i));\n      } else {\n        // guarantees field-level messages are passed back\n        if (messages) {\n          input.messages = messages;\n        }\n        inputs.push(input);\n      }\n    });\n    return inputs;\n  }\n\n  static getMessages(remediation: IdxRemediation): IdxMessage[] | undefined {\n    if (!remediation.value) {\n      return;\n    }\n    return remediation.value[0]?.form?.value.reduce((messages: IdxMessage[], field) => {\n      if (field.messages) {\n        messages = [...messages, ...field.messages.value];\n      }\n      return messages;\n    }, []);\n  }\n\n  // Prepare values for the next remediation\n  // In general, remove used values from inputs for the current remediation\n  // Override this method if special cases need be handled\n  getValuesAfterProceed(): T {\n    const inputsFromRemediation = this.remediation.value || []; // \"raw\" inputs from server response\n    const inputsFromRemediator = this.getInputs(); // \"aliased\" inputs from SDK remediator\n    const inputs = [\n      ...inputsFromRemediation,\n      ...inputsFromRemediator\n    ];\n    // scrub all values related to this remediation\n    for (const input of inputs) {\n      delete this.values[input.name];\n    }\n    return this.values;\n  }\n\n  protected getAuthenticator(): IdxAuthenticator | undefined {\n    // relatesTo value may be an authenticator or an authenticatorEnrollment\n    const relatesTo = this.remediation.relatesTo?.value;\n    if (!relatesTo) {\n      return;\n    }\n\n    const authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation);\n    if (!authenticatorFromRemediation) {\n      // Hopefully value is an authenticator\n      return relatesTo;\n    }\n\n    // If relatesTo is an authenticatorEnrollment, the id is actually the enrollmentId\n    // Let's get the correct authenticator id from the form value\n    const id = authenticatorFromRemediation.form!.value\n      .find(({ name }) => name === 'id')!.value as string;\n    const enrollmentId = authenticatorFromRemediation.form!.value\n      .find(({ name }) => name === 'enrollmentId')?.value as string;\n\n    return {\n      ...relatesTo,\n      id,\n      enrollmentId\n    };\n  }\n}\n","import { IdxAuthenticator, IdxRemediationValue } from '../types/idx-js';\n\n\nexport interface Credentials {\n  [key: string]: string | undefined;\n}\n\nexport abstract class Authenticator<Values> {\n  meta: IdxAuthenticator;\n\n  constructor(authenticator: IdxAuthenticator) {\n    this.meta = authenticator;\n  }\n\n  abstract canVerify(values: Values): boolean;\n\n  abstract mapCredentials(values: Values): Credentials | undefined;\n\n  abstract getInputs(idxRemediationValue: IdxRemediationValue): any; // TODO: add type\n}\n","import { Authenticator, Credentials } from './Authenticator';\n\nexport interface VerificationCodeValues {\n  verificationCode?: string;\n  otp?: string;\n  credentials?: Credentials;\n}\n\ninterface VerificationCodeCredentials extends Credentials {\n  passcode: string;\n}\n\n// general authenticator to handle \"verificationCode\" input\n// it can be used for \"email\", \"phone\", \"google authenticator\"\n// a new authenticator class should be created if special cases need to be handled\nexport class VerificationCodeAuthenticator extends Authenticator<VerificationCodeValues> {\n  canVerify(values: VerificationCodeValues) {\n    return !!(values.credentials ||values.verificationCode || values.otp);\n  }\n\n  mapCredentials(values): VerificationCodeCredentials | Credentials | undefined {\n    const { credentials, verificationCode, otp } = values;\n    if (!credentials && !verificationCode && !otp) {\n      return;\n    }\n    return credentials || { passcode: verificationCode || otp };\n  }\n\n  getInputs(idxRemediationValue) {\n    return {\n      ...idxRemediationValue.form?.value[0],\n      name: 'verificationCode',\n      type: 'string',\n      required: idxRemediationValue.required\n    };\n  }\n}\n","import { Credentials } from './Authenticator';\nimport { VerificationCodeAuthenticator } from './VerificationCodeAuthenticator';\n\ninterface TotpCredentials extends Credentials {\n  totp: string;\n}\n\nexport class OktaVerifyTotp extends VerificationCodeAuthenticator {\n  mapCredentials(values): TotpCredentials | undefined {\n    const { verificationCode } = values;\n    if (!verificationCode) {\n      return;\n    }\n    return { totp: verificationCode };\n  }\n}\n","import { Authenticator, Credentials } from './Authenticator';\n\nexport interface OktaPasswordInputValues {\n  password?: string;\n  credentials?: Credentials;\n}\n\nexport class OktaPassword extends Authenticator<OktaPasswordInputValues> {\n  canVerify(values: OktaPasswordInputValues) {\n    return !!(values.credentials || values.password);\n  }\n\n  mapCredentials(values: OktaPasswordInputValues): Credentials | undefined {\n    const { credentials, password } = values;\n    if (!credentials && !password) {\n      return;\n    }\n    return credentials || { passcode: password };\n  }\n\n  getInputs(idxRemediationValue) {\n    return {\n      ...idxRemediationValue.form?.value[0],\n      name: 'password',\n      type: 'string',\n      required: idxRemediationValue.required\n    };\n  }\n}\n","import { Authenticator, Credentials } from './Authenticator';\n\nexport interface SecurityQuestionEnrollValues {\n  questionKey?: string;\n  question?: string;\n  answer?: string;\n  credentials?: Credentials;\n}\n\nexport class SecurityQuestionEnrollment extends Authenticator<SecurityQuestionEnrollValues> {\n  canVerify(values: SecurityQuestionEnrollValues) {\n    const { credentials } = values;\n    if (credentials && credentials.questionKey && credentials.answer) {\n      return true;\n    }\n    const { questionKey, question, answer } = values;\n    return !!(questionKey && answer) || !!(question && answer);\n  }\n\n  mapCredentials(values: SecurityQuestionEnrollValues): Credentials | undefined {\n    const { questionKey, question, answer } = values;\n    if (!answer || (!questionKey && !question)) {\n      return;\n    }\n    return {\n      questionKey: question ? 'custom' : questionKey,\n      question,\n      answer\n    };\n  }\n\n  getInputs() {\n    return [\n      { name: 'questionKey', type: 'string', required: true },\n      { name: 'question', type: 'string', label: 'Create a security question' },\n      { name: 'answer', type: 'string', label: 'Answer', required: true },\n    ];\n  }\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { Authenticator, Credentials } from './Authenticator';\n\nexport interface SecurityQuestionVerificationValues {\n  answer?: string;\n  credentials?: Credentials;\n}\n\nexport class SecurityQuestionVerification extends Authenticator<SecurityQuestionVerificationValues> {\n  canVerify(values: SecurityQuestionVerificationValues) {\n    const { credentials } = values;\n    if (credentials && credentials.answer) {\n      return true;\n    }\n    const { answer } = values;\n    return !!answer;\n  }\n\n  mapCredentials(values: SecurityQuestionVerificationValues): Credentials | undefined {\n    const { answer } = values;\n    if (!answer) {\n      return;\n    }\n    return {\n      questionKey: this.meta.contextualData!.enrolledQuestion!.questionKey,\n      answer\n    };\n  }\n\n  getInputs() {\n    return [\n      { name: 'answer', type: 'string', label: 'Answer', required: true }\n    ];\n  }\n}\n","import { Authenticator, Credentials } from './Authenticator';\n\nexport interface WebauthnEnrollValues {\n  clientData?: string;\n  attestation?: string;\n  credentials?: Credentials;\n}\n\nexport class WebauthnEnrollment extends Authenticator<WebauthnEnrollValues> {\n  canVerify(values: WebauthnEnrollValues) {\n    const { credentials } = values;\n    const obj = credentials || values;\n    const { clientData, attestation } = obj;\n    return !!(clientData && attestation);\n  }\n\n  mapCredentials(values: WebauthnEnrollValues): Credentials | undefined {\n    const { credentials, clientData, attestation } = values;\n    if (!credentials && !clientData && !attestation) {\n      return;\n    }\n    return credentials || ({\n      clientData,\n      attestation\n    });\n  }\n\n  getInputs() {\n    return [\n      { name: 'clientData', type: 'string', required: true, visible: false, label: 'Client Data' },\n      { name: 'attestation', type: 'string', required: true, visible: false, label: 'Attestation' },\n    ];\n  }\n}\n","import { Authenticator, Credentials } from './Authenticator';\n\nexport interface WebauthnVerificationValues {\n  clientData?: string;\n  authenticatorData?: string;\n  signatureData?: string;\n  credentials?: Credentials;\n}\n\nexport class WebauthnVerification extends Authenticator<WebauthnVerificationValues> {\n  canVerify(values: WebauthnVerificationValues) {\n    const { credentials } = values;\n    const obj = credentials || values;\n    const { clientData, authenticatorData, signatureData } = obj;\n    return !!(clientData && authenticatorData && signatureData);\n  }\n\n  mapCredentials(values: WebauthnVerificationValues): Credentials | undefined {\n    const { credentials, authenticatorData, clientData, signatureData } = values;\n    if (!credentials && !authenticatorData && !clientData && !signatureData) {\n      return;\n    }\n    return credentials || ({\n      authenticatorData,\n      clientData,\n      signatureData\n    });\n  }\n\n  getInputs() {\n    return [\n      { name: 'authenticatorData', type: 'string', label: 'Authenticator Data', required: true, visible: false },\n      { name: 'clientData', type: 'string', label: 'Client Data', required: true, visible: false },\n      { name: 'signatureData', type: 'string', label: 'Signature Data', required: true, visible: false },\n    ];\n  }\n}\n","import { OktaVerifyTotp } from './OktaVerifyTotp';\nimport { Authenticator } from './Authenticator';\nimport { VerificationCodeAuthenticator } from './VerificationCodeAuthenticator';\nimport { OktaPassword } from './OktaPassword';\nimport { SecurityQuestionEnrollment } from './SecurityQuestionEnrollment';\nimport { SecurityQuestionVerification } from './SecurityQuestionVerification';\nimport { WebauthnEnrollment } from './WebauthnEnrollment';\nimport { WebauthnVerification } from './WebauthnVerification';\nimport { IdxAuthenticator, IdxRemediation } from '../types/idx-js';\nimport { AuthenticatorKey } from '../types';\n\n/* eslint complexity:[0,8] */\nexport function getAuthenticator(remediation: IdxRemediation): Authenticator<any> {\n  const relatesTo = remediation.relatesTo;\n  const value = relatesTo?.value || {} as IdxAuthenticator;\n  switch (value.key) {\n    case AuthenticatorKey.OKTA_PASSWORD:\n      return new OktaPassword(value);\n    case AuthenticatorKey.SECURITY_QUESTION:\n      if (value.contextualData?.enrolledQuestion) {\n        return new SecurityQuestionVerification(value);\n      } else {\n        return new SecurityQuestionEnrollment(value);\n      }\n    case AuthenticatorKey.OKTA_VERIFY:\n      return new OktaVerifyTotp(value);\n    case AuthenticatorKey.WEBAUTHN:\n      if (value.contextualData?.challengeData) {\n        return new WebauthnVerification(value);\n      } else {\n        return new WebauthnEnrollment(value);\n      }\n    default:\n      return new VerificationCodeAuthenticator(value);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Remediator';\nimport { getAuthenticator, Authenticator, AuthenticatorValues } from '../../authenticator';\nimport { IdxRemediation, IdxContext } from '../../types/idx-js';\nimport { NextStep } from '../../types';\n\nexport type VerifyAuthenticatorValues = AuthenticatorValues & RemediationValues;\n\n// Base class - DO NOT expose static remediationName\nexport class VerifyAuthenticator<T extends VerifyAuthenticatorValues = VerifyAuthenticatorValues>\n  extends Remediator<T> {\n\n  authenticator: Authenticator<VerifyAuthenticatorValues>;\n\n  constructor(remediation: IdxRemediation, values: T = {} as T) {\n    super(remediation, values);\n    this.authenticator = getAuthenticator(remediation);\n  }\n\n  getNextStep(context?: IdxContext): NextStep {\n    const nextStep = super.getNextStep(context);\n    const authenticatorEnrollments = context?.authenticatorEnrollments?.value;\n\n    return {\n      ...nextStep,\n      authenticatorEnrollments\n    };\n  }\n\n  canRemediate() {\n    return this.authenticator.canVerify(this.values);\n  }\n\n  mapCredentials() {\n    return this.authenticator.mapCredentials(this.values);\n  }\n\n  getInputCredentials(input) {\n    return this.authenticator.getInputs(input);\n  }\n\n  getValuesAfterProceed(): T {\n    this.values = super.getValuesAfterProceed();\n    let trimmedValues = Object.keys(this.values).filter(valueKey => valueKey !== 'credentials');\n    return trimmedValues.reduce((values, valueKey) => ({...values, [valueKey]: this.values[valueKey]}), {} as T);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { VerifyAuthenticator, VerifyAuthenticatorValues } from './Base/VerifyAuthenticator';\n\nexport type EnrollAuthenticatorValues = VerifyAuthenticatorValues;\n\nexport class EnrollAuthenticator extends VerifyAuthenticator<EnrollAuthenticatorValues> {\n  static remediationName = 'enroll-authenticator';\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\nimport { NextStep } from '../../types';\nimport { IdxContext } from '../types/idx-js';\n\nexport interface EnrollPollValues extends RemediationValues {\n  startPolling?: boolean;\n}\n\nexport class EnrollPoll extends Remediator<EnrollPollValues> {\n  static remediationName = 'enroll-poll';\n\n  canRemediate() {\n    return !!this.values.startPolling || this.options.step === 'enroll-poll';\n  }\n\n  getNextStep(context?: IdxContext): NextStep {\n    const common = super.getNextStep(context);\n    let authenticator = this.getAuthenticator();\n    if (!authenticator && context?.currentAuthenticator) {\n      authenticator = context.currentAuthenticator.value;\n    }\n    return {\n      ...common,\n      authenticator,\n      poll: {\n        required: true,\n        refresh: this.remediation.refresh\n      },\n    };\n  }\n\n  getValuesAfterProceed(): EnrollPollValues {\n    let trimmedValues = Object.keys(this.values).filter(valueKey => valueKey !== 'startPolling');\n    return trimmedValues.reduce((values, valueKey) => ({...values, [valueKey]: this.values[valueKey]}), {});\n  }\n}\n","/*!\n * Copyright (c) 2021-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\nimport { IdxRemediationValueForm, IdxOption, IdxRemediationValue, IdxContext } from '../types/idx-js';\nimport { getAuthenticatorFromRemediation } from './util';\n\n\n\nexport type SelectEnrollmentChannelValues = RemediationValues & {\n  channel?: string;\n};\n\nexport class SelectEnrollmentChannel extends Remediator<SelectEnrollmentChannelValues> {\n  static remediationName = 'select-enrollment-channel';\n\n  canRemediate() {\n    return Boolean(this.values.channel);\n  }\n\n  getNextStep(context: IdxContext) {\n    const common = super.getNextStep();\n    const options = this.getChannels();\n    const authenticator = context.currentAuthenticator.value;\n    return {\n      ...common,\n      ...(options && { options }),\n      authenticator,\n    };\n  }\n\n  private getChannels(): IdxOption[] | undefined {\n    const authenticator: IdxRemediationValue = getAuthenticatorFromRemediation(this.remediation);\n    const remediationValue = authenticator.value as IdxRemediationValueForm;\n    return remediationValue.form.value.find(({ name }) => name === 'channel')?.options;\n  }\n\n  getData() {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const remediationValue = this.remediation!.value![0].value as IdxRemediationValueForm;\n    return {\n      authenticator: {\n        id: remediationValue.form.value[0].value,\n        channel: this.values.channel,\n      },\n      stateHandle: this.values.stateHandle,\n\n    };\n  }\n\n  getValuesAfterProceed(): SelectEnrollmentChannelValues {\n    let trimmedValues = Object.keys(this.values).filter(valueKey => valueKey !== 'channel');\n    return trimmedValues.reduce((values, valueKey) => ({...values, [valueKey]: this.values[valueKey]}), {});\n  }\n}\n","/*!\n * Copyright (c) 2021-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\nimport { IdxContext } from '../types/idx-js';\n\n\nexport type EnrollmentChannelDataValues = RemediationValues & {\n  email?: string;\n  phoneNumber?: string;\n};\n\nexport class EnrollmentChannelData extends Remediator<EnrollmentChannelDataValues> {\n  static remediationName = 'enrollment-channel-data';\n\n  getInputEmail() {\n    return [\n      { name: 'email', type: 'string', required: true, label: 'Email' },\n    ];\n  }\n\n  getInputPhoneNumber() {\n    return [\n      { name: 'phoneNumber', type: 'string', required: true, label: 'Phone Number' },\n    ];\n  }\n\n  canRemediate() {\n    return Boolean(this.values.email || this.values.phoneNumber);\n  }\n\n  getNextStep(context: IdxContext) {\n    const common = super.getNextStep();\n    const authenticator = context.currentAuthenticator.value;\n    return {\n      ...common,\n      authenticator,\n    };\n  }\n\n  getData() {\n    return {\n      stateHandle: this.values.stateHandle,\n      email: this.values.email,\n      phoneNumber: this.values.phoneNumber\n    };\n  }\n\n  getValuesAfterProceed(): EnrollmentChannelDataValues {\n    let trimmedValues = Object.keys(this.values).filter(valueKey => !['email', 'phoneNumber'].includes(valueKey));\n    return trimmedValues.reduce((values, valueKey) => ({...values, [valueKey]: this.values[valueKey]}), {});\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { VerifyAuthenticator, VerifyAuthenticatorValues } from './Base/VerifyAuthenticator';\n\nexport type ChallengeAuthenticatorValues = VerifyAuthenticatorValues;\n\nexport class ChallengeAuthenticator extends VerifyAuthenticator<ChallengeAuthenticatorValues> {\n  static remediationName = 'challenge-authenticator';\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { EnrollPoll } from './EnrollPoll';\n\nexport class ChallengePoll extends EnrollPoll{\n  static remediationName = 'challenge-poll';\n\n  canRemediate() {\n    return !!this.values.startPolling || this.options.step === 'challenge-poll';\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { VerifyAuthenticator, VerifyAuthenticatorValues } from './Base/VerifyAuthenticator';\n\nexport type ResetAuthenticatorValues = VerifyAuthenticatorValues;\n\nexport class ResetAuthenticator extends VerifyAuthenticator<ResetAuthenticatorValues> {\n  static remediationName = 'reset-authenticator';\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { IdxRemediationValue } from '../types/idx-js';\nimport { Remediator, RemediationValues } from './Base/Remediator';\n\nexport interface EnrollProfileValues extends RemediationValues {\n  firstName?: string;\n  lastName?: string;\n  email?: string;\n}\n\nexport class EnrollProfile extends Remediator<EnrollProfileValues> {\n  static remediationName = 'enroll-profile';\n\n  canRemediate() {\n    const userProfileFromValues = this.getData().userProfile;\n    if (!userProfileFromValues) {\n      return false;\n    }\n    // eslint-disable-next-line max-len\n    const userProfileFromRemediation = this.remediation.value!.find(({ name }) => name === 'userProfile') as IdxRemediationValue;\n    return userProfileFromRemediation.form!.value.reduce((canRemediate, curr) => {\n      if (curr.required) {\n        canRemediate = canRemediate && !!userProfileFromValues[curr.name];\n      }\n      return canRemediate;\n    }, true);\n  }\n\n  mapUserProfile({form: { value: profileAttributes }}) {\n    const attributeNames = profileAttributes.map(({name}) => name);\n    const data = attributeNames.reduce((attributeValues, attributeName) => (\n      this.values[attributeName] ? {\n      ...attributeValues,\n      [attributeName]: this.values[attributeName]\n    } : attributeValues), {});\n    if (Object.keys(data).length === 0) {\n      return;\n    }\n    return data;\n  }\n\n  getInputUserProfile(input) {\n    return [...input.form.value];\n  }\n\n  getErrorMessages(errorRemediation) {\n    return errorRemediation.value[0].form.value.reduce((errors, field) => {\n      if (field.messages) {\n        errors.push(field.messages.value[0].message);\n      }\n      return errors;\n    }, []);\n  }\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Credentials } from '../authenticator';\nimport { Remediator, RemediationValues } from './Base/Remediator';\n\nexport interface IdentifyValues extends RemediationValues {\n  username?: string;\n  password?: string;\n  credentials?: Credentials;\n}\n\nexport class Identify extends Remediator<IdentifyValues> {\n  static remediationName = 'identify';\n\n  map = {\n    'identifier': ['username']\n  };\n\n  canRemediate() {\n    const { identifier } = this.getData();\n    return !!identifier;\n  }\n\n  mapCredentials() {\n    const { credentials, password } = this.values;\n    if (!credentials && !password) {\n      return;\n    }\n    return credentials || { passcode: password };\n  }\n\n  getInputCredentials(input) {\n    return {\n      ...input.form.value[0],\n      name: 'password',\n      required: input.required\n    };\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\n\nexport interface ReEnrollAuthenticatorValues extends RemediationValues {\n  newPassword?: string;\n}\n\nexport class ReEnrollAuthenticator extends Remediator<ReEnrollAuthenticatorValues> {\n  static remediationName = 'reenroll-authenticator';\n\n  mapCredentials() {\n    const { newPassword } = this.values;\n    if (!newPassword) {\n      return;\n    }\n    return { \n      passcode: newPassword,\n    };\n  }\n\n  getInputCredentials(input) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const challengeType = this.getAuthenticator()!.type;\n    const name = challengeType === 'password' ? 'newPassword' : 'verificationCode';\n    return {\n      ...input.form.value[0],\n      name\n    };\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator } from './Base/Remediator';\n\nexport class RedirectIdp extends Remediator {\n  static remediationName = 'redirect-idp';\n\n  canRemediate() {\n    return false;\n  }\n\n  getNextStep() {\n    const { name, type, idp, href } = this.remediation;\n    return {\n      name,\n      type,\n      idp,\n      href\n    };\n  }\n\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Remediator';\nimport { getAuthenticatorFromRemediation } from '../util';\nimport { IdxOption, IdxRemediationValue } from '../../types/idx-js';\nimport { Authenticator, isAuthenticator } from '../../types';\nimport { compareAuthenticators, findMatchedOption} from '../../authenticator/util';\n\nexport type SelectAuthenticatorValues = RemediationValues & {\n  authenticator?: string | Authenticator;\n};\n\n// Base class - DO NOT expose static remediationName\nexport class SelectAuthenticator<T extends SelectAuthenticatorValues = SelectAuthenticatorValues>\n  extends Remediator<T> {\n  selectedAuthenticator?: Authenticator;\n  selectedOption?: any;\n\n  // Find matched authenticator in provided order\n  findMatchedOption(authenticators, options) {\n    let option;\n    for (let authenticator of authenticators) {\n      option = options\n        .find(({ relatesTo }) => relatesTo.key === authenticator.key);\n      if (option) {\n        break;\n      }\n    }\n    return option;\n  }\n\n  canRemediate() {\n    const { authenticators, authenticator } = this.values;\n    const authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation);\n    const { options } = authenticatorFromRemediation;\n    // Let users select authenticator if no input is provided\n    if (!authenticators || !authenticators.length) {\n      return false;\n    }\n\n    // Authenticator is explicitly specified by id\n    if (isAuthenticator(authenticator) && authenticator.id) {\n      return true;\n    }\n\n    // Proceed with provided authenticators\n    const matchedOption = this.findMatchedOption(authenticators, options);\n    if (matchedOption) {\n      return true;\n    }\n    \n    return false;\n  }\n\n  getNextStep() {\n    const common = super.getNextStep();\n    const authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation);\n    const options = authenticatorFromRemediation.options!.map(option => {\n      const { \n        label, \n        relatesTo\n      } = option as IdxOption;\n      const key = relatesTo!.key!;\n      return { label, value: key };\n    });\n    return { ...common, options };\n  }\n\n  mapAuthenticator(remediationValue: IdxRemediationValue) {\n    const { authenticators, authenticator } = this.values;\n\n    // Authenticator is explicitly specified by id\n    if (isAuthenticator(authenticator) && authenticator.id) {\n      this.selectedAuthenticator = authenticator; // track the selected authenticator\n      return authenticator;\n    }\n\n    const { options } = remediationValue;\n    const selectedOption = findMatchedOption(authenticators, options);\n    this.selectedAuthenticator = selectedOption.relatesTo; // track the selected authenticator\n    this.selectedOption = selectedOption;\n    return {\n      id: selectedOption?.value.form.value.find(({ name }) => name === 'id').value\n    };\n  }\n\n  getInputAuthenticator() {\n    return { name: 'authenticator', key: 'string' };\n  }\n\n  getValuesAfterProceed(): T {\n    this.values = super.getValuesAfterProceed();\n    // remove used authenticators\n    const authenticators = (this.values.authenticators as Authenticator[])\n      .filter(authenticator => {\n        return compareAuthenticators(authenticator, this.selectedAuthenticator) !== true;\n      });\n    return { ...this.values, authenticators };\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { SelectAuthenticator, SelectAuthenticatorValues } from './Base/SelectAuthenticator';\nimport { getAuthenticatorFromRemediation } from './util';\nimport { IdxRemediation } from '../types/idx-js';\nimport { AuthenticatorKey, Authenticator, RemediateOptions } from '../types';\n\nexport type SelectAuthenticatorAuthenticateValues = SelectAuthenticatorValues & {\n  password?: string;\n};\n\nexport class SelectAuthenticatorAuthenticate extends SelectAuthenticator<SelectAuthenticatorAuthenticateValues> {\n  static remediationName = 'select-authenticator-authenticate';\n\n  constructor(remediation: IdxRemediation, values: SelectAuthenticatorValues = {}, options: RemediateOptions = {}) {\n    super(remediation, values, options);\n\n    // Preset password authenticator to trigger recover action\n    const isRecoveryFlow = this.options.flow === 'recoverPassword';\n    const hasPasswordInOptions = getAuthenticatorFromRemediation(remediation)\n      .options?.some(({ relatesTo }) => relatesTo?.key === AuthenticatorKey.OKTA_PASSWORD);\n    if (hasPasswordInOptions && (isRecoveryFlow || this.values.password)) {\n      this.values.authenticators = [\n        ...this.values.authenticators || [],\n        { key: AuthenticatorKey.OKTA_PASSWORD }\n      ] as Authenticator[];\n    }\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { SelectAuthenticator, SelectAuthenticatorValues } from './Base/SelectAuthenticator';\n\nexport type SelectAuthenticatorEnrollValues = SelectAuthenticatorValues;\n\nexport class SelectAuthenticatorEnroll extends SelectAuthenticator<SelectAuthenticatorEnrollValues> {\n  static remediationName = 'select-authenticator-enroll';\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { SelectAuthenticator, SelectAuthenticatorValues } from './Base/SelectAuthenticator';\nimport { Authenticator } from '../../types';\nimport { IdxRemediationValue } from '../types/idx-js';\n\n\nexport type SelectAuthenticatorUnlockAccountValues = SelectAuthenticatorValues & {\n  identifier?: string;\n  methodType?: string;\n};\n\nexport class SelectAuthenticatorUnlockAccount extends SelectAuthenticator<SelectAuthenticatorUnlockAccountValues> {\n  static remediationName = 'select-authenticator-unlock-account';\n  authenticator?: Authenticator;\n\n  map = {\n    identifier: ['username']\n  };\n\n  canRemediate() {\n    const identifier = this.getData('identifier');\n    return !!identifier && super.canRemediate();\n  }\n\n  mapAuthenticator(remediationValue: IdxRemediationValue) {\n    const authenticatorMap = super.mapAuthenticator(remediationValue);\n    const methodTypeOption = this.selectedOption?.value.form.value.find(({ name }) => name === 'methodType');\n\n    // defaults to 'manually defined' value\n    // 2nd: option may have pre-defined value, like stateHandle\n    // 3rd: if only a single OV option is available, default to that option\n    const methodTypeValue = this.values.methodType ||\n      methodTypeOption?.value as string || methodTypeOption?.options?.[0]?.value as string;\n\n    if (methodTypeValue) {\n      return {\n        ...authenticatorMap,\n        methodType: methodTypeValue\n      };\n    }\n\n    return authenticatorMap;\n  }\n\n  getInputUsername () {\n    return { name: 'username', key: 'string' };\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface SelectEnrollProfileValues extends RemediationValues {}\n\nexport class SelectEnrollProfile extends Remediator<SelectEnrollProfileValues> {\n  static remediationName = 'select-enroll-profile';\n\n  canRemediate() {\n    return true;\n  }\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Remediator';\nimport { IdxRemediationValue, IdxOption, IdxRemediation, IdxAuthenticator } from '../../types/idx-js';\nimport { isAuthenticator } from '../../types';\nimport { compareAuthenticators } from '../../authenticator/util';\n\nexport type AuthenticatorDataValues = RemediationValues & {\n  methodType?: string;\n};\n\n// Base class - DO NOT expose static remediationName\nexport class AuthenticatorData<T extends AuthenticatorDataValues = AuthenticatorDataValues> extends Remediator<T> {\n  authenticator: IdxAuthenticator;\n\n  constructor(remediation: IdxRemediation, values: T = {} as T) {\n    super(remediation, values);\n\n    // set before other data calculation\n    this.authenticator = this.getAuthenticator()!;\n\n    this.formatAuthenticatorData();\n  }\n\n  protected formatAuthenticatorData() {\n    const authenticatorData = this.getAuthenticatorData();\n    if (authenticatorData) {\n      this.values.authenticatorsData = this.values.authenticatorsData!.map(data => {\n        if (compareAuthenticators(this.authenticator, data)) {\n          return this.mapAuthenticatorDataFromValues(data);\n        }\n        return data;\n      });\n    } else {\n      const data = this.mapAuthenticatorDataFromValues();\n      if (data) {\n        this.values.authenticatorsData!.push(data);\n      }\n    }\n  }\n\n  protected getAuthenticatorData() {\n    return this.values.authenticatorsData!\n      .find((data) => compareAuthenticators(this.authenticator, data));\n  }\n\n  canRemediate() {\n    return this.values.authenticatorsData!\n      .some(data => compareAuthenticators(this.authenticator, data));\n  }\n\n  getNextStep() {\n    const common = super.getNextStep();\n    const options = this.getMethodTypes();\n    return { \n      ...common, \n      ...(options && { options }) \n    };\n  }\n\n  protected mapAuthenticatorDataFromValues(authenticatorData?) {\n    // add methodType to authenticatorData if it exists in values\n    let { methodType, authenticator } = this.values;\n    if (!methodType && isAuthenticator(authenticator)) {\n     methodType = authenticator?.methodType;\n    }\n    \n    const { id, enrollmentId } = this.authenticator;\n    const data = { \n      id,\n      enrollmentId,\n      ...(authenticatorData && authenticatorData),\n      ...(methodType && { methodType }) \n    };\n\n    return data.methodType ? data : null;\n  }\n\n  protected getAuthenticatorFromRemediation(): IdxRemediationValue {\n    const authenticator = this.remediation.value!\n      .find(({ name }) => name === 'authenticator') as IdxRemediationValue;\n    return authenticator;\n  }\n\n  private getMethodTypes(): IdxOption[] {\n    const authenticator: IdxRemediationValue = this.getAuthenticatorFromRemediation();\n    return authenticator.form!.value.find(({ name }) => name === 'methodType')?.options as IdxOption[];\n  }\n\n  getValuesAfterProceed(): T {\n    this.values = super.getValuesAfterProceed();\n    // remove used authenticatorData\n    const authenticatorsData = this.values.authenticatorsData!\n      .filter(data => compareAuthenticators(this.authenticator, data) !== true);\n    return { ...this.values, authenticatorsData };\n  }\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthSdkError } from '../../errors';\nimport { AuthenticatorData, AuthenticatorDataValues } from './Base/AuthenticatorData';\nimport { IdxRemediation, RemediateOptions } from '../types';\n\nexport type AuthenticatorVerificationDataValues = AuthenticatorDataValues;\n\nexport class AuthenticatorVerificationData extends AuthenticatorData<AuthenticatorVerificationDataValues> {\n  static remediationName = 'authenticator-verification-data';\n\n  shouldProceedWithEmailAuthenticator: boolean; // will be removed in next major version\n\n  constructor(remediation: IdxRemediation, values: AuthenticatorDataValues = {}, options: RemediateOptions = {}) {\n    super(remediation, values);\n\n    // will be removed in next major version\n    this.shouldProceedWithEmailAuthenticator = options.shouldProceedWithEmailAuthenticator !== false\n      && this.authenticator.methods.length === 1 \n      && this.authenticator.methods[0].type === 'email';\n  }\n\n  canRemediate() {\n    // auto proceed if there is only one method (will be removed in next major version)\n    if (this.shouldProceedWithEmailAuthenticator !== false) {\n      return true;\n    }\n    return super.canRemediate();\n  }\n\n  mapAuthenticator() {\n    // auto proceed with the only methodType option\n    if (this.shouldProceedWithEmailAuthenticator !== false) {\n      const authenticatorFromRemediation = this.getAuthenticatorFromRemediation();\n      return authenticatorFromRemediation.form?.value.reduce((acc, curr) => {\n        if (curr.value) {\n          acc[curr.name] = curr.value;\n        } else if (curr.options) {\n          acc[curr.name] = curr.options![0].value;\n        } else {\n          throw new AuthSdkError(`Unsupported authenticator data type: ${curr}`);\n        }\n        return acc;\n      }, {});\n    }\n\n    return this.getAuthenticatorData();\n  }\n\n  getInputAuthenticator() {\n    const authenticator = this.getAuthenticatorFromRemediation();\n    const methodType = authenticator.form!.value.find(({ name }) => name === 'methodType');\n    // if has methodType in form, let user select the methodType\n    if (methodType && methodType.options) {\n      return { name: 'methodType', type: 'string', required: true };\n    }\n    // no methodType, then return form values\n    const inputs = [...authenticator.form!.value];\n    return inputs;\n  }\n\n  getValuesAfterProceed(): AuthenticatorVerificationDataValues {\n    this.values = super.getValuesAfterProceed();\n    let trimmedValues = Object.keys(this.values).filter(valueKey => valueKey !== 'authenticator');\n    return trimmedValues.reduce((values, valueKey) => ({...values, [valueKey]: this.values[valueKey]}), {});\n  }\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthenticatorData, AuthenticatorDataValues } from './Base/AuthenticatorData';\nimport { getAuthenticatorFromRemediation } from './util';\n\nexport type AuthenticatorEnrollmentDataValues =  AuthenticatorDataValues & {\n  phoneNumber?: string;\n  resend?: boolean; // resend is not a remediator value - revise when IdxResponse structure is updated\n}\nexport class AuthenticatorEnrollmentData extends AuthenticatorData<AuthenticatorEnrollmentDataValues> {\n  static remediationName = 'authenticator-enrollment-data';\n\n  mapAuthenticator() {\n    const authenticatorData = this.getAuthenticatorData();\n    const authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation)!;\n    return { \n      id: authenticatorFromRemediation.form!.value\n        .find(({ name }) => name === 'id')!.value,\n      methodType: authenticatorData!.methodType,\n      phoneNumber: authenticatorData!.phoneNumber,\n    };\n  }\n\n  getInputAuthenticator() {\n    return [\n      { name: 'methodType', type: 'string', required: true },\n      { name: 'phoneNumber', type: 'string', required: true, label: 'Phone Number' },\n    ];\n  }\n\n  protected mapAuthenticatorDataFromValues(data?) {\n    // get mapped authenticator from base class\n    data = super.mapAuthenticatorDataFromValues(data);\n    // add phoneNumber to authenticator if it exists in values\n    const { phoneNumber } = this.values;\n    if (!data && !phoneNumber) {\n      return;\n    }\n\n    return { \n      ...(data && data), \n      ...(phoneNumber && { phoneNumber }) \n    };\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\n\nexport interface SkipValues extends RemediationValues {\n  skip?: boolean;\n}\n\nexport class Skip extends Remediator<SkipValues> {\n  static remediationName = 'skip';\n\n  canRemediate() {\n    return !!this.values.skip || this.options.step === 'skip';\n  }\n\n}\n","import { warn } from '../util';\nimport * as remediators from './remediators';\nimport { RemediationValues, Remediator, RemediatorConstructor } from './remediators';\nimport { IdxFeature, NextStep, RemediateOptions, RemediationResponse } from './types';\nimport { IdxMessage, IdxRemediation, IdxRemediationValue, IdxResponse, isIdxResponse } from './types/idx-js';\n\nexport function isTerminalResponse(idxResponse: IdxResponse) {\n  const { neededToProceed, interactionCode } = idxResponse;\n  return !neededToProceed.length && !interactionCode;\n}\n\nexport function canSkipFn(idxResponse: IdxResponse) {\n  return idxResponse.neededToProceed.some(({ name }) => name === 'skip');\n}\n\nexport function canResendFn(idxResponse: IdxResponse) {\n  return Object.keys(idxResponse.actions).some(actionName => actionName.includes('resend'));\n}\n\nexport function getMessagesFromIdxRemediationValue(\n  value?: IdxRemediationValue[]\n): IdxMessage[] | undefined {\n  if (!value || !Array.isArray(value)) {\n    return;\n  }\n  return value.reduce((messages, value) => {\n    if (value.messages) {\n      messages = [...messages, ...value.messages.value] as never;\n    }\n    if (value.form) {\n      const messagesFromForm = getMessagesFromIdxRemediationValue(value.form.value) || [];\n      messages = [...messages, ...messagesFromForm] as never;\n    } \n    if (value.options) {\n      let optionValues = [];\n      value.options.forEach(option => {\n        if (!option.value || typeof option.value === 'string') {\n          return;\n        }\n        optionValues = [...optionValues, option.value] as never;\n      });\n      const messagesFromOptions = getMessagesFromIdxRemediationValue(optionValues) || [];\n      messages = [...messages, ...messagesFromOptions] as never;\n    }\n    return messages;\n  }, []);\n}\n\nexport function getMessagesFromResponse(idxResponse: IdxResponse): IdxMessage[] {\n  let messages: IdxMessage[] = [];\n  const { rawIdxState, neededToProceed } = idxResponse;\n\n  // Handle global messages\n  const globalMessages = rawIdxState.messages?.value.map(message => message);\n  if (globalMessages) {\n    messages = [...messages, ...globalMessages] as never;\n  }\n\n  // Handle field messages for current flow\n  for (let remediation of neededToProceed) {\n    const fieldMessages = getMessagesFromIdxRemediationValue(remediation.value);\n    if (fieldMessages) {\n      messages = [...messages, ...fieldMessages] as never;\n    }\n  }\n\n  // API may return identical error on same field, filter by i18n key\n  const seen = {};\n  messages = messages.reduce((filtered, message) => {\n    const key = message.i18n?.key;\n    if (key && seen[key]) {\n      return filtered;\n    }\n    seen[key] = message;\n    filtered = [...filtered, message] as never;\n    return filtered;\n  }, []);\n  return messages;\n}\n\n\nexport function getEnabledFeatures(idxResponse: IdxResponse): IdxFeature[] {\n  const res = [];\n  const { actions, neededToProceed } = idxResponse;\n\n  if (actions['currentAuthenticator-recover']) {\n    res.push(IdxFeature.PASSWORD_RECOVERY as never);\n  }\n\n  if (neededToProceed.some(({ name }) => name === 'select-enroll-profile')) {\n    res.push(IdxFeature.REGISTRATION as never);\n  }\n\n  if (neededToProceed.some(({ name }) => name === 'redirect-idp')) {\n    res.push(IdxFeature.SOCIAL_IDP as never);\n  }\n\n  if (neededToProceed.some(({ name }) => name === 'unlock-account')) {\n    res.push(IdxFeature.ACCOUNT_UNLOCK as never);\n  }\n\n  return res;\n}\n\nexport function getAvailableSteps(idxResponse: IdxResponse): NextStep[] {\n  const res: NextStep[] = [];\n\n  const remediatorMap: Record<string, RemediatorConstructor> = Object.values(remediators)\n    .reduce((map, remediatorClass) => {\n      // Only add concrete subclasses to the map\n      if (remediatorClass.remediationName) {\n        map[remediatorClass.remediationName] = remediatorClass;\n      }\n      return map;\n    }, {});\n\n  for (let remediation of idxResponse.neededToProceed) {\n    const T = remediatorMap[remediation.name];\n    if (T) {\n      const remediator: Remediator = new T(remediation);\n      res.push (remediator.getNextStep(idxResponse.context) as never);\n    }\n  }\n\n  return res;\n}\n\nexport function filterValuesForRemediation(\n  idxResponse: IdxResponse,\n  remediationName: string,\n  values: RemediationValues\n): RemediationValues {\n  const remediations = idxResponse.neededToProceed || [];\n  const remediation = remediations.find(r => r.name === remediationName);\n  if (!remediation) {\n    // step was specified, but remediation was not found. This is unexpected!\n    warn(`filterValuesForRemediation: \"${remediationName}\" did not match any remediations`);\n    return values;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const valuesForRemediation = remediation.value!.reduce((res, entry) => {\n    const { name, value } = entry;\n    if (name === 'stateHandle') {\n      res[name] = value; // use the stateHandle value in the remediation\n    } else {\n      res[name] = values[name]; // use the value provided by the caller\n    }\n    return res;\n  }, {});\n  return valuesForRemediation;\n}\n\n// Return first match idxRemediation in allowed remediators\n// eslint-disable-next-line complexity\nexport function getRemediator(\n  idxRemediations: IdxRemediation[],\n  values: RemediationValues,\n  options: RemediateOptions,\n): Remediator | undefined {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const remediators = options.remediators!;\n\n  let remediator: Remediator;\n  // remediation name specified by caller - fast-track remediator lookup \n  if (options.step) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const remediation = idxRemediations.find(({ name }) => name === options.step)!;\n    if (remediation) {\n      const T = remediation ? remediators[remediation.name] : undefined;\n      return T ? new T(remediation, values, options) : undefined;\n    } else {\n      // step was specified, but remediation was not found. This is unexpected!\n      warn(`step \"${options.step}\" did not match any remediations`);\n      return;\n    }\n  }\n\n  const remediatorCandidates: Remediator[] = [];\n  for (let remediation of idxRemediations) {\n    const isRemeditionInFlow = Object.keys(remediators as object).includes(remediation.name);\n    if (!isRemeditionInFlow) {\n      continue;\n    }\n\n    const T = remediators[remediation.name];\n    remediator = new T(remediation, values, options);\n    if (remediator.canRemediate()) {\n      // found the remediator\n      return remediator;\n    }\n    // remediator cannot handle the current values\n    // maybe return for next step\n    remediatorCandidates.push(remediator);  \n  }\n  \n  return remediatorCandidates[0];\n}\n\n\nexport function getNextStep(\n  remediator: Remediator, idxResponse: IdxResponse\n): NextStep {\n  const nextStep = remediator.getNextStep(idxResponse.context);\n  const canSkip = canSkipFn(idxResponse);\n  const canResend = canResendFn(idxResponse);\n  return {\n    ...nextStep,\n    ...(canSkip && {canSkip}),\n    ...(canResend && {canResend}),\n  };\n}\n\nexport function handleIdxError(e, remediator?): RemediationResponse {\n  // Handle idx messages\n  let idxResponse = isIdxResponse(e) ? e : null;\n  if (!idxResponse) {\n    // Thrown error terminates the interaction with idx\n    throw e;\n  }\n  idxResponse = {\n    ...idxResponse,\n    requestDidSucceed: false\n  };\n  const terminal = isTerminalResponse(idxResponse);\n  const messages = getMessagesFromResponse(idxResponse);\n  if (terminal) {\n    return { idxResponse, terminal, messages };\n  } else {\n    const nextStep = remediator && getNextStep(remediator, idxResponse);\n    return { \n      idxResponse,\n      messages, \n      ...(nextStep && { nextStep }) \n    };\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n/* eslint-disable max-statements, max-depth, complexity */\nimport { AuthSdkError } from '../errors';\nimport { RemediationValues } from './remediators';\nimport { RemediateOptions, RemediationResponse } from './types';\nimport { \n  IdxResponse,\n  IdxActionParams, \n} from './types/idx-js';\nimport {\n  getMessagesFromResponse,\n  isTerminalResponse,\n  filterValuesForRemediation,\n  getRemediator,\n  getNextStep,\n  handleIdxError\n} from './util';\n\nexport interface RemediateActionWithOptionalParams {\n  name: string;\n  params?: IdxActionParams;\n}\n\nexport type RemediateAction = string | RemediateActionWithOptionalParams;\n\n\nfunction getActionFromValues(values: RemediationValues, idxResponse: IdxResponse): string | undefined {\n  // Currently support resend actions only\n  return Object.keys(idxResponse.actions).find(action => !!values.resend && action.includes('-resend'));\n}\n\nfunction removeActionFromValues(values: RemediationValues): RemediationValues {\n  // Currently support resend actions only\n  return {\n    ...values,\n    resend: undefined\n  };\n}\n\nfunction removeActionFromOptions(options: RemediateOptions, actionName: string): RemediateOptions {\n  let actions = options.actions || [];\n  actions = actions.filter(entry => {\n    if (typeof entry === 'string') {\n      return entry !== actionName;\n    }\n    return entry.name !== actionName;\n  });\n\n  return { ...options, actions };\n}\n\n// This function is called recursively until it reaches success or cannot be remediated\nexport async function remediate(\n  idxResponse: IdxResponse,\n  values: RemediationValues,\n  options: RemediateOptions\n): Promise<RemediationResponse> {\n  let { neededToProceed, interactionCode } = idxResponse;\n  const { flow } = options;\n\n  // If the response contains an interaction code, there is no need to remediate\n  if (interactionCode) {\n    return { idxResponse };\n  }\n\n  const remediator = getRemediator(neededToProceed, values, options);\n\n  // Try actions in idxResponse first\n  const actionFromValues = getActionFromValues(values, idxResponse);\n  const actionFromOptions = options.actions || [];\n  const actions = [\n    ...actionFromOptions,\n    ...(actionFromValues && [actionFromValues] || []),\n  ];\n  if (actions) {\n    for (let action of actions) {\n      // Action can either be specified as a string, or as an object with name and optional params\n      let params: IdxActionParams = {};\n      if (typeof action !== 'string') {\n        params = action.params || {};\n        action = action.name;\n      }\n      let valuesWithoutExecutedAction = removeActionFromValues(values);\n      let optionsWithoutExecutedAction = removeActionFromOptions(options, action);\n\n      if (typeof idxResponse.actions[action] === 'function') {\n        try {\n          idxResponse = await idxResponse.actions[action](params);\n          idxResponse = { ...idxResponse, requestDidSucceed: true };\n        } catch (e) {\n          return handleIdxError(e, remediator);\n        }\n        if (action === 'cancel') {\n          return { idxResponse, canceled: true };\n        }\n        return remediate(idxResponse, valuesWithoutExecutedAction, optionsWithoutExecutedAction); // recursive call\n      }\n\n      // search for action in remediation list\n      const remediationAction = neededToProceed.find(({ name }) => name === action);\n      if (remediationAction) {\n        try {\n          idxResponse = await idxResponse.proceed(action, params);\n          idxResponse = { ...idxResponse, requestDidSucceed: true };\n        }\n        catch (e) {\n          return handleIdxError(e, remediator);\n        }\n\n        return remediate(idxResponse, values, optionsWithoutExecutedAction); // recursive call\n      }\n    }\n  }\n\n  // Do not attempt to remediate if response is in terminal state\n  const terminal = isTerminalResponse(idxResponse);\n  const messages = getMessagesFromResponse(idxResponse);\n  if (terminal) {\n    return { idxResponse, terminal, messages };\n  }\n\n  if (!remediator) {\n    if (options.step) {\n      values = filterValuesForRemediation(idxResponse, options.step, values); // include only requested values\n      try {\n        idxResponse = await idxResponse.proceed(options.step, values);\n        idxResponse = { ...idxResponse, requestDidSucceed: true };\n        return { idxResponse };\n      } catch(e) {\n        return handleIdxError(e);\n      }\n    }\n    if (flow === 'default') {\n      return { idxResponse };\n    }\n    throw new AuthSdkError(`\n      No remediation can match current flow, check policy settings in your org.\n      Remediations: [${neededToProceed.reduce((acc, curr) => acc ? acc + ' ,' + curr.name : curr.name, '')}]\n    `);\n  }\n\n  // Return next step to the caller\n  if (!remediator.canRemediate()) {\n    const nextStep = getNextStep(remediator, idxResponse);\n    return {\n      idxResponse,\n      nextStep,\n      messages: messages.length ? messages: undefined\n    };\n  }\n\n  const name = remediator.getName();\n  const data = remediator.getData();\n  try {\n    idxResponse = await idxResponse.proceed(name, data);\n    idxResponse = { ...idxResponse, requestDidSucceed: true };\n    // We may want to trim the values bag for the next remediation\n    // Let the remediator decide what the values should be (default to current values)\n    values = remediator.getValuesAfterProceed();\n    options = { ...options, step: undefined }; // do not re-use the step\n    return remediate(idxResponse, values, options); // recursive call\n  } catch (e) {\n    return handleIdxError(e, remediator);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { RemediationFlow } from './RemediationFlow';\nimport { \n  Identify,\n  SelectAuthenticatorAuthenticate,\n  ChallengeAuthenticator,\n  ReEnrollAuthenticator,\n  RedirectIdp,\n  AuthenticatorEnrollmentData,\n  SelectAuthenticatorEnroll,\n  EnrollAuthenticator,\n  AuthenticatorVerificationData,\n  EnrollPoll,\n  ChallengePoll, Skip\n} from '../remediators';\n\nexport const AuthenticationFlow: RemediationFlow = {\n  'identify': Identify,\n  'select-authenticator-authenticate': SelectAuthenticatorAuthenticate,\n  'select-authenticator-enroll': SelectAuthenticatorEnroll,\n  'authenticator-enrollment-data': AuthenticatorEnrollmentData,\n  'authenticator-verification-data': AuthenticatorVerificationData,\n  'enroll-authenticator': EnrollAuthenticator,\n  'challenge-authenticator': ChallengeAuthenticator,\n  'challenge-poll': ChallengePoll,\n  'reenroll-authenticator': ReEnrollAuthenticator,\n  'enroll-poll': EnrollPoll,\n  'redirect-idp': RedirectIdp,\n  'skip': Skip,\n};\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { RemediationFlow } from './RemediationFlow';\nimport {\n  Identify,\n  SelectAuthenticatorAuthenticate,\n  ChallengeAuthenticator,\n  AuthenticatorVerificationData,\n  ResetAuthenticator,\n  ReEnrollAuthenticator,\n  SelectAuthenticatorEnroll,\n  AuthenticatorEnrollmentData,\n  EnrollPoll\n} from '../remediators';\n\nexport const PasswordRecoveryFlow: RemediationFlow = {\n  'identify': Identify,\n  'identify-recovery': Identify,\n  'select-authenticator-authenticate': SelectAuthenticatorAuthenticate,\n  'select-authenticator-enroll': SelectAuthenticatorEnroll,\n  'challenge-authenticator': ChallengeAuthenticator,\n  'authenticator-verification-data': AuthenticatorVerificationData,\n  'authenticator-enrollment-data': AuthenticatorEnrollmentData,\n  'reset-authenticator': ResetAuthenticator,\n  'reenroll-authenticator': ReEnrollAuthenticator,\n  'enroll-poll': EnrollPoll,\n};\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { RemediationFlow } from './RemediationFlow';\nimport { \n  SelectEnrollProfile,\n  EnrollPoll,\n  SelectEnrollmentChannel,\n  EnrollmentChannelData,\n  EnrollProfile,\n  SelectAuthenticatorEnroll,\n  EnrollAuthenticator,\n  AuthenticatorEnrollmentData,\n  Skip,\n} from '../remediators';\n\nexport const RegistrationFlow: RemediationFlow = {\n  'select-enroll-profile': SelectEnrollProfile,\n  'enroll-profile': EnrollProfile,\n  'authenticator-enrollment-data': AuthenticatorEnrollmentData,\n  'select-authenticator-enroll': SelectAuthenticatorEnroll,\n  'enroll-poll': EnrollPoll,\n  'select-enrollment-channel': SelectEnrollmentChannel,\n  'enrollment-channel-data': EnrollmentChannelData,\n  'enroll-authenticator': EnrollAuthenticator,\n  'skip': Skip,\n};\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { RemediationFlow } from './RemediationFlow';\nimport {\n  Identify,\n  SelectAuthenticatorUnlockAccount,\n  SelectAuthenticatorAuthenticate,\n  ChallengeAuthenticator,\n  ChallengePoll,\n  AuthenticatorVerificationData\n} from '../remediators';\n\nexport const AccountUnlockFlow: RemediationFlow = {\n  'identify': Identify,\n  // NOTE: unlock-account is purposely not included. Handled as action\n  // because it's a rememdiation which requires no input\n  // 'unlock-account': UnlockAccount,\n  'select-authenticator-unlock-account': SelectAuthenticatorUnlockAccount,\n  'select-authenticator-authenticate': SelectAuthenticatorAuthenticate,\n  'challenge-authenticator': ChallengeAuthenticator,\n  'challenge-poll': ChallengePoll,\n  'authenticator-verification-data': AuthenticatorVerificationData,\n};\n","import { OktaAuthInterface, FlowIdentifier } from '../../types';\nimport { AuthenticationFlow } from './AuthenticationFlow';\nimport { PasswordRecoveryFlow } from './PasswordRecoveryFlow';\nimport { RegistrationFlow } from './RegistrationFlow';\nimport { AccountUnlockFlow } from './AccountUnlockFlow';\nimport { RemediationFlow } from './RemediationFlow';\n\nexport interface FlowSpecification {\n  flow: FlowIdentifier;\n  remediators: RemediationFlow;\n  actions?: string[];\n  withCredentials?: boolean;\n}\n\n// eslint-disable-next-line complexity\nexport function getFlowSpecification(oktaAuth: OktaAuthInterface, flow: FlowIdentifier = 'default'): FlowSpecification {\n  let remediators, actions, withCredentials = true;\n  switch (flow) {\n    case 'register':\n    case 'signup':\n    case 'enrollProfile':\n      remediators = RegistrationFlow;\n      withCredentials = false;\n      break;\n    case 'recoverPassword':\n    case 'resetPassword':\n      remediators = PasswordRecoveryFlow;\n      actions = [\n        'currentAuthenticator-recover', \n        'currentAuthenticatorEnrollment-recover'\n      ];\n      withCredentials = false;\n      break;\n    case 'unlockAccount':\n      remediators = AccountUnlockFlow;\n      withCredentials = false;\n      actions = [\n        'unlock-account'\n      ];\n      break;\n    case 'authenticate':\n    case 'login':\n    case 'signin':\n      remediators = AuthenticationFlow;\n      break;\n    default:\n      // default case has no flow monitor\n      remediators = AuthenticationFlow;\n      break;\n  }\n  return { flow, remediators, actions, withCredentials };\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n/* eslint-disable max-statements, complexity, max-depth */\nimport { interact } from './interact';\nimport { introspect } from './introspect';\nimport { remediate } from './remediate';\nimport { getFlowSpecification } from './flow';\nimport * as remediators from './remediators';\nimport { \n  OktaAuthInterface,\n  IdxStatus,\n  IdxTransaction,\n  IdxFeature,\n  NextStep,\n  RunOptions,\n  IdxTransactionMeta,\n  Tokens,\n  APIError,\n} from '../types';\nimport { IdxMessage, IdxResponse, isIdxResponse } from './types/idx-js';\nimport { getSavedTransactionMeta, saveTransactionMeta } from './transactionMeta';\nimport { getAvailableSteps, getEnabledFeatures, getMessagesFromResponse, isTerminalResponse } from './util';\ndeclare interface RunData {\n  options: RunOptions;\n  values: remediators.RemediationValues;\n  status?: IdxStatus;\n  tokens?: Tokens;\n  nextStep?: NextStep;\n  messages?: IdxMessage[];\n  error?: APIError | IdxResponse;\n  meta?: IdxTransactionMeta;\n  enabledFeatures?: IdxFeature[];\n  availableSteps?: NextStep[];\n  idxResponse?: IdxResponse;\n  canceled?: boolean;\n  interactionCode?: string;\n  shouldSaveResponse?: boolean;\n  shouldClearTransaction?: boolean;\n  clearSharedStorage?: boolean;\n  terminal?: boolean;\n}\n\nfunction initializeValues(options: RunOptions) {\n  // remove known options, everything else is assumed to be a value\n  const knownOptions = [\n    'flow', \n    'remediators', \n    'actions', \n    'withCredentials', \n    'step', \n    'shouldProceedWithEmailAuthenticator'\n  ];\n  const values = { ...options };\n  knownOptions.forEach(option => {\n    delete values[option];\n  });\n  return values;\n}\n\nfunction initializeData(authClient, data: RunData): RunData {\n  const { options } = data;\n  let {\n    flow,\n    withCredentials,\n    remediators,\n    actions\n  } = options;\n\n  const status = IdxStatus.PENDING;\n\n  // certain options can be set by the flow specification\n  flow = flow || authClient.idx.getFlow() || 'default';\n  if (flow) {\n    authClient.idx.setFlow(flow);\n    const flowSpec = getFlowSpecification(authClient, flow);\n    // Favor option values over flow spec\n    withCredentials = (typeof withCredentials !== 'undefined') ? withCredentials : flowSpec.withCredentials;\n    remediators = remediators || flowSpec.remediators;\n    actions = actions || flowSpec.actions;\n  }\n  return { \n    ...data,\n    options: { ...options, flow, withCredentials, remediators, actions },\n    status\n  };\n}\n\nasync function getDataFromIntrospect(authClient, data: RunData): Promise<RunData> {\n  const { options } = data;\n  const {\n    stateHandle,\n    withCredentials,\n    version,\n    state,\n    scopes,\n    recoveryToken,\n    activationToken\n  } = options;\n\n  let idxResponse;\n  let meta = getSavedTransactionMeta(authClient, { state, recoveryToken, activationToken }); // may be undefined\n\n  if (stateHandle) {\n    idxResponse = await introspect(authClient, { withCredentials, version, stateHandle });\n  } else {\n    let interactionHandle = meta?.interactionHandle; // may be undefined\n    if (!interactionHandle) {\n      // start a new transaction\n      authClient.transactionManager.clear();\n      const interactResponse = await interact(authClient, {\n        withCredentials,\n        state,\n        scopes,\n        activationToken,\n        recoveryToken\n      }); \n      interactionHandle = interactResponse.interactionHandle;\n      meta = interactResponse.meta;\n    }\n  \n    // Introspect to get idx response\n    idxResponse = await introspect(authClient, { withCredentials, version, interactionHandle });\n  }\n  return { ...data, idxResponse, meta };\n}\n\nasync function getDataFromRemediate(data: RunData): Promise<RunData> {\n  let {\n    idxResponse,\n    options,\n    values\n  } = data;\n\n  const {\n    autoRemediate,\n    remediators,\n    actions,\n    flow,\n    step,\n    shouldProceedWithEmailAuthenticator, // will be removed in next major version\n  } = options;\n  \n  const shouldRemediate = (autoRemediate !== false && (remediators || actions || step));\n  if (!shouldRemediate) {\n    return data;\n  }\n\n  values = { \n    ...values, \n    stateHandle: idxResponse!.rawIdxState.stateHandle \n  };\n\n  // Can we handle the remediations?\n  const { \n    idxResponse: idxResponseFromRemediation, \n    nextStep,\n    canceled,\n  } = await remediate(idxResponse!, values, {\n    remediators,\n    actions,\n    flow,\n    step,\n    shouldProceedWithEmailAuthenticator, // will be removed in next major version\n  });\n  idxResponse = idxResponseFromRemediation;\n\n  return { ...data, idxResponse, nextStep, canceled };\n}\n\nasync function getTokens(authClient, data: RunData): Promise<Tokens> {\n  let { meta, idxResponse } = data;\n  const { interactionCode } = idxResponse as IdxResponse;\n  const {\n    clientId,\n    codeVerifier,\n    ignoreSignature,\n    redirectUri,\n    urls,\n    scopes,\n  } = meta as IdxTransactionMeta;\n  const tokenResponse = await authClient.token.exchangeCodeForTokens({\n    interactionCode,\n    clientId,\n    codeVerifier,\n    ignoreSignature,\n    redirectUri,\n    scopes\n  }, urls);\n  return tokenResponse.tokens;\n}\n\nasync function finalizeData(authClient, data: RunData): Promise<RunData> {\n  let {\n    options,\n    idxResponse,\n    canceled,\n    status,\n  } = data;\n  const { exchangeCodeForTokens } = options;\n  let shouldSaveResponse = false;\n  let shouldClearTransaction = false;\n  let clearSharedStorage = true;\n  let interactionCode;\n  let tokens;\n  let enabledFeatures;\n  let availableSteps;\n  let messages;\n  let terminal;\n\n  if (idxResponse) {\n    shouldSaveResponse = !!(idxResponse.requestDidSucceed || idxResponse.stepUp);\n    enabledFeatures = getEnabledFeatures(idxResponse);\n    availableSteps = getAvailableSteps(idxResponse);\n    messages = getMessagesFromResponse(idxResponse);\n    terminal = isTerminalResponse(idxResponse);\n  }\n\n  if (terminal) {\n    status = IdxStatus.TERMINAL;\n\n    // In most cases a terminal response should not clear transaction data. The user should cancel or skip to continue.\n    // A terminal \"success\" is a non-error response with no further actions available.\n    // In these narrow cases, saved transaction data should be cleared.\n    // One example of a terminal success is when the email verify flow is continued in another tab\n    const hasActions = Object.keys(idxResponse!.actions).length > 0;\n    const hasErrors = !!messages.find(msg => msg.class === 'ERROR');\n    const isTerminalSuccess = !hasActions && !hasErrors && idxResponse!.requestDidSucceed === true;\n    if (isTerminalSuccess) {\n      shouldClearTransaction = true;\n    } else {\n      // only save response if there are actions available (ignore messages)\n      shouldSaveResponse = shouldSaveResponse && hasActions;\n    }\n    // leave shared storage intact so the transaction can be continued in another tab\n    clearSharedStorage = false;\n  } else if (canceled) {\n    status = IdxStatus.CANCELED;\n    shouldClearTransaction = true;\n  } else if (idxResponse?.interactionCode) { \n    interactionCode = idxResponse.interactionCode;\n    if (exchangeCodeForTokens === false) {\n      status = IdxStatus.SUCCESS;\n      shouldClearTransaction = false;\n    } else {\n      tokens = await getTokens(authClient, data);\n      status = IdxStatus.SUCCESS;\n      shouldClearTransaction = true;\n    }\n  }\n  return {\n    ...data,\n    status,\n    interactionCode,\n    tokens,\n    shouldSaveResponse,\n    shouldClearTransaction,\n    clearSharedStorage,\n    enabledFeatures,\n    availableSteps,\n    messages,\n    terminal\n  };\n}\n\nfunction handleError(err, data: RunData): RunData {\n  let { error, status, shouldClearTransaction } = data;\n\n  // current version of idx-js will throw/reject IDX responses. Handle these differently than regular errors\n  if (isIdxResponse(err)) {\n    error = err;\n    status = IdxStatus.FAILURE;\n    shouldClearTransaction = true;\n  } else {\n    // error is not an IDX response, throw it like a regular error\n    throw err;\n  }\n\n  return { ...data, error, status, shouldClearTransaction };\n}\n\nexport async function run(\n  authClient: OktaAuthInterface, \n  options: RunOptions = {},\n): Promise<IdxTransaction> {\n  let data: RunData = {\n    options,\n    values: initializeValues(options)\n  };\n\n  data = initializeData(authClient, data);\n  try {\n    data = await getDataFromIntrospect(authClient, data);\n    data = await getDataFromRemediate(data);\n  } catch (err) {\n    data = handleError(err, data);\n  }\n  data = await finalizeData(authClient, data);\n\n  const {\n    idxResponse,\n    meta,\n    shouldSaveResponse,\n    shouldClearTransaction,\n    clearSharedStorage,\n    status,\n    enabledFeatures,\n    availableSteps,\n    tokens,\n    nextStep,\n    messages,\n    error,\n    interactionCode\n  } = data;\n\n  if (shouldClearTransaction) {\n    authClient.transactionManager.clear({ clearSharedStorage });\n  }\n  else {\n    // ensures state is saved to sessionStorage\n    saveTransactionMeta(authClient, { ...meta });\n\n    if (shouldSaveResponse) {\n      // Save intermediate idx response in storage to reduce introspect call\n      const { rawIdxState: rawIdxResponse, requestDidSucceed } = idxResponse!;\n      authClient.transactionManager.saveIdxResponse({\n        rawIdxResponse,\n        requestDidSucceed,\n        stateHandle: idxResponse!.context?.stateHandle,\n        interactionHandle: meta?.interactionHandle\n      });\n    }\n  }\n  \n  // copy all fields from idxResponse which are needed by the widget\n  const { actions, context, neededToProceed, proceed, rawIdxState, requestDidSucceed, stepUp } = idxResponse || {};\n  return {\n    status: status!,\n    ...(meta && { meta }),\n    ...(enabledFeatures && { enabledFeatures }),\n    ...(availableSteps && { availableSteps }),\n    ...(tokens && { tokens }),\n    ...(nextStep && { nextStep }),\n    ...(messages && messages.length && { messages }),\n    ...(error && { error }),\n    ...(stepUp && { stepUp }),\n    interactionCode, // if options.exchangeCodeForTokens is false\n\n    // from idx-js\n    actions: actions!,\n    context: context!,\n    neededToProceed: neededToProceed!,\n    proceed: proceed!,\n    rawIdxState: rawIdxState!,\n    requestDidSucceed\n  };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { \n  OktaAuthInterface,\n  IdxTransaction,\n  AuthenticatorKey,\n  AuthenticationOptions\n} from '../types';\nimport { run } from './run';\n\nexport async function authenticate(\n  authClient: OktaAuthInterface, options: AuthenticationOptions = {}\n): Promise<IdxTransaction> {\n  if (options.password && !options.authenticator) {\n    options.authenticator = AuthenticatorKey.OKTA_PASSWORD;\n  }\n  return run(authClient, { \n    ...options, \n    flow: 'authenticate'\n  });\n}\n","/*!\n * Copyright (c) 2021, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { OktaAuthInterface, CancelOptions, IdxTransactionMeta } from '../types';\nimport { run } from './run';\nimport { getFlowSpecification } from './flow';\n\nexport async function cancel (authClient: OktaAuthInterface, options?: CancelOptions) {\n  const meta = authClient.transactionManager.load() as IdxTransactionMeta;\n  const flowSpec = getFlowSpecification(authClient, meta.flow);\n  return run(authClient, {\n    ...options,\n    ...flowSpec,\n    actions: ['cancel']\n  });\n}\n","\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { OktaAuthInterface } from '../types';\n\nimport CustomError from '../errors/CustomError';\nimport { urlParamsToObject  } from '../oidc/util/urlParams';\n\nexport interface EmailVerifyCallbackResponse {\n  state: string;\n  otp: string;\n}\n\nexport class EmailVerifyCallbackError extends CustomError {\n  state: string;\n  otp: string;\n\n  constructor(state: string, otp: string) {\n    super(`Enter the OTP code in the originating client: ${otp}`);\n    this.name = 'EmailVerifyCallbackError';\n    this.state = state;\n    this.otp = otp;\n  }\n}\n\nexport function isEmailVerifyCallbackError(error: Error) {\n  return (error.name === 'EmailVerifyCallbackError');\n}\n\n// Check if state && otp have been passed back in the url\nexport function isEmailVerifyCallback (urlPath: string): boolean {\n  return /(otp=)/i.test(urlPath) && /(state=)/i.test(urlPath);\n}\n\n// Parse state and otp from a urlPath (should be either a search or fragment from the URL)\nexport function parseEmailVerifyCallback(urlPath: string): EmailVerifyCallbackResponse {\n  return urlParamsToObject(urlPath) as EmailVerifyCallbackResponse;\n}\n\nexport async function handleEmailVerifyCallback(authClient: OktaAuthInterface, search: string) {\n  if (isEmailVerifyCallback(search)) {\n    const { state, otp } = parseEmailVerifyCallback(search);\n    if (authClient.idx.canProceed({ state })) {\n      // same browser / device\n      return await authClient.idx.proceed({ state, otp });\n    } else {\n      // different browser or device\n      throw new EmailVerifyCallbackError(state, otp);\n    }\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { \n  OktaAuthInterface,\n  IdxTransaction,\n  ProceedOptions,\n} from '../types';\nimport { run } from './run';\nimport { getSavedTransactionMeta } from './transactionMeta';\nimport { AuthSdkError } from '../errors';\n\nexport function canProceed(authClient: OktaAuthInterface, options: ProceedOptions = {}): boolean {\n  const meta = getSavedTransactionMeta(authClient, options);\n  return !!(meta || options.stateHandle);\n}\n\nexport async function proceed(\n  authClient: OktaAuthInterface,\n  options: ProceedOptions = {}\n): Promise<IdxTransaction> {\n\n  if (!canProceed(authClient, options)) {\n    throw new AuthSdkError('Unable to proceed: saved transaction could not be loaded');\n  }\n\n  let { flow, state } = options;\n  if (!flow) {\n    const meta = getSavedTransactionMeta(authClient, { state });\n    flow = meta?.flow;\n  }\n\n  return run(authClient, { \n    ...options, \n    flow\n  });\n}\n","/*!\n * Copyright (c) 2021-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { proceed } from './proceed';\n\nimport { \n  IdxPollOptions,\n  IdxTransaction,\n  OktaAuthInterface,\n} from '../types';\nimport { getSavedTransactionMeta } from './transactionMeta';\nimport { warn } from '../util';\n\nexport async function poll(authClient: OktaAuthInterface, options: IdxPollOptions = {}): Promise<IdxTransaction> {\n  let transaction = await proceed(authClient, {\n    startPolling: true\n  });\n\n  const meta = getSavedTransactionMeta(authClient);\n  let availablePollingRemeditaions = meta?.remediations?.find(remediation => remediation.includes('poll'));\n  if (!availablePollingRemeditaions?.length) {\n    warn('No polling remediations available at the current IDX flow stage');\n  }\n\n  if (Number.isInteger(options.refresh)) {\n    return new Promise(function (resolve, reject) {\n      setTimeout(async function () {\n        try {\n          const refresh = transaction.nextStep?.poll?.refresh;\n          if (refresh) {\n            resolve(poll(authClient, {\n              refresh\n            }));\n          } else {\n            resolve(transaction);\n          }\n        } catch (err) {\n          reject(err);\n        }\n      }, options.refresh);\n    });\n  }\n\n  return transaction;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { run } from './run';\nimport { OktaAuthInterface, IdxTransaction, StartOptions } from '../types';\n\nexport async function startTransaction(\n  authClient: OktaAuthInterface, \n  options: StartOptions = {}\n): Promise<IdxTransaction> {\n  // Clear IDX response cache and saved transaction meta (if any)\n  authClient.transactionManager.clear();\n\n  return run(authClient, {\n    exchangeCodeForTokens: false,\n    ...options\n  });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { run } from './run';\nimport { hasSavedInteractionHandle } from './transactionMeta';\nimport { startTransaction } from './startTransaction';\nimport { AuthSdkError } from '../errors';\nimport { \n  RegistrationOptions, \n  IdxTransaction, \n  OktaAuthInterface, \n  IdxFeature,\n} from '../types';\n\nexport async function register(\n  authClient: OktaAuthInterface, options: RegistrationOptions = {}\n): Promise<IdxTransaction> {\n\n  // Only check at the beginning of the transaction\n  if (!hasSavedInteractionHandle(authClient)) {\n    const { enabledFeatures, availableSteps } = await startTransaction(authClient, {\n      ...options,\n      flow: 'register',\n      autoRemediate: false\n    });\n    if (!options.activationToken && enabledFeatures && !enabledFeatures.includes(IdxFeature.REGISTRATION)) {\n      const error = new AuthSdkError('Registration is not supported based on your current org configuration.');\n      throw error;\n    // return { status: IdxStatus.FAILURE, error } as unknown as IdxTransaction; // TODO: wny not just throw the error?\n    }\n    if (options.activationToken && availableSteps?.some(({ name }) => name === 'identify')) {\n      const error = new AuthSdkError('activationToken is not supported based on your current org configuration.');\n      throw error;\n    // return { status: IdxStatus.FAILURE, error } as unknown as IdxTransaction; // TODO: wny not just throw the error?\n    }\n  }\n\n  return run(authClient, {\n    ...options,\n    flow: 'register'\n  });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { run } from './run';\nimport { getFlowSpecification } from './flow';\nimport { \n  OktaAuthInterface, \n  PasswordRecoveryOptions, \n  IdxTransaction,\n} from '../types';\n\nexport async function recoverPassword(\n  authClient: OktaAuthInterface, options: PasswordRecoveryOptions = {}\n): Promise<IdxTransaction> {\n  const flowSpec = getFlowSpecification(authClient, 'recoverPassword');\n  return run(\n    authClient, \n    { \n      ...options,\n      ...flowSpec,\n    }\n  );\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthSdkError, OAuthError } from '../errors';\nimport { OktaAuth } from '..';\nimport {IdxTransactionMeta} from '../types';\n\nexport async function handleInteractionCodeRedirect(\n  authClient: OktaAuth, \n  url: string\n): Promise<void> {\n  const meta = authClient.transactionManager.load() as IdxTransactionMeta;\n  if (!meta) {\n    throw new AuthSdkError('No transaction data was found in storage');\n  }\n\n  const { \n    codeVerifier,\n    state: savedState \n  } = meta;\n  const { \n    searchParams\n  // URL API has been added to the polyfill\n  // eslint-disable-next-line compat/compat\n  } = new URL(url); \n  const state = searchParams.get('state');\n  const interactionCode = searchParams.get('interaction_code');\n\n  // Error handling\n  const error = searchParams.get('error');\n  if (error) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    throw new OAuthError(error, searchParams.get('error_description')!);\n  }\n  if (state !== savedState) {\n    throw new AuthSdkError('State in redirect uri does not match with transaction state');\n  }\n  if (!interactionCode) {\n    throw new AuthSdkError('Unable to parse interaction_code from the url');\n  }\n  \n  // Save tokens to storage\n  const { tokens } = await authClient.token.exchangeCodeForTokens({ interactionCode, codeVerifier });\n  authClient.tokenManager.setTokens(tokens);\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { run } from './run';\nimport { hasSavedInteractionHandle } from './transactionMeta';\nimport { startTransaction } from './startTransaction';\nimport { AuthSdkError } from '../errors';\nimport { \n  OktaAuthInterface, \n  AccountUnlockOptions, \n  IdxTransaction,\n  IdxFeature,\n} from '../types';\n\nexport async function unlockAccount(\n  authClient: OktaAuthInterface, options: AccountUnlockOptions = {}\n): Promise<IdxTransaction> {\n  options.flow = 'unlockAccount';\n\n  // Only check at the beginning of the transaction\n  if (!hasSavedInteractionHandle(authClient)) {\n    const { enabledFeatures } = await startTransaction(authClient, { ...options, autoRemediate: false });\n    if (enabledFeatures && !enabledFeatures.includes(IdxFeature.ACCOUNT_UNLOCK)) {\n      throw new AuthSdkError(\n        'Self Service Account Unlock is not supported based on your current org configuration.'\n      );\n    }\n  }\n\n  return run(authClient, { ...options });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n/* global SDK_VERSION */\n\nimport { isBrowser } from './features';\nexport class OktaUserAgent {\n  private environments: string[];\n\n  constructor() {\n    // add base sdk env\n    this.environments = [`okta-auth-js/${SDK_VERSION}`];\n  }\n\n  addEnvironment(env: string) {\n    this.environments.push(env);\n  }\n\n  getHttpHeader() {\n    this.maybeAddNodeEnvironment();\n    return { 'X-Okta-User-Agent-Extended': this.environments.join(' ') };\n  }\n\n  getVersion() {\n    return SDK_VERSION;\n  }\n\n  private maybeAddNodeEnvironment() {\n    if (isBrowser() || !process || !process.versions) {\n      return;\n    }\n    const { node: version } = process.versions;\n    this.environments.push(`nodejs/${version}`);\n  }\n}\n","/* eslint-disable max-statements */\n/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n/* global window */\n\nimport { \n  DEFAULT_MAX_CLOCK_SKEW, \n  REFERRER_PATH_STORAGE_KEY\n} from './constants';\nimport * as constants from './constants';\nimport {\n  OktaAuthInterface,\n  OktaAuthOptions, \n  AccessToken, \n  IDToken,\n  RefreshToken,\n  TokenAPI, \n  FeaturesAPI, \n  CryptoAPI,\n  WebauthnAPI,\n  SignoutAPI, \n  FingerprintAPI,\n  UserClaims, \n  SigninWithRedirectOptions,\n  SigninWithCredentialsOptions,\n  SignoutOptions,\n  Tokens,\n  ForgotPasswordOptions,\n  VerifyRecoveryTokenOptions,\n  TransactionAPI,\n  SessionAPI,\n  SigninAPI,\n  PkceAPI,\n  SigninOptions,\n  IdxAPI,\n  SignoutRedirectUrlOptions,\n  HttpAPI,\n  FlowIdentifier,\n  GetWithRedirectAPI,\n  ParseFromUrlInterface,\n  GetWithRedirectFunction,\n  RequestOptions,\n  IsAuthenticatedOptions,\n  OAuthResponseType,\n} from './types';\nimport {\n  transactionStatus,\n  resumeTransaction,\n  transactionExists,\n  introspectAuthn,\n  postToTransaction,\n  AuthTransaction\n} from './tx';\nimport PKCE from './oidc/util/pkce';\nimport {\n  closeSession,\n  sessionExists,\n  getSession,\n  refreshSession,\n  setCookieAndRedirect\n} from './session';\nimport {\n  getOAuthUrls,\n  getWithoutPrompt,\n  getWithPopup,\n  getWithRedirect,\n  isLoginRedirect,\n  parseFromUrl,\n  decodeToken,\n  revokeToken,\n  renewToken,\n  renewTokens,\n  renewTokensWithRefresh,\n  getUserInfo,\n  verifyToken,\n  prepareTokenParams,\n  exchangeCodeForTokens,\n  isInteractionRequiredError,\n  isInteractionRequired,\n} from './oidc';\nimport { isBrowser } from './features';\nimport * as features from './features';\nimport * as crypto from './crypto';\nimport * as webauthn from './crypto/webauthn';\nimport browserStorage from './browser/browserStorage';\nimport { \n  toQueryString, \n  toAbsoluteUrl,\n  clone,\n} from './util';\nimport { TokenManager } from './TokenManager';\nimport { ServiceManager } from './ServiceManager';\nimport { get, httpRequest, setRequestHeader } from './http';\nimport PromiseQueue from './PromiseQueue';\nimport fingerprint from './browser/fingerprint';\nimport { AuthStateManager } from './AuthStateManager';\nimport { StorageManager } from './StorageManager';\nimport TransactionManager from './TransactionManager';\nimport { buildOptions } from './options';\nimport {\n  interact,\n  introspect,\n  authenticate,\n  cancel,\n  poll,\n  proceed,\n  register,\n  recoverPassword,\n  unlockAccount,\n  startTransaction,\n  handleInteractionCodeRedirect,\n  canProceed,\n  handleEmailVerifyCallback,\n  isEmailVerifyCallback,\n  parseEmailVerifyCallback,\n  isEmailVerifyCallbackError\n} from './idx';\nimport { OktaUserAgent } from './OktaUserAgent';\nimport { parseOAuthResponseFromUrl } from './oidc/parseFromUrl';\nimport {\n  getSavedTransactionMeta,\n  createTransactionMeta,\n  getTransactionMeta,\n  saveTransactionMeta,\n  clearTransactionMeta,\n  isTransactionMetaValid\n} from './idx/transactionMeta';\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore \n// Do not use this type in code, so it won't be emitted in the declaration output\nimport Emitter from 'tiny-emitter';\n\nclass OktaAuth implements OktaAuthInterface, SigninAPI, SignoutAPI {\n  options: OktaAuthOptions;\n  storageManager: StorageManager;\n  transactionManager: TransactionManager;\n  tx: TransactionAPI;\n  idx: IdxAPI;\n  session: SessionAPI;\n  pkce: PkceAPI;\n  static features: FeaturesAPI = features;\n  static crypto: CryptoAPI = crypto;\n  static webauthn: WebauthnAPI = webauthn;\n  features: FeaturesAPI = features;\n  token: TokenAPI;\n  _tokenQueue: PromiseQueue;\n  emitter: any;\n  tokenManager: TokenManager;\n  authStateManager: AuthStateManager;\n  serviceManager: ServiceManager;\n  http: HttpAPI;\n  fingerprint: FingerprintAPI;\n  _oktaUserAgent: OktaUserAgent;\n  _pending: { handleLogin: boolean };\n  constructor(args: OktaAuthOptions) {\n    const options = this.options = buildOptions(args);\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    this.storageManager = new StorageManager(options.storageManager!, options.cookies!, options.storageUtil!);\n    this.transactionManager = new TransactionManager(Object.assign({\n      storageManager: this.storageManager,\n    }, options.transactionManager));\n    this._oktaUserAgent = new OktaUserAgent();\n\n    this.tx = {\n      status: transactionStatus.bind(null, this),\n      resume: resumeTransaction.bind(null, this),\n      exists: Object.assign(transactionExists.bind(null, this), {\n        _get: (name) => {\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          const storage = options.storageUtil!.storage;\n          return storage.get(name);\n        }\n      }),\n      introspect: introspectAuthn.bind(null, this)\n    };\n\n    this.pkce = {\n      DEFAULT_CODE_CHALLENGE_METHOD: PKCE.DEFAULT_CODE_CHALLENGE_METHOD,\n      generateVerifier: PKCE.generateVerifier,\n      computeChallenge: PKCE.computeChallenge\n    };\n\n    // Add shims for compatibility, these will be removed in next major version. OKTA-362589\n    Object.assign(this.options.storageUtil, {\n      getPKCEStorage: this.storageManager.getLegacyPKCEStorage.bind(this.storageManager),\n      getHttpCache: this.storageManager.getHttpCache.bind(this.storageManager),\n    });\n\n    this._pending = { handleLogin: false };\n\n    if (isBrowser()) {\n      this.options = Object.assign(this.options, {\n        redirectUri: toAbsoluteUrl(args.redirectUri, window.location.origin), // allow relative URIs\n      });\n    }\n\n    // Digital clocks will drift over time, so the server\n    // can misalign with the time reported by the browser.\n    // The maxClockSkew allows relaxing the time-based\n    // validation of tokens (in seconds, not milliseconds).\n    // It currently defaults to 300, because 5 min is the\n    // default maximum tolerance allowed by Kerberos.\n    // (https://technet.microsoft.com/en-us/library/cc976357.aspx)\n    if (!args.maxClockSkew && args.maxClockSkew !== 0) {\n      this.options.maxClockSkew = DEFAULT_MAX_CLOCK_SKEW;\n    } else {\n      this.options.maxClockSkew = args.maxClockSkew;\n    }\n\n    // As some end user's devices can have their date \n    // and time incorrectly set, allow for the disabling\n    // of the jwt liftetime validation\n    this.options.ignoreLifetime = !!args.ignoreLifetime;\n\n    this.session = {\n      close: closeSession.bind(null, this),\n      exists: sessionExists.bind(null, this),\n      get: getSession.bind(null, this),\n      refresh: refreshSession.bind(null, this),\n      setCookieAndRedirect: setCookieAndRedirect.bind(null, this)\n    };\n\n    this._tokenQueue = new PromiseQueue();\n    const useQueue = (method) => {\n      return PromiseQueue.prototype.push.bind(this._tokenQueue, method, null);\n    };\n\n    // eslint-disable-next-line max-len\n    const getWithRedirectFn = useQueue(getWithRedirect.bind(null, this)) as GetWithRedirectFunction;\n    const getWithRedirectApi: GetWithRedirectAPI = Object.assign(getWithRedirectFn, {\n      // This is exposed so we can set window.location in our tests\n      _setLocation: function(url) {\n        window.location = url;\n      }\n    });\n    // eslint-disable-next-line max-len\n    const parseFromUrlFn = useQueue(parseFromUrl.bind(null, this)) as ParseFromUrlInterface;\n    const parseFromUrlApi: ParseFromUrlInterface = Object.assign(parseFromUrlFn, {\n      // This is exposed so we can mock getting window.history in our tests\n      _getHistory: function() {\n        return window.history;\n      },\n\n      // This is exposed so we can mock getting window.location in our tests\n      _getLocation: function() {\n        return window.location;\n      },\n\n      // This is exposed so we can mock getting window.document in our tests\n      _getDocument: function() {\n        return window.document;\n      }\n    });\n    this.token = {\n      prepareTokenParams: prepareTokenParams.bind(null, this),\n      exchangeCodeForTokens: exchangeCodeForTokens.bind(null, this),\n      getWithoutPrompt: getWithoutPrompt.bind(null, this),\n      getWithPopup: getWithPopup.bind(null, this),\n      getWithRedirect: getWithRedirectApi,\n      parseFromUrl: parseFromUrlApi,\n      decode: decodeToken,\n      revoke: revokeToken.bind(null, this),\n      renew: renewToken.bind(null, this),\n      renewTokensWithRefresh: renewTokensWithRefresh.bind(null, this),\n      renewTokens: renewTokens.bind(null, this),\n      getUserInfo: getUserInfo.bind(null, this),\n      verify: verifyToken.bind(null, this),\n      isLoginRedirect: isLoginRedirect.bind(null, this)\n    };\n    // Wrap all async token API methods using MethodQueue to avoid issues with concurrency\n    const syncMethods = [\n      // sync methods\n      'decode',\n      'isLoginRedirect',\n      // already bound\n      'getWithRedirect',\n      'parseFromUrl'\n    ];\n    Object.keys(this.token).forEach(key => {\n      if (syncMethods.indexOf(key) >= 0) { // sync methods should not be wrapped\n        return;\n      }\n      var method = this.token[key];\n      this.token[key] = PromiseQueue.prototype.push.bind(this._tokenQueue, method, null);\n    });\n\n    // IDX\n    const boundStartTransaction = startTransaction.bind(null, this);\n    this.idx = {\n      interact: interact.bind(null, this),\n      introspect: introspect.bind(null, this),\n      authenticate: authenticate.bind(null, this),\n      register: register.bind(null, this),\n      start: boundStartTransaction,\n      startTransaction: boundStartTransaction, // Use `start` instead. `startTransaction` will be removed in 7.0\n      poll: poll.bind(null, this),\n      proceed: proceed.bind(null, this),\n      cancel: cancel.bind(null, this),\n      recoverPassword: recoverPassword.bind(null, this),\n\n      // oauth redirect callback\n      handleInteractionCodeRedirect: handleInteractionCodeRedirect.bind(null, this),\n\n      // interaction required callback\n      isInteractionRequired: isInteractionRequired.bind(null, this),\n      isInteractionRequiredError,\n\n      // email verify callback\n      handleEmailVerifyCallback: handleEmailVerifyCallback.bind(null, this),\n      isEmailVerifyCallback,\n      parseEmailVerifyCallback,\n      isEmailVerifyCallbackError,\n      \n      getSavedTransactionMeta: getSavedTransactionMeta.bind(null, this),\n      createTransactionMeta: createTransactionMeta.bind(null, this),\n      getTransactionMeta: getTransactionMeta.bind(null, this),\n      saveTransactionMeta: saveTransactionMeta.bind(null, this),\n      clearTransactionMeta: clearTransactionMeta.bind(null, this),\n      isTransactionMetaValid,\n      setFlow: (flow: FlowIdentifier) => {\n        this.options.flow = flow;\n      },\n      getFlow: (): FlowIdentifier | undefined => {\n        return this.options.flow;\n      },\n      canProceed: canProceed.bind(null, this),\n      unlockAccount: unlockAccount.bind(null, this),\n    };\n\n    // HTTP\n    this.http = {\n      setRequestHeader: setRequestHeader.bind(null, this)\n    };\n\n    // Fingerprint API\n    this.fingerprint = fingerprint.bind(null, this);\n\n    this.emitter = new Emitter();\n\n    // TokenManager\n    this.tokenManager = new TokenManager(this, args.tokenManager);\n\n    // AuthStateManager\n    this.authStateManager = new AuthStateManager(this);\n\n    // ServiceManager\n    this.serviceManager = new ServiceManager(this, args.services);\n  }\n\n  start() {\n    // TODO: review tokenManager.start\n    this.tokenManager.start();\n    if (!this.token.isLoginRedirect()) {\n      this.authStateManager.updateAuthState();\n    }\n    this.serviceManager.start();\n  }\n\n  stop() {\n    // TODO: review tokenManager.stop\n    this.tokenManager.stop();\n    this.serviceManager.stop();\n  }\n\n  setHeaders(headers) {\n    this.options.headers = Object.assign({}, this.options.headers, headers);\n  }\n\n\n  // Authn  V1\n  async signIn(opts: SigninOptions): Promise<AuthTransaction> {\n    return this.signInWithCredentials(opts as SigninWithCredentialsOptions);\n  }\n\n  // Authn  V1\n  async signInWithCredentials(opts: SigninWithCredentialsOptions): Promise<AuthTransaction> {\n    opts = clone(opts || {});\n    const _postToTransaction = (options?) => {\n      delete opts.sendFingerprint;\n      return postToTransaction(this, '/api/v1/authn', opts, options);\n    };\n    if (!opts.sendFingerprint) {\n      return _postToTransaction();\n    }\n    return this.fingerprint()\n    .then(function(fingerprint) {\n      return _postToTransaction({\n        headers: {\n          'X-Device-Fingerprint': fingerprint\n        }\n      });\n    });\n  }\n\n  async signInWithRedirect(opts: SigninWithRedirectOptions = {}) {\n    const { originalUri, ...additionalParams } = opts;\n    if(this._pending.handleLogin) { \n      // Don't trigger second round\n      return;\n    }\n\n    this._pending.handleLogin = true;\n    try {\n      // Trigger default signIn redirect flow\n      if (originalUri) {\n        this.setOriginalUri(originalUri);\n      }\n      const params = Object.assign({\n        // TODO: remove this line when default scopes are changed OKTA-343294\n        scopes: this.options.scopes || ['openid', 'email', 'profile']\n      }, additionalParams);\n      await this.token.getWithRedirect(params);\n    } finally {\n      this._pending.handleLogin = false;\n    }\n  }\n\n  // Ends the current Okta SSO session without redirecting to Okta.\n  closeSession(): Promise<unknown> {\n    return this.session.close() // DELETE /api/v1/sessions/me\n    .then(async () => {\n      // Clear all local tokens\n      this.tokenManager.clear();\n    })\n    .catch(function(e) {\n      if (e.name === 'AuthApiError' && e.errorCode === 'E0000007') {\n        // Session does not exist or has already been closed\n        return null;\n      }\n      throw e;\n    });\n  }\n  \n  // Revokes the access token for the application session\n  async revokeAccessToken(accessToken?: AccessToken): Promise<unknown> {\n    if (!accessToken) {\n      accessToken = (await this.tokenManager.getTokens()).accessToken as AccessToken;\n      const accessTokenKey = this.tokenManager.getStorageKeyByType('accessToken');\n      this.tokenManager.remove(accessTokenKey);\n    }\n    // Access token may have been removed. In this case, we will silently succeed.\n    if (!accessToken) {\n      return Promise.resolve(null);\n    }\n    return this.token.revoke(accessToken);\n  }\n\n  // Revokes the refresh token for the application session\n  async revokeRefreshToken(refreshToken?: RefreshToken): Promise<unknown> {\n    if (!refreshToken) {\n      refreshToken = (await this.tokenManager.getTokens()).refreshToken as RefreshToken;\n      const refreshTokenKey = this.tokenManager.getStorageKeyByType('refreshToken');\n      this.tokenManager.remove(refreshTokenKey);\n    }\n    // Refresh token may have been removed. In this case, we will silently succeed.\n    if (!refreshToken) {\n      return Promise.resolve(null);\n    }\n    return this.token.revoke(refreshToken);\n  }\n\n  getSignOutRedirectUrl(options: SignoutRedirectUrlOptions = {}) {\n    let {\n      idToken,\n      postLogoutRedirectUri,\n      state,\n    } = options;\n    if (!idToken) {\n      idToken = this.tokenManager.getTokensSync().idToken as IDToken;\n    }\n    if (!idToken) {\n      return '';\n    }\n    if (!postLogoutRedirectUri) {\n      postLogoutRedirectUri = this.options.postLogoutRedirectUri;\n    }\n\n    const logoutUrl = getOAuthUrls(this).logoutUrl;\n    const idTokenHint = idToken.idToken; // a string\n    let logoutUri = logoutUrl + '?id_token_hint=' + encodeURIComponent(idTokenHint);\n    if (postLogoutRedirectUri) {\n      logoutUri += '&post_logout_redirect_uri=' + encodeURIComponent(postLogoutRedirectUri);\n    } \n    // State allows option parameters to be passed to logout redirect uri\n    if (state) {\n      logoutUri += '&state=' + encodeURIComponent(state);\n    }\n\n    return logoutUri;\n  }\n\n  // Revokes refreshToken or accessToken, clears all local tokens, then redirects to Okta to end the SSO session.\n  async signOut(options?: SignoutOptions) {\n    options = Object.assign({}, options);\n  \n    // postLogoutRedirectUri must be whitelisted in Okta Admin UI\n    var defaultUri = window.location.origin;\n    var currentUri = window.location.href;\n    var postLogoutRedirectUri = options.postLogoutRedirectUri\n      || this.options.postLogoutRedirectUri\n      || defaultUri;\n  \n    var accessToken = options.accessToken;\n    var refreshToken = options.refreshToken;\n    var revokeAccessToken = options.revokeAccessToken !== false;\n    var revokeRefreshToken = options.revokeRefreshToken !== false;\n  \n    if (revokeRefreshToken && typeof refreshToken === 'undefined') {\n      refreshToken = this.tokenManager.getTokensSync().refreshToken as RefreshToken;\n    }\n\n    if (revokeAccessToken && typeof accessToken === 'undefined') {\n      accessToken = this.tokenManager.getTokensSync().accessToken as AccessToken;\n    }\n  \n    if (!options.idToken) {\n      options.idToken = this.tokenManager.getTokensSync().idToken as IDToken;\n    }\n\n    if (revokeRefreshToken && refreshToken) {\n      await this.revokeRefreshToken(refreshToken);\n    }\n\n    if (revokeAccessToken && accessToken) {\n      await this.revokeAccessToken(accessToken);\n    }\n\n    const logoutUri = this.getSignOutRedirectUrl({ ...options, postLogoutRedirectUri });\n    // No logoutUri? This can happen if the storage was cleared.\n    // Fallback to XHR signOut, then simulate a redirect to the post logout uri\n    if (!logoutUri) {\n      // local tokens are cleared once session is closed\n      return this.closeSession() // can throw if the user cannot be signed out\n      .then(function() {\n        if (postLogoutRedirectUri === currentUri) {\n          window.location.reload(); // force a hard reload if URI is not changing\n        } else {\n          window.location.assign(postLogoutRedirectUri);\n        }\n      });\n    } else {\n      if (options.clearTokensBeforeRedirect) {\n        // Clear all local tokens\n        this.tokenManager.clear();\n      } else {\n        this.tokenManager.addPendingRemoveFlags();\n      }\n      // Flow ends with logout redirect\n      window.location.assign(logoutUri);\n    }\n  }\n\n  webfinger(opts): Promise<object> {\n    var url = '/.well-known/webfinger' + toQueryString(opts);\n    var options = {\n      headers: {\n        'Accept': 'application/jrd+json'\n      }\n    };\n    return get(this, url, options);\n  }\n\n  //\n  // Common Methods from downstream SDKs\n  //\n\n  // Returns true if both accessToken and idToken are not expired\n  // If `autoRenew` option is set, will attempt to renew expired tokens before returning.\n  async isAuthenticated(options: IsAuthenticatedOptions = {}): Promise<boolean> {\n    // TODO: remove dependency on tokenManager options in next major version - OKTA-473815\n    const { autoRenew, autoRemove } = this.tokenManager.getOptions();\n\n    const shouldRenew = options.onExpiredToken ? options.onExpiredToken === 'renew' : autoRenew;\n    const shouldRemove = options.onExpiredToken ? options.onExpiredToken === 'remove' : autoRemove;\n\n    let { accessToken } = this.tokenManager.getTokensSync();\n    if (accessToken && this.tokenManager.hasExpired(accessToken)) {\n      accessToken = undefined;\n      if (shouldRenew) {\n        try {\n          accessToken = await this.tokenManager.renew('accessToken') as AccessToken;\n        } catch {\n          // Renew errors will emit an \"error\" event \n        }\n      } else if (shouldRemove) {\n        this.tokenManager.remove('accessToken');\n      }\n    }\n\n    let { idToken } = this.tokenManager.getTokensSync();\n    if (idToken && this.tokenManager.hasExpired(idToken)) {\n      idToken = undefined;\n      if (shouldRenew) {\n        try {\n          idToken = await this.tokenManager.renew('idToken') as IDToken;\n        } catch {\n          // Renew errors will emit an \"error\" event \n        }\n      } else if (shouldRemove) {\n        this.tokenManager.remove('idToken');\n      }\n    }\n\n    return !!(accessToken && idToken);\n  }\n\n  async getUser(): Promise<UserClaims> {\n    const { idToken, accessToken } = this.tokenManager.getTokensSync();\n    return this.token.getUserInfo(accessToken, idToken);\n  }\n\n  getIdToken(): string | undefined {\n    const { idToken } = this.tokenManager.getTokensSync();\n    return idToken ? idToken.idToken : undefined;\n  }\n\n  getAccessToken(): string | undefined {\n    const { accessToken } = this.tokenManager.getTokensSync();\n    return accessToken ? accessToken.accessToken : undefined;\n  }\n\n  getRefreshToken(): string | undefined {\n    const { refreshToken } = this.tokenManager.getTokensSync();\n    return refreshToken ? refreshToken.refreshToken : undefined;\n  }\n\n  /**\n   * Store parsed tokens from redirect url\n   */\n  async storeTokensFromRedirect(): Promise<void> {\n    const { tokens } = await this.token.parseFromUrl();\n    this.tokenManager.setTokens(tokens);\n  }\n\n  setOriginalUri(originalUri: string, state?: string): void {\n    // always store in session storage\n    const sessionStorage = browserStorage.getSessionStorage();\n    sessionStorage.setItem(REFERRER_PATH_STORAGE_KEY, originalUri);\n\n    // to support multi-tab flows, set a state in constructor or pass as param\n    state = state || this.options.state;\n    if (state) {\n      const sharedStorage = this.storageManager.getOriginalUriStorage();\n      sharedStorage.setItem(state, originalUri);\n    }\n  }\n\n  getOriginalUri(state?: string): string | undefined {\n    // Prefer shared storage (if state is available)\n    state = state || this.options.state;\n    if (state) {\n      const sharedStorage = this.storageManager.getOriginalUriStorage();\n      const originalUri = sharedStorage.getItem(state);\n      if (originalUri) {\n        return originalUri;\n      }\n    }\n\n    // Try to load from session storage\n    const storage = browserStorage.getSessionStorage();\n    return storage ? storage.getItem(REFERRER_PATH_STORAGE_KEY) || undefined : undefined;\n  }\n\n  removeOriginalUri(state?: string): void {\n    // Remove from sessionStorage\n    const storage = browserStorage.getSessionStorage();\n    storage.removeItem(REFERRER_PATH_STORAGE_KEY);\n\n    // Also remove from shared storage\n    state = state || this.options.state;\n    if (state) {\n      const sharedStorage = this.storageManager.getOriginalUriStorage();\n      sharedStorage.removeItem && sharedStorage.removeItem(state);\n    }\n  }\n\n  isLoginRedirect(): boolean {\n    return isLoginRedirect(this);\n  }\n\n  async handleLoginRedirect(tokens?: Tokens, originalUri?: string): Promise<void> {\n    let state = this.options.state;\n\n    // Store tokens and update AuthState by the emitted events\n    if (tokens) {\n      this.tokenManager.setTokens(tokens);\n      originalUri = originalUri || this.getOriginalUri(this.options.state);\n    } else if (this.isLoginRedirect()) {\n      try {\n        // For redirect flow, get state from the URL and use it to retrieve the originalUri\n        const oAuthResponse = await parseOAuthResponseFromUrl(this, {});\n        state = oAuthResponse.state;\n        originalUri = originalUri || this.getOriginalUri(state);\n        await this.storeTokensFromRedirect();\n      } catch(e) {\n        // auth state should be updated\n        await this.authStateManager.updateAuthState();\n        throw e;\n      }\n    } else {\n      return; // nothing to do\n    }\n    \n    // ensure auth state has been updated\n    await this.authStateManager.updateAuthState();\n\n    // clear originalUri from storage\n    this.removeOriginalUri(state);\n\n    // Redirect to originalUri\n    const { restoreOriginalUri } = this.options;\n    if (restoreOriginalUri) {\n      await restoreOriginalUri(this, originalUri);\n    } else if (originalUri) {\n      window.location.replace(originalUri);\n    }\n  }\n\n  isPKCE(): boolean {\n    return !!this.options.pkce;\n  }\n\n  hasResponseType(responseType: OAuthResponseType): boolean {\n    let hasResponseType = false;\n    if (Array.isArray(this.options.responseType) && this.options.responseType.length) {\n      hasResponseType = this.options.responseType.indexOf(responseType) >= 0;\n    } else {\n      hasResponseType = this.options.responseType === responseType;\n    }\n    return hasResponseType;\n  }\n\n  isAuthorizationCodeFlow(): boolean {\n    return this.hasResponseType('code');\n  }\n\n  // { username, password, (relayState), (context) }\n  // signIn(opts: SignInWithCredentialsOptions): Promise<AuthTransaction> {\n  //   return postToTransaction(this, '/api/v1/authn', opts);\n  // }\n\n  getIssuerOrigin(): string {\n    // Infer the URL from the issuer URL, omitting the /oauth2/{authServerId}\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return this.options.issuer!.split('/oauth2/')[0];\n  }\n\n  // { username, (relayState) }\n  forgotPassword(opts): Promise<AuthTransaction> {\n    return postToTransaction(this, '/api/v1/authn/recovery/password', opts);\n  }\n\n  // { username, (relayState) }\n  unlockAccount(opts: ForgotPasswordOptions): Promise<AuthTransaction> {\n    return postToTransaction(this, '/api/v1/authn/recovery/unlock', opts);\n  }\n\n  // { recoveryToken }\n  verifyRecoveryToken(opts: VerifyRecoveryTokenOptions): Promise<AuthTransaction> {\n    return postToTransaction(this, '/api/v1/authn/recovery/token', opts);\n  }\n\n  // Escape hatch method to make arbitrary OKTA API call\n  async invokeApiMethod(options: RequestOptions): Promise<unknown> {\n    if (!options.accessToken) {\n      const accessToken = (await this.tokenManager.getTokens()).accessToken as AccessToken;\n      options.accessToken = accessToken?.accessToken;\n    }\n    return httpRequest(this, options);\n  }\n}\n\n// Hoist feature detection functions to prototype & static type\nOktaAuth.features = OktaAuth.prototype.features = features;\n\n// Also hoist constants for CommonJS users\nObject.assign(OktaAuth, {\n  constants\n});\n\nexport default OktaAuth;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}