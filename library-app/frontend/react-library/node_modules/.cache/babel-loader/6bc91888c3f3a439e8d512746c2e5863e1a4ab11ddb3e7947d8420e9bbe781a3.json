{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\full-stack\\\\full-stack-projects\\\\library-app\\\\frontend\\\\react-library\\\\src\\\\layouts\\\\ManageLibraryPage\\\\components\\\\AdminMessages.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport AdminMessageRequest from '../../../models/AdminMessageRequest';\nimport { Pagination } from '../../Utils/Pagination';\nimport { SpinnerLoading } from '../../Utils/SpinnerLoading';\nimport { AdminMessage } from './AdminMessage';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const AdminMessages = () => {\n  _s();\n  const {\n    isAuthenticated,\n    getAccessTokenSilently\n  } = useAuth0();\n\n  // Normal Loading Pieces\n  const [isLoadingMessages, setIsLoadingMessages] = useState(true);\n  const [httpError, setHttpError] = useState(null);\n\n  // Messages endpoint State\n  const [messages, setMessages] = useState([]);\n  const [messagesPerPage] = useState(5);\n\n  // Pagination\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n\n  // Recall useEffect\n  const [btnSubmit, setBtnSubmit] = useState(false);\n  useEffect(() => {\n    const fetchUserMessages = async () => {\n      if (isAuthenticated) {\n        const accessToken = await getAccessTokenSilently();\n        const url = `http://localhost:8080/api/messages/search/findByClosed?closed=false&page=${currentPage - 1}&size=${messagesPerPage}`;\n        const requestOptions = {\n          method: 'GET',\n          headers: {\n            Authorization: `Bearer ${accessToken}`,\n            'Content-Type': 'application/json'\n          }\n        };\n        const messagesResponse = await fetch(url, requestOptions);\n        if (!messagesResponse.ok) {\n          throw new Error('Something went wrong!');\n        }\n        const messagesResponseJson = await messagesResponse.json();\n        setMessages(messagesResponseJson._embedded.messages);\n        setTotalPages(messagesResponseJson.page.totalPages);\n      }\n      setIsLoadingMessages(false);\n    };\n    fetchUserMessages().catch(error => {\n      setIsLoadingMessages(false);\n      setHttpError(error.message);\n    });\n    window.scrollTo(0, 0);\n  }, [isAuthenticated, getAccessTokenSilently, currentPage, btnSubmit]);\n  if (isLoadingMessages) {\n    return /*#__PURE__*/_jsxDEV(SpinnerLoading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  }\n  if (httpError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container m-5\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: httpError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  }\n  async function submitResponseToQuestion(id, response) {\n    const url = `http://localhost:8080/api/messages/secure/admin/message`;\n    const accessToken = await getAccessTokenSilently();\n    if (isAuthenticated && id !== null && response !== '') {\n      const messageAdminRequestModel = new AdminMessageRequest(id, response);\n      const requestOptions = {\n        method: 'PUT',\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(messageAdminRequestModel)\n      };\n      const messageAdminRequestModelResponse = await fetch(url, requestOptions);\n      if (!messageAdminRequestModelResponse.ok) {\n        throw new Error('Something went wrong!');\n      }\n      setBtnSubmit(!btnSubmit);\n    }\n  }\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-3\",\n    children: [messages.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Pending Q/A: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this), messages.map(message => /*#__PURE__*/_jsxDEV(AdminMessage, {\n        message: message,\n        submitResponseToQuestion: submitResponseToQuestion\n      }, message.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"No pending Q/A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: currentPage,\n      totalPages: totalPages,\n      paginate: paginate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminMessages, \"KBG6sKHvn1zbyVKOWM9s3ZZ/z68=\", false, function () {\n  return [useAuth0];\n});\n_c = AdminMessages;\nvar _c;\n$RefreshReg$(_c, \"AdminMessages\");","map":{"version":3,"names":["useEffect","useState","AdminMessageRequest","Pagination","SpinnerLoading","AdminMessage","useAuth0","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminMessages","_s","isAuthenticated","getAccessTokenSilently","isLoadingMessages","setIsLoadingMessages","httpError","setHttpError","messages","setMessages","messagesPerPage","currentPage","setCurrentPage","totalPages","setTotalPages","btnSubmit","setBtnSubmit","fetchUserMessages","accessToken","url","requestOptions","method","headers","Authorization","messagesResponse","fetch","ok","Error","messagesResponseJson","json","_embedded","page","catch","error","message","window","scrollTo","fileName","_jsxFileName","lineNumber","columnNumber","className","children","submitResponseToQuestion","id","response","messageAdminRequestModel","body","JSON","stringify","messageAdminRequestModelResponse","paginate","pageNumber","length","map","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/full-stack/full-stack-projects/library-app/frontend/react-library/src/layouts/ManageLibraryPage/components/AdminMessages.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport AdminMessageRequest from '../../../models/AdminMessageRequest';\nimport MessageModel from '../../../models/MessageModel';\nimport { Pagination } from '../../Utils/Pagination';\nimport { SpinnerLoading } from '../../Utils/SpinnerLoading';\nimport { AdminMessage } from './AdminMessage';\nimport { useAuth0 } from '@auth0/auth0-react';\n\nexport const AdminMessages = () => {\n    \n    const { isAuthenticated, getAccessTokenSilently } = useAuth0();\n\n    // Normal Loading Pieces\n    const [isLoadingMessages, setIsLoadingMessages] = useState(true);\n    const [httpError, setHttpError] = useState(null);\n    \n    // Messages endpoint State\n    const [messages, setMessages] = useState<MessageModel[]>([]);\n    const [messagesPerPage] = useState(5);\n\n    // Pagination\n    const [currentPage, setCurrentPage] = useState(1);\n    const [totalPages, setTotalPages] = useState(0);\n\n    // Recall useEffect\n    const [btnSubmit, setBtnSubmit] = useState(false);\n\n    useEffect(() => {\n        const fetchUserMessages = async () => {\n            if (isAuthenticated) {\n                const accessToken = await getAccessTokenSilently();\n                const url = `http://localhost:8080/api/messages/search/findByClosed?closed=false&page=${currentPage - 1}&size=${messagesPerPage}`;\n                const requestOptions = {\n                    method: 'GET',\n                    headers: {\n                        Authorization: `Bearer ${accessToken}`,\n                        'Content-Type': 'application/json'\n                    }\n                };\n                const messagesResponse = await fetch(url, requestOptions);\n                if (!messagesResponse.ok) {\n                    throw new Error('Something went wrong!');\n                }\n                const messagesResponseJson = await messagesResponse.json();\n\n                setMessages(messagesResponseJson._embedded.messages);\n                setTotalPages(messagesResponseJson.page.totalPages);\n            }\n            setIsLoadingMessages(false);\n        }\n        fetchUserMessages().catch((error: any) => {\n            setIsLoadingMessages(false);\n            setHttpError(error.message);\n        })\n        window.scrollTo(0, 0);\n    }, [isAuthenticated, getAccessTokenSilently, currentPage, btnSubmit]);\n\n    if (isLoadingMessages) {\n        return (\n            <SpinnerLoading/>\n        );\n    }\n\n    if (httpError) {\n        return (\n            <div className='container m-5'>\n                <p>{httpError}</p>\n            </div>\n        );\n    }\n\n\n    async function submitResponseToQuestion(id: number, response: string) {\n        const url = `http://localhost:8080/api/messages/secure/admin/message`;\n        const accessToken = await getAccessTokenSilently();\n        if (isAuthenticated && id !== null && response !== '') {\n            const messageAdminRequestModel: AdminMessageRequest = new AdminMessageRequest(id, response);\n            const requestOptions = {\n                method: 'PUT',\n                headers: {\n                    Authorization: `Bearer ${accessToken}`,\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(messageAdminRequestModel)\n            };\n\n            const messageAdminRequestModelResponse = await fetch(url, requestOptions);\n            if (!messageAdminRequestModelResponse.ok) {\n                throw new Error('Something went wrong!');\n            }\n            setBtnSubmit(!btnSubmit);\n        }\n    }\n\n    const paginate = (pageNumber: number) => setCurrentPage(pageNumber);\n\n    return (\n        <div className='mt-3'>\n            {messages.length > 0 ? \n                <>\n                    <h5>Pending Q/A: </h5>\n                    {messages.map(message => (\n                        <AdminMessage message={message} key={message.id} submitResponseToQuestion={submitResponseToQuestion}/>\n                    ))}\n                </>\n                :\n                <h5>No pending Q/A</h5>\n            }\n            {totalPages > 1 && <Pagination currentPage={currentPage} totalPages={totalPages} paginate={paginate}/>}\n        </div>\n    );\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,mBAAmB,MAAM,qCAAqC;AAErE,SAASC,UAAU,QAAQ,wBAAwB;AACnD,SAASC,cAAc,QAAQ,4BAA4B;AAC3D,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,SAASC,QAAQ,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE9C,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE/B,MAAM;IAAEC,eAAe;IAAEC;EAAuB,CAAC,GAAGR,QAAQ,CAAC,CAAC;;EAE9D;EACA,MAAM,CAACS,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAChE,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;;EAEhD;EACA,MAAM,CAACkB,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAiB,EAAE,CAAC;EAC5D,MAAM,CAACoB,eAAe,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;;EAErC;EACA,MAAM,CAACqB,WAAW,EAAEC,cAAc,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACuB,UAAU,EAAEC,aAAa,CAAC,GAAGxB,QAAQ,CAAC,CAAC,CAAC;;EAE/C;EACA,MAAM,CAACyB,SAAS,EAAEC,YAAY,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EAEjDD,SAAS,CAAC,MAAM;IACZ,MAAM4B,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAIf,eAAe,EAAE;QACjB,MAAMgB,WAAW,GAAG,MAAMf,sBAAsB,CAAC,CAAC;QAClD,MAAMgB,GAAG,GAAG,4EAA4ER,WAAW,GAAG,CAAC,SAASD,eAAe,EAAE;QACjI,MAAMU,cAAc,GAAG;UACnBC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACLC,aAAa,EAAE,UAAUL,WAAW,EAAE;YACtC,cAAc,EAAE;UACpB;QACJ,CAAC;QACD,MAAMM,gBAAgB,GAAG,MAAMC,KAAK,CAACN,GAAG,EAAEC,cAAc,CAAC;QACzD,IAAI,CAACI,gBAAgB,CAACE,EAAE,EAAE;UACtB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;QAC5C;QACA,MAAMC,oBAAoB,GAAG,MAAMJ,gBAAgB,CAACK,IAAI,CAAC,CAAC;QAE1DpB,WAAW,CAACmB,oBAAoB,CAACE,SAAS,CAACtB,QAAQ,CAAC;QACpDM,aAAa,CAACc,oBAAoB,CAACG,IAAI,CAAClB,UAAU,CAAC;MACvD;MACAR,oBAAoB,CAAC,KAAK,CAAC;IAC/B,CAAC;IACDY,iBAAiB,CAAC,CAAC,CAACe,KAAK,CAAEC,KAAU,IAAK;MACtC5B,oBAAoB,CAAC,KAAK,CAAC;MAC3BE,YAAY,CAAC0B,KAAK,CAACC,OAAO,CAAC;IAC/B,CAAC,CAAC;IACFC,MAAM,CAACC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EACzB,CAAC,EAAE,CAAClC,eAAe,EAAEC,sBAAsB,EAAEQ,WAAW,EAAEI,SAAS,CAAC,CAAC;EAErE,IAAIX,iBAAiB,EAAE;IACnB,oBACIP,OAAA,CAACJ,cAAc;MAAA4C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAEzB;EAEA,IAAIlC,SAAS,EAAE;IACX,oBACIT,OAAA;MAAK4C,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC1B7C,OAAA;QAAA6C,QAAA,EAAIpC;MAAS;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC;EAEd;EAGA,eAAeG,wBAAwBA,CAACC,EAAU,EAAEC,QAAgB,EAAE;IAClE,MAAM1B,GAAG,GAAG,yDAAyD;IACrE,MAAMD,WAAW,GAAG,MAAMf,sBAAsB,CAAC,CAAC;IAClD,IAAID,eAAe,IAAI0C,EAAE,KAAK,IAAI,IAAIC,QAAQ,KAAK,EAAE,EAAE;MACnD,MAAMC,wBAA6C,GAAG,IAAIvD,mBAAmB,CAACqD,EAAE,EAAEC,QAAQ,CAAC;MAC3F,MAAMzB,cAAc,GAAG;QACnBC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACLC,aAAa,EAAE,UAAUL,WAAW,EAAE;UACtC,cAAc,EAAE;QACpB,CAAC;QACD6B,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACH,wBAAwB;MACjD,CAAC;MAED,MAAMI,gCAAgC,GAAG,MAAMzB,KAAK,CAACN,GAAG,EAAEC,cAAc,CAAC;MACzE,IAAI,CAAC8B,gCAAgC,CAACxB,EAAE,EAAE;QACtC,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MAC5C;MACAX,YAAY,CAAC,CAACD,SAAS,CAAC;IAC5B;EACJ;EAEA,MAAMoC,QAAQ,GAAIC,UAAkB,IAAKxC,cAAc,CAACwC,UAAU,CAAC;EAEnE,oBACIvD,OAAA;IAAK4C,SAAS,EAAC,MAAM;IAAAC,QAAA,GAChBlC,QAAQ,CAAC6C,MAAM,GAAG,CAAC,gBAChBxD,OAAA,CAAAE,SAAA;MAAA2C,QAAA,gBACI7C,OAAA;QAAA6C,QAAA,EAAI;MAAa;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACrBhC,QAAQ,CAAC8C,GAAG,CAACpB,OAAO,iBACjBrC,OAAA,CAACH,YAAY;QAACwC,OAAO,EAAEA,OAAQ;QAAkBS,wBAAwB,EAAEA;MAAyB,GAA/DT,OAAO,CAACU,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAsD,CACxG,CAAC;IAAA,eACJ,CAAC,gBAEH3C,OAAA;MAAA6C,QAAA,EAAI;IAAc;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAE1B3B,UAAU,GAAG,CAAC,iBAAIhB,OAAA,CAACL,UAAU;MAACmB,WAAW,EAAEA,WAAY;MAACE,UAAU,EAAEA,UAAW;MAACsC,QAAQ,EAAEA;IAAS;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrG,CAAC;AAEd,CAAC;AAAAvC,EAAA,CAvGYD,aAAa;EAAA,QAE8BL,QAAQ;AAAA;AAAA4D,EAAA,GAFnDvD,aAAa;AAAA,IAAAuD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}